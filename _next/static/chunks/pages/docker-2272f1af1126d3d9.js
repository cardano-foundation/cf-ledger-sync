(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[366],{4102:function(e,n,r){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docker",function(){return r(4982)}])},4982:function(e,n,r){"use strict";r.r(n),r.d(n,{__toc:function(){return l}});var s=r(5893),o=r(2673),i=r(2169),t=r(2069);r(9488);var a=r(2643);r(2154);let l=[{depth:2,value:"Prerequisites",id:"prerequisites"},{depth:2,value:"Directory Structure",id:"directory-structure"},{depth:2,value:"Environment Variable Configuration",id:"environment-variable-configuration"},{depth:3,value:"Variable Naming Convention",id:"variable-naming-convention"},{depth:2,value:"1. Running LedgerSync with PostgreSQL",id:"1-running-ledgersync-with-postgresql"},{depth:3,value:"Command",id:"command"},{depth:2,value:"2. Running LedgerSync with External PostgreSQL",id:"2-running-ledgersync-with-external-postgresql"},{depth:3,value:"Environment Variables",id:"environment-variables"},{depth:3,value:"Command",id:"command-1"},{depth:2,value:"Changing the Network",id:"changing-the-network"},{depth:3,value:"Configuration Steps",id:"configuration-steps"},{depth:2,value:"Configuring N2C (Node-to-Client) - Optional",id:"configuring-n2c-node-to-client---optional"},{depth:3,value:"Configuration Options",id:"configuration-options"},{depth:3,value:"1. Connecting to a Local Cardano Node",id:"1-connecting-to-a-local-cardano-node"},{depth:3,value:"2. Connecting to a Remote Cardano Node via Socat",id:"2-connecting-to-a-remote-cardano-node-via-socat"},{depth:2,value:"Environment Variables Reference",id:"environment-variables-reference"}];function c(e){let n=Object.assign({h1:"h1",p:"p",a:"a",code:"code",h2:"h2",ul:"ul",li:"li",ol:"ol",strong:"strong",blockquote:"blockquote",h3:"h3",pre:"pre",span:"span",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,a.a)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{children:"Running Ledger Sync with Docker Compose"}),"\n",(0,s.jsxs)(n.p,{children:["This guide explains how to run the LedgerSync main indexer application using Docker Compose.\nYou will find the necessary Docker Compose files in the ",(0,s.jsx)(n.a,{href:"https://github.com/cardano-foundation/cf-ledger-sync/tree/main/docker",children:(0,s.jsx)(n.code,{children:"docker"})})," directory of the repository."]}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Ensure that Docker and Docker Compose are installed on your system."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"directory-structure",children:"Directory Structure"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"docker"})," directory contains the following Docker Compose files:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"docker-compose-monolith.yml"}),": Combines both the LedgerSync application and PostgreSQL."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"main-app-compose.yml"}),": For running the LedgerSync application only, connecting to an external PostgreSQL database."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"postgres-compose.yml"}),": For configuring and running the PostgreSQL database."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"environment-variable-configuration",children:"Environment Variable Configuration"}),"\n",(0,s.jsx)(n.p,{children:"You can configure the environment variables using one of the following methods:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:".env file"}),": Place your environment variables in the ",(0,s.jsx)(n.code,{children:".env"})," file located in the ",(0,s.jsx)(n.code,{children:"docker"})," directory."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"application.properties file"}),": Update the ",(0,s.jsx)(n.code,{children:"application.properties"})," file in the ",(0,s.jsx)(n.code,{children:"docker"})," directory. This file is mounted as a volume in the Docker container, and the application reads the environment variables from it."]}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note"}),": If you set a variable in the ",(0,s.jsx)(n.code,{children:"application.properties"})," file, ensure that the same variable is removed from the Docker Compose YAML file or ",(0,s.jsx)(n.code,{children:".env"})," file. The value from the ",(0,s.jsx)(n.code,{children:"application.properties"})," file will be overridden if the variable is present in multiple places."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"variable-naming-convention",children:"Variable Naming Convention"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["In ",(0,s.jsx)(n.code,{children:"application.properties"}),", use ",(0,s.jsx)(n.code,{children:"."})," as a separator (e.g., ",(0,s.jsx)(n.code,{children:"spring.datasource.url"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:["In Docker Compose YAML files or the ",(0,s.jsx)(n.code,{children:".env"})," file, use ",(0,s.jsx)(n.code,{children:"_"})," as a separator and uppercase letters (e.g., ",(0,s.jsx)(n.code,{children:"SPRING_DATASOURCE_URL"}),")."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"1-running-ledgersync-with-postgresql",children:"1. Running LedgerSync with PostgreSQL"}),"\n",(0,s.jsxs)(n.p,{children:["To run the Ledger Sync main indexer application with an integrated PostgreSQL database, use the ",(0,s.jsx)(n.code,{children:"docker-compose-monolith.yml"})," file.\nThis file includes configurations from both ",(0,s.jsx)(n.code,{children:"main-app-compose.yml"})," and ",(0,s.jsx)(n.code,{children:"postgres-compose.yml"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"command",children:"Command"}),"\n",(0,s.jsx)(n.pre,{"data-language":"shell","data-theme":"default",children:(0,s.jsx)(n.code,{"data-language":"shell","data-theme":"default",children:(0,s.jsxs)(n.span,{className:"line",children:[(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"docker-compose"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"-f"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"docker-compose-monolith.yml"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"up"})]})})}),"\n",(0,s.jsx)(n.p,{children:"This command will start both the LedgerSync application and PostgreSQL database."}),"\n",(0,s.jsx)(n.h2,{id:"2-running-ledgersync-with-external-postgresql",children:"2. Running LedgerSync with External PostgreSQL"}),"\n",(0,s.jsxs)(n.p,{children:["If you prefer to connect LedgerSync to an external PostgreSQL database, use the ",(0,s.jsx)(n.code,{children:"main-app-compose.yml"})," file. You will need to configure the PostgreSQL connection details in the ",(0,s.jsx)(n.code,{children:".env"})," file or ",(0,s.jsx)(n.code,{children:"application.properties"})," file."]}),"\n",(0,s.jsx)(n.h3,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["In the ",(0,s.jsx)(n.code,{children:".env"})," file"]}),":"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{"data-language":"shell","data-theme":"default",children:(0,s.jsxs)(n.code,{"data-language":"shell","data-theme":"default",children:[(0,s.jsxs)(n.span,{className:"line",children:[(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"SPRING_DATASOURCE_URL"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"jdbc:postgresql://"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"<"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"hos"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"t"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:">"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:":"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"<"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"por"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"t"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:">"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"/"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"<"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"databas"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"e"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:">"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"?currentSchema="}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"<"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"schem"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"a"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:">"})]}),"\n",(0,s.jsxs)(n.span,{className:"line",children:[(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"SPRING_DATASOURCE_USERNAME"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"=<"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"usernam"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"e"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:">"})]}),"\n",(0,s.jsxs)(n.span,{className:"line",children:[(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"SPRING_DATASOURCE_PASSWORD"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"=<"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"passwor"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"d"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:">"})]})]})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["In the ",(0,s.jsx)(n.code,{children:"application.properties"})," file"]}),":"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{"data-language":"properties","data-theme":"default",children:(0,s.jsxs)(n.code,{"data-language":"properties","data-theme":"default",children:[(0,s.jsxs)(n.span,{className:"line",children:[(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"spring.datasource.url="}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"jdbc:postgresql://<host>:<port>/<database>?"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"currentSchema="}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"<schema>"})]}),"\n",(0,s.jsxs)(n.span,{className:"line",children:[(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"spring.datasource.username="}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"<username>"})]}),"\n",(0,s.jsxs)(n.span,{className:"line",children:[(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"spring.datasource.password="}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"<password>"})]})]})}),"\n",(0,s.jsxs)(n.p,{children:["Make sure to remove these variables from the ",(0,s.jsx)(n.code,{children:".env"})," file or Docker Compose YAML if they are set in ",(0,s.jsx)(n.code,{children:"application.properties"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"command-1",children:"Command"}),"\n",(0,s.jsx)(n.pre,{"data-language":"shell","data-theme":"default",children:(0,s.jsx)(n.code,{"data-language":"shell","data-theme":"default",children:(0,s.jsxs)(n.span,{className:"line",children:[(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"docker-compose"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"-f"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"main-app-compose.yml"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"up"})]})})}),"\n",(0,s.jsx)(n.p,{children:"This command will start the LedgerSync application and connect it to your external PostgreSQL database."}),"\n",(0,s.jsx)(n.h2,{id:"changing-the-network",children:"Changing the Network"}),"\n",(0,s.jsx)(n.p,{children:"By default, LedgerSync is configured to connect to the Cardano mainnet. However, you can easily change the network to connect\nto other Cardano networks such as the preprod or preview or sanchonet by modifying the network-related environment variables."}),"\n",(0,s.jsx)(n.h3,{id:"configuration-steps",children:"Configuration Steps"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["Modify the ",(0,s.jsx)(n.code,{children:".env"})," file"]}),":"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Update the network-related environment variables in the ",(0,s.jsx)(n.code,{children:".env"})," file. For example, to connect to the Cardano preprod:"]}),"\n",(0,s.jsx)(n.pre,{"data-language":"shell","data-theme":"default",children:(0,s.jsxs)(n.code,{"data-language":"shell","data-theme":"default",children:[(0,s.jsxs)(n.span,{className:"line",children:[(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"NETWORK"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"preprod"})]}),"\n",(0,s.jsx)(n.span,{className:"line",children:" "}),"\n",(0,s.jsxs)(n.span,{className:"line",children:[(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"STORE_CARDANO_HOST"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"preprod-node.world.dev.cardano.org"})]}),"\n",(0,s.jsxs)(n.span,{className:"line",children:[(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"STORE_CARDANO_PORT"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-constant)"},children:"30000"})]}),"\n",(0,s.jsxs)(n.span,{className:"line",children:[(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"STORE_CARDANO_PROTOCOLMAGIC"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-constant)"},children:"1"})]})]})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Update application.properties"}),":"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Alternatively, if you're using application.properties for configuration, update the relevant properties as follows:"}),"\n",(0,s.jsx)(n.pre,{"data-language":"text","data-theme":"default",children:(0,s.jsxs)(n.code,{"data-language":"text","data-theme":"default",children:[(0,s.jsx)(n.span,{className:"line",children:(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"network=preprod"})}),"\n",(0,s.jsx)(n.span,{className:"line",children:(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"}})}),"\n",(0,s.jsx)(n.span,{className:"line",children:(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"store.cardano.host=preprod-node.world.dev.cardano.org"})}),"\n",(0,s.jsx)(n.span,{className:"line",children:(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"store.cardano.port=30000"})}),"\n",(0,s.jsx)(n.span,{className:"line",children:(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"store.cardano.protocolMagic=1"})})]})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note"}),": Valid networks :  mainnet, preprod, preview,sanchonet"]}),"\n",(0,s.jsx)(n.h2,{id:"configuring-n2c-node-to-client---optional",children:"Configuring N2C (Node-to-Client) - Optional"}),"\n",(0,s.jsxs)(n.p,{children:["LedgerSync supports fetching certain data directly from a connected Cardano node using Node-to-Client (N2C) settings.\nThis data, such as protocol parameters, is stored in separate tables typically prefixed with ",(0,s.jsx)(n.code,{children:"local_"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"For example"}),", the current protocol parameters fetched via N2C are stored in the ",(0,s.jsx)(n.code,{children:"local_protocol_param"})," table."]}),"\n",(0,s.jsx)(n.h3,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,s.jsx)(n.p,{children:"You can configure N2C in one of the following ways, depending on whether you're connecting to a local Cardano node or a remote one."}),"\n",(0,s.jsx)(n.h3,{id:"1-connecting-to-a-local-cardano-node",children:"1. Connecting to a Local Cardano Node"}),"\n",(0,s.jsx)(n.p,{children:"To fetch data from a locally running Cardano node, you need to point to the node's socket path."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["In the ",(0,s.jsx)(n.code,{children:".env"})," file"]}),":"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{"data-language":"shell","data-theme":"default",children:(0,s.jsx)(n.code,{"data-language":"shell","data-theme":"default",children:(0,s.jsxs)(n.span,{className:"line",children:[(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"STORE_CARDANO_N2C_NODE_SOCKET_PATH"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"/home/Cardano/Setups/node/preview/data/node-ipc/node.socket"})]})})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["In ",(0,s.jsx)(n.code,{children:"application.properties"})]}),":"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{"data-language":"properties","data-theme":"default",children:(0,s.jsx)(n.code,{"data-language":"properties","data-theme":"default",children:(0,s.jsxs)(n.span,{className:"line",children:[(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"store.cardano.n2c-node-socket-path="}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"/home/Cardano/Setups/node/preview/data/node-ipc/node.socket"})]})})}),"\n",(0,s.jsx)(n.h3,{id:"2-connecting-to-a-remote-cardano-node-via-socat",children:"2. Connecting to a Remote Cardano Node via Socat"}),"\n",(0,s.jsxs)(n.p,{children:["If you're connecting to a remote Cardano node and the N2C port has been exposed through ",(0,s.jsx)(n.code,{children:"socat"}),", you can configure the N2C settings\nusing the host and port of the remote node."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["In the ",(0,s.jsx)(n.code,{children:".env"})," file"]}),":"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{"data-language":"shell","data-theme":"default",children:(0,s.jsxs)(n.code,{"data-language":"shell","data-theme":"default",children:[(0,s.jsxs)(n.span,{className:"line",children:[(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"STORE_CARDANO_N2C_HOST"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"=<"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"node_hos"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"t"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:">"})]}),"\n",(0,s.jsxs)(n.span,{className:"line",children:[(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"STORE_CARDANO_N2C_PORT"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"=<"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"socat_por"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"t"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:">"})]})]})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["In ",(0,s.jsx)(n.code,{children:"application.properties"})]}),":"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{"data-language":"properties","data-theme":"default",children:(0,s.jsxs)(n.code,{"data-language":"properties","data-theme":"default",children:[(0,s.jsxs)(n.span,{className:"line",children:[(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"store.cardano.n2c-host="}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"<node_host>"})]}),"\n",(0,s.jsxs)(n.span,{className:"line",children:[(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"store.cardano.n2c-port="}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"<socat_port>"})]})]})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note"}),": Ensure that the relevant settings are only configured in one place (either ",(0,s.jsx)(n.code,{children:"application.properties"})," or ",(0,s.jsx)(n.code,{children:".env"}),") to avoid conflicts. If you're using the ",(0,s.jsx)(n.code,{children:".env"})," file, make sure to comment out or remove the corresponding lines in ",(0,s.jsx)(n.code,{children:"application.properties"})," and vice versa."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"environment-variables-reference",children:"Environment Variables Reference"}),"\n",(0,s.jsx)(n.p,{children:"Here is a reference table for some key environment variables:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.th,{children:[(0,s.jsx)(n.strong,{children:"Environment Variable"})," ",(0,s.jsx)("br",{})," ",(0,s.jsx)(n.code,{children:".env"})," or ",(0,s.jsx)(n.code,{children:"docker compose yml"})]}),(0,s.jsx)(n.th,{children:(0,s.jsxs)(n.strong,{children:["Property Name in ",(0,s.jsx)(n.code,{children:"application.properties"})]})}),(0,s.jsx)(n.th,{children:(0,s.jsx)(n.strong,{children:"Description"})})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"SPRING_DATASOURCE_URL"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"spring.datasource.url"})}),(0,s.jsx)(n.td,{children:"URL for the PostgreSQL database connection."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"SPRING_DATASOURCE_USERNAME"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"spring.datasource.username"})}),(0,s.jsx)(n.td,{children:"Username for the PostgreSQL database."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"SPRING_DATASOURCE_PASSWORD"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"spring.datasource.password"})}),(0,s.jsx)(n.td,{children:"Password for the PostgreSQL database."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"STORE_CARDANO_HOST"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"store.cardano.host"})}),(0,s.jsx)(n.td,{children:"Cardano relay node host."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"STORE_CARDANO_PORT"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"store.cardano.port"})}),(0,s.jsx)(n.td,{children:"Cardano relay node port."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"STORE_CARDANO_PROTOCOLMAGIC"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"store.cardano.protocolMagic"})}),(0,s.jsx)(n.td,{children:"Protocol magic number for the Cardano network."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"NETWORK"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"network"})}),(0,s.jsx)(n.td,{children:"Cardano network to connect to (mainnet, preprod, preview, sanchonet)."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"HEALTH_CHECK_ENABLED"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"health.check.enabled"})}),(0,s.jsx)(n.td,{children:"Enables or disables health checks for the application."})]})]})]})]})}let d={MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.a)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)},pageOpts:{filePath:"pages/docker.mdx",route:"/docker",timestamp:1724656219e3,pageMap:[{kind:"Meta",data:{index:"Overview",design:"Design",docker:"Run with Docker Compose",schema:"Schema",build_run:"Build & Run",applications:{title:"Applications"},about:{title:"About",type:"page"}}},{kind:"MdxPage",name:"about",route:"/about"},{kind:"Folder",name:"applications",route:"/applications",children:[{kind:"Meta",data:{ledger_sync_app:"Ledger Sync",streamer_app:"Ledger Sync Streamer"}},{kind:"MdxPage",name:"ledger_sync_app",route:"/applications/ledger_sync_app"},{kind:"MdxPage",name:"streamer_app",route:"/applications/streamer_app"}]},{kind:"MdxPage",name:"build_run",route:"/build_run"},{kind:"MdxPage",name:"design",route:"/design"},{kind:"MdxPage",name:"docker",route:"/docker"},{kind:"MdxPage",name:"index",route:"/"},{kind:"MdxPage",name:"schema",route:"/schema"}],flexsearch:{codeblocks:!0},title:"Running Ledger Sync with Docker Compose",headings:l},pageNextRoute:"/docker",nextraLayout:i.ZP,themeConfig:t.Z};n.default=(0,o.j)(d)},2069:function(e,n,r){"use strict";var s=r(5893);r(7294);let o={logo:(0,s.jsx)("span",{children:(0,s.jsx)("b",{children:"Ledger Sync"})}),project:{link:"https://github.com/cardano-foundation/cf-ledger-sync"},chat:{link:"https://discord.gg/jw3yeYJw"},docsRepositoryBase:"https://github.com/cardano-foundation/cf-ledger-sync",footer:{text:"Ledger Sync project"},useNextSeoProps:()=>({titleTemplate:"%s – Ledger Sync"}),head:(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("meta",{property:"description",content:"Ledger Sync is a Java-based application designed to provide efficient access to Cardano blockchain data"}),(0,s.jsx)("meta",{property:"og:title",content:"Ledger Sync is a Java-based application designed to provide efficient access to Cardano blockchain data"}),(0,s.jsx)("meta",{property:"og:description",content:"Ledger Sync is a Java-based application designed to provide efficient access to Cardano blockchain data"})]})};n.Z=o},5789:function(){}},function(e){e.O(0,[942,888,774,179],function(){return e(e.s=4102)}),_N_E=e.O()}]);