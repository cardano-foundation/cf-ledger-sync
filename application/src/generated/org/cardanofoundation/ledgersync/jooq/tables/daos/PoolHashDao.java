/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.daos;


import java.math.BigInteger;
import java.util.List;
import java.util.Optional;

import org.cardanofoundation.ledgersync.jooq.AbstractSpringDAOImpl;
import org.cardanofoundation.ledgersync.jooq.tables.PoolHash;
import org.cardanofoundation.ledgersync.jooq.tables.records.PoolHashRecord;
import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class PoolHashDao extends AbstractSpringDAOImpl<PoolHashRecord, org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolHash, Long> {

    /**
     * Create a new PoolHashDao without any configuration
     */
    public PoolHashDao() {
        super(PoolHash.POOL_HASH, org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolHash.class);
    }

    /**
     * Create a new PoolHashDao with an attached configuration
     */
    @Autowired
    public PoolHashDao(Configuration configuration) {
        super(PoolHash.POOL_HASH, org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolHash.class, configuration);
    }

    @Override
    public Long getId(org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolHash object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolHash> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PoolHash.POOL_HASH.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolHash> fetchById(Long... values) {
        return fetch(PoolHash.POOL_HASH.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolHash fetchOneById(Long value) {
        return fetchOne(PoolHash.POOL_HASH.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolHash> fetchOptionalById(Long value) {
        return fetchOptional(PoolHash.POOL_HASH.ID, value);
    }

    /**
     * Fetch records that have <code>hash_raw BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolHash> fetchRangeOfHashRaw(String lowerInclusive, String upperInclusive) {
        return fetchRange(PoolHash.POOL_HASH.HASH_RAW, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>hash_raw IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolHash> fetchByHashRaw(String... values) {
        return fetch(PoolHash.POOL_HASH.HASH_RAW, values);
    }

    /**
     * Fetch records that have <code>pool_size BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolHash> fetchRangeOfPoolSize(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(PoolHash.POOL_HASH.POOL_SIZE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pool_size IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolHash> fetchByPoolSize(BigInteger... values) {
        return fetch(PoolHash.POOL_HASH.POOL_SIZE, values);
    }

    /**
     * Fetch records that have <code>epoch_no BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolHash> fetchRangeOfEpochNo(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(PoolHash.POOL_HASH.EPOCH_NO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>epoch_no IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolHash> fetchByEpochNo(Integer... values) {
        return fetch(PoolHash.POOL_HASH.EPOCH_NO, values);
    }

    /**
     * Fetch records that have <code>view BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolHash> fetchRangeOfView(String lowerInclusive, String upperInclusive) {
        return fetchRange(PoolHash.POOL_HASH.VIEW, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>view IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolHash> fetchByView(String... values) {
        return fetch(PoolHash.POOL_HASH.VIEW, values);
    }
}
