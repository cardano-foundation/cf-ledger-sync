/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.pojos;


import java.io.Serializable;
import java.math.BigInteger;
import java.util.Arrays;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TxMetadata implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private byte[] bytes;
    private String json;
    private BigInteger key;
    private Long txId;

    public TxMetadata() {}

    public TxMetadata(TxMetadata value) {
        this.id = value.id;
        this.bytes = value.bytes;
        this.json = value.json;
        this.key = value.key;
        this.txId = value.txId;
    }

    public TxMetadata(
        Long id,
        byte[] bytes,
        String json,
        BigInteger key,
        Long txId
    ) {
        this.id = id;
        this.bytes = bytes;
        this.json = json;
        this.key = key;
        this.txId = txId;
    }

    /**
     * Getter for <code>tx_metadata.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>tx_metadata.id</code>.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>tx_metadata.bytes</code>.
     */
    public byte[] getBytes() {
        return this.bytes;
    }

    /**
     * Setter for <code>tx_metadata.bytes</code>.
     */
    public void setBytes(byte[] bytes) {
        this.bytes = bytes;
    }

    /**
     * Getter for <code>tx_metadata.json</code>.
     */
    public String getJson() {
        return this.json;
    }

    /**
     * Setter for <code>tx_metadata.json</code>.
     */
    public void setJson(String json) {
        this.json = json;
    }

    /**
     * Getter for <code>tx_metadata.key</code>.
     */
    public BigInteger getKey() {
        return this.key;
    }

    /**
     * Setter for <code>tx_metadata.key</code>.
     */
    public void setKey(BigInteger key) {
        this.key = key;
    }

    /**
     * Getter for <code>tx_metadata.tx_id</code>.
     */
    public Long getTxId() {
        return this.txId;
    }

    /**
     * Setter for <code>tx_metadata.tx_id</code>.
     */
    public void setTxId(Long txId) {
        this.txId = txId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final TxMetadata other = (TxMetadata) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.bytes == null) {
            if (other.bytes != null)
                return false;
        }
        else if (!Arrays.equals(this.bytes, other.bytes))
            return false;
        if (this.json == null) {
            if (other.json != null)
                return false;
        }
        else if (!this.json.equals(other.json))
            return false;
        if (this.key == null) {
            if (other.key != null)
                return false;
        }
        else if (!this.key.equals(other.key))
            return false;
        if (this.txId == null) {
            if (other.txId != null)
                return false;
        }
        else if (!this.txId.equals(other.txId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.bytes == null) ? 0 : Arrays.hashCode(this.bytes));
        result = prime * result + ((this.json == null) ? 0 : this.json.hashCode());
        result = prime * result + ((this.key == null) ? 0 : this.key.hashCode());
        result = prime * result + ((this.txId == null) ? 0 : this.txId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TxMetadata (");

        sb.append(id);
        sb.append(", ").append("[binary...]");
        sb.append(", ").append(json);
        sb.append(", ").append(key);
        sb.append(", ").append(txId);

        sb.append(")");
        return sb.toString();
    }
}
