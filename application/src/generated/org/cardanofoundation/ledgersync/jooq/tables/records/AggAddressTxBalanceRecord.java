/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.records;


import java.math.BigInteger;
import java.time.LocalDate;

import org.cardanofoundation.ledgersync.jooq.tables.AggAddressTxBalance;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AggAddressTxBalanceRecord extends UpdatableRecordImpl<AggAddressTxBalanceRecord> implements Record5<Long, Long, Long, BigInteger, LocalDate> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>agg_address_tx_balance.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>agg_address_tx_balance.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>agg_address_tx_balance.stake_address_id</code>.
     */
    public void setStakeAddressId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>agg_address_tx_balance.stake_address_id</code>.
     */
    public Long getStakeAddressId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>agg_address_tx_balance.address_id</code>.
     */
    public void setAddressId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>agg_address_tx_balance.address_id</code>.
     */
    public Long getAddressId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>agg_address_tx_balance.balance</code>.
     */
    public void setBalance(BigInteger value) {
        set(3, value);
    }

    /**
     * Getter for <code>agg_address_tx_balance.balance</code>.
     */
    public BigInteger getBalance() {
        return (BigInteger) get(3);
    }

    /**
     * Setter for <code>agg_address_tx_balance.day</code>.
     */
    public void setDay(LocalDate value) {
        set(4, value);
    }

    /**
     * Getter for <code>agg_address_tx_balance.day</code>.
     */
    public LocalDate getDay() {
        return (LocalDate) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, Long, BigInteger, LocalDate> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Long, Long, BigInteger, LocalDate> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return AggAddressTxBalance.AGG_ADDRESS_TX_BALANCE.ID;
    }

    @Override
    public Field<Long> field2() {
        return AggAddressTxBalance.AGG_ADDRESS_TX_BALANCE.STAKE_ADDRESS_ID;
    }

    @Override
    public Field<Long> field3() {
        return AggAddressTxBalance.AGG_ADDRESS_TX_BALANCE.ADDRESS_ID;
    }

    @Override
    public Field<BigInteger> field4() {
        return AggAddressTxBalance.AGG_ADDRESS_TX_BALANCE.BALANCE;
    }

    @Override
    public Field<LocalDate> field5() {
        return AggAddressTxBalance.AGG_ADDRESS_TX_BALANCE.DAY;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getStakeAddressId();
    }

    @Override
    public Long component3() {
        return getAddressId();
    }

    @Override
    public BigInteger component4() {
        return getBalance();
    }

    @Override
    public LocalDate component5() {
        return getDay();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getStakeAddressId();
    }

    @Override
    public Long value3() {
        return getAddressId();
    }

    @Override
    public BigInteger value4() {
        return getBalance();
    }

    @Override
    public LocalDate value5() {
        return getDay();
    }

    @Override
    public AggAddressTxBalanceRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AggAddressTxBalanceRecord value2(Long value) {
        setStakeAddressId(value);
        return this;
    }

    @Override
    public AggAddressTxBalanceRecord value3(Long value) {
        setAddressId(value);
        return this;
    }

    @Override
    public AggAddressTxBalanceRecord value4(BigInteger value) {
        setBalance(value);
        return this;
    }

    @Override
    public AggAddressTxBalanceRecord value5(LocalDate value) {
        setDay(value);
        return this;
    }

    @Override
    public AggAddressTxBalanceRecord values(Long value1, Long value2, Long value3, BigInteger value4, LocalDate value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AggAddressTxBalanceRecord
     */
    public AggAddressTxBalanceRecord() {
        super(AggAddressTxBalance.AGG_ADDRESS_TX_BALANCE);
    }

    /**
     * Create a detached, initialised AggAddressTxBalanceRecord
     */
    public AggAddressTxBalanceRecord(Long id, Long stakeAddressId, Long addressId, BigInteger balance, LocalDate day) {
        super(AggAddressTxBalance.AGG_ADDRESS_TX_BALANCE);

        setId(id);
        setStakeAddressId(stakeAddressId);
        setAddressId(addressId);
        setBalance(balance);
        setDay(day);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised AggAddressTxBalanceRecord
     */
    public AggAddressTxBalanceRecord(org.cardanofoundation.ledgersync.jooq.tables.pojos.AggAddressTxBalance value) {
        super(AggAddressTxBalance.AGG_ADDRESS_TX_BALANCE);

        if (value != null) {
            setId(value.getId());
            setStakeAddressId(value.getStakeAddressId());
            setAddressId(value.getAddressId());
            setBalance(value.getBalance());
            setDay(value.getDay());
            resetChangedOnNotNull();
        }
    }
}
