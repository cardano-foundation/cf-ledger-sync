/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Block implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private Long blockNo;
    private Integer epochNo;
    private Integer epochSlotNo;
    private String hash;
    private String opCert;
    private Long opCertCounter;
    private Integer protoMajor;
    private Integer protoMinor;
    private Integer size;
    private Long slotLeaderId;
    private Long slotNo;
    private LocalDateTime time;
    private Long txCount;
    private String vrfKey;
    private Long previousId;

    public Block() {}

    public Block(Block value) {
        this.id = value.id;
        this.blockNo = value.blockNo;
        this.epochNo = value.epochNo;
        this.epochSlotNo = value.epochSlotNo;
        this.hash = value.hash;
        this.opCert = value.opCert;
        this.opCertCounter = value.opCertCounter;
        this.protoMajor = value.protoMajor;
        this.protoMinor = value.protoMinor;
        this.size = value.size;
        this.slotLeaderId = value.slotLeaderId;
        this.slotNo = value.slotNo;
        this.time = value.time;
        this.txCount = value.txCount;
        this.vrfKey = value.vrfKey;
        this.previousId = value.previousId;
    }

    public Block(
        Long id,
        Long blockNo,
        Integer epochNo,
        Integer epochSlotNo,
        String hash,
        String opCert,
        Long opCertCounter,
        Integer protoMajor,
        Integer protoMinor,
        Integer size,
        Long slotLeaderId,
        Long slotNo,
        LocalDateTime time,
        Long txCount,
        String vrfKey,
        Long previousId
    ) {
        this.id = id;
        this.blockNo = blockNo;
        this.epochNo = epochNo;
        this.epochSlotNo = epochSlotNo;
        this.hash = hash;
        this.opCert = opCert;
        this.opCertCounter = opCertCounter;
        this.protoMajor = protoMajor;
        this.protoMinor = protoMinor;
        this.size = size;
        this.slotLeaderId = slotLeaderId;
        this.slotNo = slotNo;
        this.time = time;
        this.txCount = txCount;
        this.vrfKey = vrfKey;
        this.previousId = previousId;
    }

    /**
     * Getter for <code>block.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>block.id</code>.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>block.block_no</code>.
     */
    public Long getBlockNo() {
        return this.blockNo;
    }

    /**
     * Setter for <code>block.block_no</code>.
     */
    public void setBlockNo(Long blockNo) {
        this.blockNo = blockNo;
    }

    /**
     * Getter for <code>block.epoch_no</code>.
     */
    public Integer getEpochNo() {
        return this.epochNo;
    }

    /**
     * Setter for <code>block.epoch_no</code>.
     */
    public void setEpochNo(Integer epochNo) {
        this.epochNo = epochNo;
    }

    /**
     * Getter for <code>block.epoch_slot_no</code>.
     */
    public Integer getEpochSlotNo() {
        return this.epochSlotNo;
    }

    /**
     * Setter for <code>block.epoch_slot_no</code>.
     */
    public void setEpochSlotNo(Integer epochSlotNo) {
        this.epochSlotNo = epochSlotNo;
    }

    /**
     * Getter for <code>block.hash</code>.
     */
    public String getHash() {
        return this.hash;
    }

    /**
     * Setter for <code>block.hash</code>.
     */
    public void setHash(String hash) {
        this.hash = hash;
    }

    /**
     * Getter for <code>block.op_cert</code>.
     */
    public String getOpCert() {
        return this.opCert;
    }

    /**
     * Setter for <code>block.op_cert</code>.
     */
    public void setOpCert(String opCert) {
        this.opCert = opCert;
    }

    /**
     * Getter for <code>block.op_cert_counter</code>.
     */
    public Long getOpCertCounter() {
        return this.opCertCounter;
    }

    /**
     * Setter for <code>block.op_cert_counter</code>.
     */
    public void setOpCertCounter(Long opCertCounter) {
        this.opCertCounter = opCertCounter;
    }

    /**
     * Getter for <code>block.proto_major</code>.
     */
    public Integer getProtoMajor() {
        return this.protoMajor;
    }

    /**
     * Setter for <code>block.proto_major</code>.
     */
    public void setProtoMajor(Integer protoMajor) {
        this.protoMajor = protoMajor;
    }

    /**
     * Getter for <code>block.proto_minor</code>.
     */
    public Integer getProtoMinor() {
        return this.protoMinor;
    }

    /**
     * Setter for <code>block.proto_minor</code>.
     */
    public void setProtoMinor(Integer protoMinor) {
        this.protoMinor = protoMinor;
    }

    /**
     * Getter for <code>block.size</code>.
     */
    public Integer getSize() {
        return this.size;
    }

    /**
     * Setter for <code>block.size</code>.
     */
    public void setSize(Integer size) {
        this.size = size;
    }

    /**
     * Getter for <code>block.slot_leader_id</code>.
     */
    public Long getSlotLeaderId() {
        return this.slotLeaderId;
    }

    /**
     * Setter for <code>block.slot_leader_id</code>.
     */
    public void setSlotLeaderId(Long slotLeaderId) {
        this.slotLeaderId = slotLeaderId;
    }

    /**
     * Getter for <code>block.slot_no</code>.
     */
    public Long getSlotNo() {
        return this.slotNo;
    }

    /**
     * Setter for <code>block.slot_no</code>.
     */
    public void setSlotNo(Long slotNo) {
        this.slotNo = slotNo;
    }

    /**
     * Getter for <code>block.time</code>.
     */
    public LocalDateTime getTime() {
        return this.time;
    }

    /**
     * Setter for <code>block.time</code>.
     */
    public void setTime(LocalDateTime time) {
        this.time = time;
    }

    /**
     * Getter for <code>block.tx_count</code>.
     */
    public Long getTxCount() {
        return this.txCount;
    }

    /**
     * Setter for <code>block.tx_count</code>.
     */
    public void setTxCount(Long txCount) {
        this.txCount = txCount;
    }

    /**
     * Getter for <code>block.vrf_key</code>.
     */
    public String getVrfKey() {
        return this.vrfKey;
    }

    /**
     * Setter for <code>block.vrf_key</code>.
     */
    public void setVrfKey(String vrfKey) {
        this.vrfKey = vrfKey;
    }

    /**
     * Getter for <code>block.previous_id</code>.
     */
    public Long getPreviousId() {
        return this.previousId;
    }

    /**
     * Setter for <code>block.previous_id</code>.
     */
    public void setPreviousId(Long previousId) {
        this.previousId = previousId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Block other = (Block) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.blockNo == null) {
            if (other.blockNo != null)
                return false;
        }
        else if (!this.blockNo.equals(other.blockNo))
            return false;
        if (this.epochNo == null) {
            if (other.epochNo != null)
                return false;
        }
        else if (!this.epochNo.equals(other.epochNo))
            return false;
        if (this.epochSlotNo == null) {
            if (other.epochSlotNo != null)
                return false;
        }
        else if (!this.epochSlotNo.equals(other.epochSlotNo))
            return false;
        if (this.hash == null) {
            if (other.hash != null)
                return false;
        }
        else if (!this.hash.equals(other.hash))
            return false;
        if (this.opCert == null) {
            if (other.opCert != null)
                return false;
        }
        else if (!this.opCert.equals(other.opCert))
            return false;
        if (this.opCertCounter == null) {
            if (other.opCertCounter != null)
                return false;
        }
        else if (!this.opCertCounter.equals(other.opCertCounter))
            return false;
        if (this.protoMajor == null) {
            if (other.protoMajor != null)
                return false;
        }
        else if (!this.protoMajor.equals(other.protoMajor))
            return false;
        if (this.protoMinor == null) {
            if (other.protoMinor != null)
                return false;
        }
        else if (!this.protoMinor.equals(other.protoMinor))
            return false;
        if (this.size == null) {
            if (other.size != null)
                return false;
        }
        else if (!this.size.equals(other.size))
            return false;
        if (this.slotLeaderId == null) {
            if (other.slotLeaderId != null)
                return false;
        }
        else if (!this.slotLeaderId.equals(other.slotLeaderId))
            return false;
        if (this.slotNo == null) {
            if (other.slotNo != null)
                return false;
        }
        else if (!this.slotNo.equals(other.slotNo))
            return false;
        if (this.time == null) {
            if (other.time != null)
                return false;
        }
        else if (!this.time.equals(other.time))
            return false;
        if (this.txCount == null) {
            if (other.txCount != null)
                return false;
        }
        else if (!this.txCount.equals(other.txCount))
            return false;
        if (this.vrfKey == null) {
            if (other.vrfKey != null)
                return false;
        }
        else if (!this.vrfKey.equals(other.vrfKey))
            return false;
        if (this.previousId == null) {
            if (other.previousId != null)
                return false;
        }
        else if (!this.previousId.equals(other.previousId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.blockNo == null) ? 0 : this.blockNo.hashCode());
        result = prime * result + ((this.epochNo == null) ? 0 : this.epochNo.hashCode());
        result = prime * result + ((this.epochSlotNo == null) ? 0 : this.epochSlotNo.hashCode());
        result = prime * result + ((this.hash == null) ? 0 : this.hash.hashCode());
        result = prime * result + ((this.opCert == null) ? 0 : this.opCert.hashCode());
        result = prime * result + ((this.opCertCounter == null) ? 0 : this.opCertCounter.hashCode());
        result = prime * result + ((this.protoMajor == null) ? 0 : this.protoMajor.hashCode());
        result = prime * result + ((this.protoMinor == null) ? 0 : this.protoMinor.hashCode());
        result = prime * result + ((this.size == null) ? 0 : this.size.hashCode());
        result = prime * result + ((this.slotLeaderId == null) ? 0 : this.slotLeaderId.hashCode());
        result = prime * result + ((this.slotNo == null) ? 0 : this.slotNo.hashCode());
        result = prime * result + ((this.time == null) ? 0 : this.time.hashCode());
        result = prime * result + ((this.txCount == null) ? 0 : this.txCount.hashCode());
        result = prime * result + ((this.vrfKey == null) ? 0 : this.vrfKey.hashCode());
        result = prime * result + ((this.previousId == null) ? 0 : this.previousId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Block (");

        sb.append(id);
        sb.append(", ").append(blockNo);
        sb.append(", ").append(epochNo);
        sb.append(", ").append(epochSlotNo);
        sb.append(", ").append(hash);
        sb.append(", ").append(opCert);
        sb.append(", ").append(opCertCounter);
        sb.append(", ").append(protoMajor);
        sb.append(", ").append(protoMinor);
        sb.append(", ").append(size);
        sb.append(", ").append(slotLeaderId);
        sb.append(", ").append(slotNo);
        sb.append(", ").append(time);
        sb.append(", ").append(txCount);
        sb.append(", ").append(vrfKey);
        sb.append(", ").append(previousId);

        sb.append(")");
        return sb.toString();
    }
}
