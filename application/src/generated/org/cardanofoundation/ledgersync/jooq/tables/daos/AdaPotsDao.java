/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.daos;


import java.math.BigInteger;
import java.util.List;
import java.util.Optional;

import org.cardanofoundation.ledgersync.jooq.AbstractSpringDAOImpl;
import org.cardanofoundation.ledgersync.jooq.tables.AdaPots;
import org.cardanofoundation.ledgersync.jooq.tables.records.AdaPotsRecord;
import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class AdaPotsDao extends AbstractSpringDAOImpl<AdaPotsRecord, org.cardanofoundation.ledgersync.jooq.tables.pojos.AdaPots, Long> {

    /**
     * Create a new AdaPotsDao without any configuration
     */
    public AdaPotsDao() {
        super(AdaPots.ADA_POTS, org.cardanofoundation.ledgersync.jooq.tables.pojos.AdaPots.class);
    }

    /**
     * Create a new AdaPotsDao with an attached configuration
     */
    @Autowired
    public AdaPotsDao(Configuration configuration) {
        super(AdaPots.ADA_POTS, org.cardanofoundation.ledgersync.jooq.tables.pojos.AdaPots.class, configuration);
    }

    @Override
    public Long getId(org.cardanofoundation.ledgersync.jooq.tables.pojos.AdaPots object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AdaPots> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(AdaPots.ADA_POTS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AdaPots> fetchById(Long... values) {
        return fetch(AdaPots.ADA_POTS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.cardanofoundation.ledgersync.jooq.tables.pojos.AdaPots fetchOneById(Long value) {
        return fetchOne(AdaPots.ADA_POTS.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<org.cardanofoundation.ledgersync.jooq.tables.pojos.AdaPots> fetchOptionalById(Long value) {
        return fetchOptional(AdaPots.ADA_POTS.ID, value);
    }

    /**
     * Fetch records that have <code>deposits BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AdaPots> fetchRangeOfDeposits(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(AdaPots.ADA_POTS.DEPOSITS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>deposits IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AdaPots> fetchByDeposits(BigInteger... values) {
        return fetch(AdaPots.ADA_POTS.DEPOSITS, values);
    }

    /**
     * Fetch records that have <code>epoch_no BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AdaPots> fetchRangeOfEpochNo(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(AdaPots.ADA_POTS.EPOCH_NO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>epoch_no IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AdaPots> fetchByEpochNo(Integer... values) {
        return fetch(AdaPots.ADA_POTS.EPOCH_NO, values);
    }

    /**
     * Fetch records that have <code>fees BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AdaPots> fetchRangeOfFees(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(AdaPots.ADA_POTS.FEES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>fees IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AdaPots> fetchByFees(BigInteger... values) {
        return fetch(AdaPots.ADA_POTS.FEES, values);
    }

    /**
     * Fetch records that have <code>reserves BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AdaPots> fetchRangeOfReserves(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(AdaPots.ADA_POTS.RESERVES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>reserves IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AdaPots> fetchByReserves(BigInteger... values) {
        return fetch(AdaPots.ADA_POTS.RESERVES, values);
    }

    /**
     * Fetch records that have <code>rewards BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AdaPots> fetchRangeOfRewards(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(AdaPots.ADA_POTS.REWARDS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rewards IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AdaPots> fetchByRewards(BigInteger... values) {
        return fetch(AdaPots.ADA_POTS.REWARDS, values);
    }

    /**
     * Fetch records that have <code>slot_no BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AdaPots> fetchRangeOfSlotNo(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(AdaPots.ADA_POTS.SLOT_NO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>slot_no IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AdaPots> fetchBySlotNo(Long... values) {
        return fetch(AdaPots.ADA_POTS.SLOT_NO, values);
    }

    /**
     * Fetch records that have <code>treasury BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AdaPots> fetchRangeOfTreasury(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(AdaPots.ADA_POTS.TREASURY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>treasury IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AdaPots> fetchByTreasury(BigInteger... values) {
        return fetch(AdaPots.ADA_POTS.TREASURY, values);
    }

    /**
     * Fetch records that have <code>utxo BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AdaPots> fetchRangeOfUtxo(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(AdaPots.ADA_POTS.UTXO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>utxo IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AdaPots> fetchByUtxo(BigInteger... values) {
        return fetch(AdaPots.ADA_POTS.UTXO, values);
    }

    /**
     * Fetch records that have <code>block_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AdaPots> fetchRangeOfBlockId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(AdaPots.ADA_POTS.BLOCK_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>block_id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AdaPots> fetchByBlockId(Long... values) {
        return fetch(AdaPots.ADA_POTS.BLOCK_ID, values);
    }

    /**
     * Fetch a unique record that has <code>block_id = value</code>
     */
    public org.cardanofoundation.ledgersync.jooq.tables.pojos.AdaPots fetchOneByBlockId(Long value) {
        return fetchOne(AdaPots.ADA_POTS.BLOCK_ID, value);
    }

    /**
     * Fetch a unique record that has <code>block_id = value</code>
     */
    public Optional<org.cardanofoundation.ledgersync.jooq.tables.pojos.AdaPots> fetchOptionalByBlockId(Long value) {
        return fetchOptional(AdaPots.ADA_POTS.BLOCK_ID, value);
    }
}
