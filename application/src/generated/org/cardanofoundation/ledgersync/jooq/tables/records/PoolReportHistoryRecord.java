/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.records;


import org.cardanofoundation.ledgersync.jooq.tables.PoolReportHistory;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PoolReportHistoryRecord extends UpdatableRecordImpl<PoolReportHistoryRecord> implements Record11<Long, String, Boolean, Boolean, Integer, Integer, Long, Boolean, Boolean, Boolean, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pool_report_history.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>pool_report_history.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>pool_report_history.pool_id</code>.
     */
    public void setPoolId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>pool_report_history.pool_id</code>.
     */
    public String getPoolId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>pool_report_history.is_pool_size</code>.
     */
    public void setIsPoolSize(Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>pool_report_history.is_pool_size</code>.
     */
    public Boolean getIsPoolSize() {
        return (Boolean) get(2);
    }

    /**
     * Setter for <code>pool_report_history.is_fees_paid</code>.
     */
    public void setIsFeesPaid(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>pool_report_history.is_fees_paid</code>.
     */
    public Boolean getIsFeesPaid() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>pool_report_history.begin_epoch</code>.
     */
    public void setBeginEpoch(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>pool_report_history.begin_epoch</code>.
     */
    public Integer getBeginEpoch() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>pool_report_history.end_epoch</code>.
     */
    public void setEndEpoch(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>pool_report_history.end_epoch</code>.
     */
    public Integer getEndEpoch() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>pool_report_history.report_id</code>.
     */
    public void setReportId(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>pool_report_history.report_id</code>.
     */
    public Long getReportId() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>pool_report_history.event_registration</code>.
     */
    public void setEventRegistration(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>pool_report_history.event_registration</code>.
     */
    public Boolean getEventRegistration() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>pool_report_history.event_deregistration</code>.
     */
    public void setEventDeregistration(Boolean value) {
        set(8, value);
    }

    /**
     * Getter for <code>pool_report_history.event_deregistration</code>.
     */
    public Boolean getEventDeregistration() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>pool_report_history.event_reward</code>.
     */
    public void setEventReward(Boolean value) {
        set(9, value);
    }

    /**
     * Getter for <code>pool_report_history.event_reward</code>.
     */
    public Boolean getEventReward() {
        return (Boolean) get(9);
    }

    /**
     * Setter for <code>pool_report_history.event_pool_update</code>.
     */
    public void setEventPoolUpdate(Boolean value) {
        set(10, value);
    }

    /**
     * Getter for <code>pool_report_history.event_pool_update</code>.
     */
    public Boolean getEventPoolUpdate() {
        return (Boolean) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Long, String, Boolean, Boolean, Integer, Integer, Long, Boolean, Boolean, Boolean, Boolean> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Long, String, Boolean, Boolean, Integer, Integer, Long, Boolean, Boolean, Boolean, Boolean> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PoolReportHistory.POOL_REPORT_HISTORY.ID;
    }

    @Override
    public Field<String> field2() {
        return PoolReportHistory.POOL_REPORT_HISTORY.POOL_ID;
    }

    @Override
    public Field<Boolean> field3() {
        return PoolReportHistory.POOL_REPORT_HISTORY.IS_POOL_SIZE;
    }

    @Override
    public Field<Boolean> field4() {
        return PoolReportHistory.POOL_REPORT_HISTORY.IS_FEES_PAID;
    }

    @Override
    public Field<Integer> field5() {
        return PoolReportHistory.POOL_REPORT_HISTORY.BEGIN_EPOCH;
    }

    @Override
    public Field<Integer> field6() {
        return PoolReportHistory.POOL_REPORT_HISTORY.END_EPOCH;
    }

    @Override
    public Field<Long> field7() {
        return PoolReportHistory.POOL_REPORT_HISTORY.REPORT_ID;
    }

    @Override
    public Field<Boolean> field8() {
        return PoolReportHistory.POOL_REPORT_HISTORY.EVENT_REGISTRATION;
    }

    @Override
    public Field<Boolean> field9() {
        return PoolReportHistory.POOL_REPORT_HISTORY.EVENT_DEREGISTRATION;
    }

    @Override
    public Field<Boolean> field10() {
        return PoolReportHistory.POOL_REPORT_HISTORY.EVENT_REWARD;
    }

    @Override
    public Field<Boolean> field11() {
        return PoolReportHistory.POOL_REPORT_HISTORY.EVENT_POOL_UPDATE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getPoolId();
    }

    @Override
    public Boolean component3() {
        return getIsPoolSize();
    }

    @Override
    public Boolean component4() {
        return getIsFeesPaid();
    }

    @Override
    public Integer component5() {
        return getBeginEpoch();
    }

    @Override
    public Integer component6() {
        return getEndEpoch();
    }

    @Override
    public Long component7() {
        return getReportId();
    }

    @Override
    public Boolean component8() {
        return getEventRegistration();
    }

    @Override
    public Boolean component9() {
        return getEventDeregistration();
    }

    @Override
    public Boolean component10() {
        return getEventReward();
    }

    @Override
    public Boolean component11() {
        return getEventPoolUpdate();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getPoolId();
    }

    @Override
    public Boolean value3() {
        return getIsPoolSize();
    }

    @Override
    public Boolean value4() {
        return getIsFeesPaid();
    }

    @Override
    public Integer value5() {
        return getBeginEpoch();
    }

    @Override
    public Integer value6() {
        return getEndEpoch();
    }

    @Override
    public Long value7() {
        return getReportId();
    }

    @Override
    public Boolean value8() {
        return getEventRegistration();
    }

    @Override
    public Boolean value9() {
        return getEventDeregistration();
    }

    @Override
    public Boolean value10() {
        return getEventReward();
    }

    @Override
    public Boolean value11() {
        return getEventPoolUpdate();
    }

    @Override
    public PoolReportHistoryRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PoolReportHistoryRecord value2(String value) {
        setPoolId(value);
        return this;
    }

    @Override
    public PoolReportHistoryRecord value3(Boolean value) {
        setIsPoolSize(value);
        return this;
    }

    @Override
    public PoolReportHistoryRecord value4(Boolean value) {
        setIsFeesPaid(value);
        return this;
    }

    @Override
    public PoolReportHistoryRecord value5(Integer value) {
        setBeginEpoch(value);
        return this;
    }

    @Override
    public PoolReportHistoryRecord value6(Integer value) {
        setEndEpoch(value);
        return this;
    }

    @Override
    public PoolReportHistoryRecord value7(Long value) {
        setReportId(value);
        return this;
    }

    @Override
    public PoolReportHistoryRecord value8(Boolean value) {
        setEventRegistration(value);
        return this;
    }

    @Override
    public PoolReportHistoryRecord value9(Boolean value) {
        setEventDeregistration(value);
        return this;
    }

    @Override
    public PoolReportHistoryRecord value10(Boolean value) {
        setEventReward(value);
        return this;
    }

    @Override
    public PoolReportHistoryRecord value11(Boolean value) {
        setEventPoolUpdate(value);
        return this;
    }

    @Override
    public PoolReportHistoryRecord values(Long value1, String value2, Boolean value3, Boolean value4, Integer value5, Integer value6, Long value7, Boolean value8, Boolean value9, Boolean value10, Boolean value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PoolReportHistoryRecord
     */
    public PoolReportHistoryRecord() {
        super(PoolReportHistory.POOL_REPORT_HISTORY);
    }

    /**
     * Create a detached, initialised PoolReportHistoryRecord
     */
    public PoolReportHistoryRecord(Long id, String poolId, Boolean isPoolSize, Boolean isFeesPaid, Integer beginEpoch, Integer endEpoch, Long reportId, Boolean eventRegistration, Boolean eventDeregistration, Boolean eventReward, Boolean eventPoolUpdate) {
        super(PoolReportHistory.POOL_REPORT_HISTORY);

        setId(id);
        setPoolId(poolId);
        setIsPoolSize(isPoolSize);
        setIsFeesPaid(isFeesPaid);
        setBeginEpoch(beginEpoch);
        setEndEpoch(endEpoch);
        setReportId(reportId);
        setEventRegistration(eventRegistration);
        setEventDeregistration(eventDeregistration);
        setEventReward(eventReward);
        setEventPoolUpdate(eventPoolUpdate);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PoolReportHistoryRecord
     */
    public PoolReportHistoryRecord(org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolReportHistory value) {
        super(PoolReportHistory.POOL_REPORT_HISTORY);

        if (value != null) {
            setId(value.getId());
            setPoolId(value.getPoolId());
            setIsPoolSize(value.getIsPoolSize());
            setIsFeesPaid(value.getIsFeesPaid());
            setBeginEpoch(value.getBeginEpoch());
            setEndEpoch(value.getEndEpoch());
            setReportId(value.getReportId());
            setEventRegistration(value.getEventRegistration());
            setEventDeregistration(value.getEventDeregistration());
            setEventReward(value.getEventReward());
            setEventPoolUpdate(value.getEventPoolUpdate());
            resetChangedOnNotNull();
        }
    }
}
