/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.daos;


import java.math.BigInteger;
import java.util.List;
import java.util.Optional;

import org.cardanofoundation.ledgersync.jooq.AbstractSpringDAOImpl;
import org.cardanofoundation.ledgersync.jooq.tables.MaTxOut;
import org.cardanofoundation.ledgersync.jooq.tables.records.MaTxOutRecord;
import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class MaTxOutDao extends AbstractSpringDAOImpl<MaTxOutRecord, org.cardanofoundation.ledgersync.jooq.tables.pojos.MaTxOut, Long> {

    /**
     * Create a new MaTxOutDao without any configuration
     */
    public MaTxOutDao() {
        super(MaTxOut.MA_TX_OUT, org.cardanofoundation.ledgersync.jooq.tables.pojos.MaTxOut.class);
    }

    /**
     * Create a new MaTxOutDao with an attached configuration
     */
    @Autowired
    public MaTxOutDao(Configuration configuration) {
        super(MaTxOut.MA_TX_OUT, org.cardanofoundation.ledgersync.jooq.tables.pojos.MaTxOut.class, configuration);
    }

    @Override
    public Long getId(org.cardanofoundation.ledgersync.jooq.tables.pojos.MaTxOut object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.MaTxOut> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(MaTxOut.MA_TX_OUT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.MaTxOut> fetchById(Long... values) {
        return fetch(MaTxOut.MA_TX_OUT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.cardanofoundation.ledgersync.jooq.tables.pojos.MaTxOut fetchOneById(Long value) {
        return fetchOne(MaTxOut.MA_TX_OUT.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<org.cardanofoundation.ledgersync.jooq.tables.pojos.MaTxOut> fetchOptionalById(Long value) {
        return fetchOptional(MaTxOut.MA_TX_OUT.ID, value);
    }

    /**
     * Fetch records that have <code>quantity BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.MaTxOut> fetchRangeOfQuantity(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(MaTxOut.MA_TX_OUT.QUANTITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>quantity IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.MaTxOut> fetchByQuantity(BigInteger... values) {
        return fetch(MaTxOut.MA_TX_OUT.QUANTITY, values);
    }

    /**
     * Fetch records that have <code>ident BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.MaTxOut> fetchRangeOfIdent(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(MaTxOut.MA_TX_OUT.IDENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ident IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.MaTxOut> fetchByIdent(Long... values) {
        return fetch(MaTxOut.MA_TX_OUT.IDENT, values);
    }

    /**
     * Fetch records that have <code>tx_out_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.MaTxOut> fetchRangeOfTxOutId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(MaTxOut.MA_TX_OUT.TX_OUT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tx_out_id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.MaTxOut> fetchByTxOutId(Long... values) {
        return fetch(MaTxOut.MA_TX_OUT.TX_OUT_ID, values);
    }
}
