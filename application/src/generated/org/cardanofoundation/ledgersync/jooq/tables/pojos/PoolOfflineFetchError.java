/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PoolOfflineFetchError implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private String fetchError;
    private LocalDateTime fetchTime;
    private Integer retryCount;
    private Long poolId;
    private Long pmrId;

    public PoolOfflineFetchError() {}

    public PoolOfflineFetchError(PoolOfflineFetchError value) {
        this.id = value.id;
        this.fetchError = value.fetchError;
        this.fetchTime = value.fetchTime;
        this.retryCount = value.retryCount;
        this.poolId = value.poolId;
        this.pmrId = value.pmrId;
    }

    public PoolOfflineFetchError(
        Long id,
        String fetchError,
        LocalDateTime fetchTime,
        Integer retryCount,
        Long poolId,
        Long pmrId
    ) {
        this.id = id;
        this.fetchError = fetchError;
        this.fetchTime = fetchTime;
        this.retryCount = retryCount;
        this.poolId = poolId;
        this.pmrId = pmrId;
    }

    /**
     * Getter for <code>pool_offline_fetch_error.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>pool_offline_fetch_error.id</code>.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>pool_offline_fetch_error.fetch_error</code>.
     */
    public String getFetchError() {
        return this.fetchError;
    }

    /**
     * Setter for <code>pool_offline_fetch_error.fetch_error</code>.
     */
    public void setFetchError(String fetchError) {
        this.fetchError = fetchError;
    }

    /**
     * Getter for <code>pool_offline_fetch_error.fetch_time</code>.
     */
    public LocalDateTime getFetchTime() {
        return this.fetchTime;
    }

    /**
     * Setter for <code>pool_offline_fetch_error.fetch_time</code>.
     */
    public void setFetchTime(LocalDateTime fetchTime) {
        this.fetchTime = fetchTime;
    }

    /**
     * Getter for <code>pool_offline_fetch_error.retry_count</code>.
     */
    public Integer getRetryCount() {
        return this.retryCount;
    }

    /**
     * Setter for <code>pool_offline_fetch_error.retry_count</code>.
     */
    public void setRetryCount(Integer retryCount) {
        this.retryCount = retryCount;
    }

    /**
     * Getter for <code>pool_offline_fetch_error.pool_id</code>.
     */
    public Long getPoolId() {
        return this.poolId;
    }

    /**
     * Setter for <code>pool_offline_fetch_error.pool_id</code>.
     */
    public void setPoolId(Long poolId) {
        this.poolId = poolId;
    }

    /**
     * Getter for <code>pool_offline_fetch_error.pmr_id</code>.
     */
    public Long getPmrId() {
        return this.pmrId;
    }

    /**
     * Setter for <code>pool_offline_fetch_error.pmr_id</code>.
     */
    public void setPmrId(Long pmrId) {
        this.pmrId = pmrId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PoolOfflineFetchError other = (PoolOfflineFetchError) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.fetchError == null) {
            if (other.fetchError != null)
                return false;
        }
        else if (!this.fetchError.equals(other.fetchError))
            return false;
        if (this.fetchTime == null) {
            if (other.fetchTime != null)
                return false;
        }
        else if (!this.fetchTime.equals(other.fetchTime))
            return false;
        if (this.retryCount == null) {
            if (other.retryCount != null)
                return false;
        }
        else if (!this.retryCount.equals(other.retryCount))
            return false;
        if (this.poolId == null) {
            if (other.poolId != null)
                return false;
        }
        else if (!this.poolId.equals(other.poolId))
            return false;
        if (this.pmrId == null) {
            if (other.pmrId != null)
                return false;
        }
        else if (!this.pmrId.equals(other.pmrId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.fetchError == null) ? 0 : this.fetchError.hashCode());
        result = prime * result + ((this.fetchTime == null) ? 0 : this.fetchTime.hashCode());
        result = prime * result + ((this.retryCount == null) ? 0 : this.retryCount.hashCode());
        result = prime * result + ((this.poolId == null) ? 0 : this.poolId.hashCode());
        result = prime * result + ((this.pmrId == null) ? 0 : this.pmrId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PoolOfflineFetchError (");

        sb.append(id);
        sb.append(", ").append(fetchError);
        sb.append(", ").append(fetchTime);
        sb.append(", ").append(retryCount);
        sb.append(", ").append(poolId);
        sb.append(", ").append(pmrId);

        sb.append(")");
        return sb.toString();
    }
}
