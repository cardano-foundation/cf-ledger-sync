/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.daos;


import java.math.BigInteger;
import java.util.List;
import java.util.Optional;

import org.cardanofoundation.ledgersync.jooq.AbstractSpringDAOImpl;
import org.cardanofoundation.ledgersync.jooq.tables.TxMetadata;
import org.cardanofoundation.ledgersync.jooq.tables.records.TxMetadataRecord;
import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class TxMetadataDao extends AbstractSpringDAOImpl<TxMetadataRecord, org.cardanofoundation.ledgersync.jooq.tables.pojos.TxMetadata, Long> {

    /**
     * Create a new TxMetadataDao without any configuration
     */
    public TxMetadataDao() {
        super(TxMetadata.TX_METADATA, org.cardanofoundation.ledgersync.jooq.tables.pojos.TxMetadata.class);
    }

    /**
     * Create a new TxMetadataDao with an attached configuration
     */
    @Autowired
    public TxMetadataDao(Configuration configuration) {
        super(TxMetadata.TX_METADATA, org.cardanofoundation.ledgersync.jooq.tables.pojos.TxMetadata.class, configuration);
    }

    @Override
    public Long getId(org.cardanofoundation.ledgersync.jooq.tables.pojos.TxMetadata object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.TxMetadata> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(TxMetadata.TX_METADATA.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.TxMetadata> fetchById(Long... values) {
        return fetch(TxMetadata.TX_METADATA.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.cardanofoundation.ledgersync.jooq.tables.pojos.TxMetadata fetchOneById(Long value) {
        return fetchOne(TxMetadata.TX_METADATA.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<org.cardanofoundation.ledgersync.jooq.tables.pojos.TxMetadata> fetchOptionalById(Long value) {
        return fetchOptional(TxMetadata.TX_METADATA.ID, value);
    }

    /**
     * Fetch records that have <code>bytes BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.TxMetadata> fetchRangeOfBytes(byte[] lowerInclusive, byte[] upperInclusive) {
        return fetchRange(TxMetadata.TX_METADATA.BYTES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>bytes IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.TxMetadata> fetchByBytes(byte[]... values) {
        return fetch(TxMetadata.TX_METADATA.BYTES, values);
    }

    /**
     * Fetch records that have <code>json BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.TxMetadata> fetchRangeOfJson(String lowerInclusive, String upperInclusive) {
        return fetchRange(TxMetadata.TX_METADATA.JSON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>json IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.TxMetadata> fetchByJson(String... values) {
        return fetch(TxMetadata.TX_METADATA.JSON, values);
    }

    /**
     * Fetch records that have <code>key BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.TxMetadata> fetchRangeOfKey(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(TxMetadata.TX_METADATA.KEY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>key IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.TxMetadata> fetchByKey(BigInteger... values) {
        return fetch(TxMetadata.TX_METADATA.KEY, values);
    }

    /**
     * Fetch records that have <code>tx_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.TxMetadata> fetchRangeOfTxId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(TxMetadata.TX_METADATA.TX_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tx_id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.TxMetadata> fetchByTxId(Long... values) {
        return fetch(TxMetadata.TX_METADATA.TX_ID, values);
    }
}
