/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.records;


import org.cardanofoundation.ledgersync.jooq.tables.PoolMetadataRef;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PoolMetadataRefRecord extends UpdatableRecordImpl<PoolMetadataRefRecord> implements Record5<Long, String, String, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pool_metadata_ref.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>pool_metadata_ref.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>pool_metadata_ref.hash</code>.
     */
    public void setHash(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>pool_metadata_ref.hash</code>.
     */
    public String getHash() {
        return (String) get(1);
    }

    /**
     * Setter for <code>pool_metadata_ref.url</code>.
     */
    public void setUrl(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>pool_metadata_ref.url</code>.
     */
    public String getUrl() {
        return (String) get(2);
    }

    /**
     * Setter for <code>pool_metadata_ref.pool_id</code>.
     */
    public void setPoolId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>pool_metadata_ref.pool_id</code>.
     */
    public Long getPoolId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>pool_metadata_ref.registered_tx_id</code>.
     */
    public void setRegisteredTxId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>pool_metadata_ref.registered_tx_id</code>.
     */
    public Long getRegisteredTxId() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, String, Long, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, String, String, Long, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PoolMetadataRef.POOL_METADATA_REF.ID;
    }

    @Override
    public Field<String> field2() {
        return PoolMetadataRef.POOL_METADATA_REF.HASH;
    }

    @Override
    public Field<String> field3() {
        return PoolMetadataRef.POOL_METADATA_REF.URL;
    }

    @Override
    public Field<Long> field4() {
        return PoolMetadataRef.POOL_METADATA_REF.POOL_ID;
    }

    @Override
    public Field<Long> field5() {
        return PoolMetadataRef.POOL_METADATA_REF.REGISTERED_TX_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getHash();
    }

    @Override
    public String component3() {
        return getUrl();
    }

    @Override
    public Long component4() {
        return getPoolId();
    }

    @Override
    public Long component5() {
        return getRegisteredTxId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getHash();
    }

    @Override
    public String value3() {
        return getUrl();
    }

    @Override
    public Long value4() {
        return getPoolId();
    }

    @Override
    public Long value5() {
        return getRegisteredTxId();
    }

    @Override
    public PoolMetadataRefRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PoolMetadataRefRecord value2(String value) {
        setHash(value);
        return this;
    }

    @Override
    public PoolMetadataRefRecord value3(String value) {
        setUrl(value);
        return this;
    }

    @Override
    public PoolMetadataRefRecord value4(Long value) {
        setPoolId(value);
        return this;
    }

    @Override
    public PoolMetadataRefRecord value5(Long value) {
        setRegisteredTxId(value);
        return this;
    }

    @Override
    public PoolMetadataRefRecord values(Long value1, String value2, String value3, Long value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PoolMetadataRefRecord
     */
    public PoolMetadataRefRecord() {
        super(PoolMetadataRef.POOL_METADATA_REF);
    }

    /**
     * Create a detached, initialised PoolMetadataRefRecord
     */
    public PoolMetadataRefRecord(Long id, String hash, String url, Long poolId, Long registeredTxId) {
        super(PoolMetadataRef.POOL_METADATA_REF);

        setId(id);
        setHash(hash);
        setUrl(url);
        setPoolId(poolId);
        setRegisteredTxId(registeredTxId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PoolMetadataRefRecord
     */
    public PoolMetadataRefRecord(org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolMetadataRef value) {
        super(PoolMetadataRef.POOL_METADATA_REF);

        if (value != null) {
            setId(value.getId());
            setHash(value.getHash());
            setUrl(value.getUrl());
            setPoolId(value.getPoolId());
            setRegisteredTxId(value.getRegisteredTxId());
            resetChangedOnNotNull();
        }
    }
}
