/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StakeKeyReportHistory implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private String stakeKey;
    private LocalDateTime fromDate;
    private LocalDateTime toDate;
    private Boolean isAdaTransfer;
    private Boolean isFeesPaid;
    private Long reportId;
    private Boolean eventRegistration;
    private Boolean eventDelegation;
    private Boolean eventRewards;
    private Boolean eventWithdrawal;
    private Boolean eventDeregistration;

    public StakeKeyReportHistory() {}

    public StakeKeyReportHistory(StakeKeyReportHistory value) {
        this.id = value.id;
        this.stakeKey = value.stakeKey;
        this.fromDate = value.fromDate;
        this.toDate = value.toDate;
        this.isAdaTransfer = value.isAdaTransfer;
        this.isFeesPaid = value.isFeesPaid;
        this.reportId = value.reportId;
        this.eventRegistration = value.eventRegistration;
        this.eventDelegation = value.eventDelegation;
        this.eventRewards = value.eventRewards;
        this.eventWithdrawal = value.eventWithdrawal;
        this.eventDeregistration = value.eventDeregistration;
    }

    public StakeKeyReportHistory(
        Long id,
        String stakeKey,
        LocalDateTime fromDate,
        LocalDateTime toDate,
        Boolean isAdaTransfer,
        Boolean isFeesPaid,
        Long reportId,
        Boolean eventRegistration,
        Boolean eventDelegation,
        Boolean eventRewards,
        Boolean eventWithdrawal,
        Boolean eventDeregistration
    ) {
        this.id = id;
        this.stakeKey = stakeKey;
        this.fromDate = fromDate;
        this.toDate = toDate;
        this.isAdaTransfer = isAdaTransfer;
        this.isFeesPaid = isFeesPaid;
        this.reportId = reportId;
        this.eventRegistration = eventRegistration;
        this.eventDelegation = eventDelegation;
        this.eventRewards = eventRewards;
        this.eventWithdrawal = eventWithdrawal;
        this.eventDeregistration = eventDeregistration;
    }

    /**
     * Getter for <code>stake_key_report_history.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>stake_key_report_history.id</code>.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>stake_key_report_history.stake_key</code>.
     */
    public String getStakeKey() {
        return this.stakeKey;
    }

    /**
     * Setter for <code>stake_key_report_history.stake_key</code>.
     */
    public void setStakeKey(String stakeKey) {
        this.stakeKey = stakeKey;
    }

    /**
     * Getter for <code>stake_key_report_history.from_date</code>.
     */
    public LocalDateTime getFromDate() {
        return this.fromDate;
    }

    /**
     * Setter for <code>stake_key_report_history.from_date</code>.
     */
    public void setFromDate(LocalDateTime fromDate) {
        this.fromDate = fromDate;
    }

    /**
     * Getter for <code>stake_key_report_history.to_date</code>.
     */
    public LocalDateTime getToDate() {
        return this.toDate;
    }

    /**
     * Setter for <code>stake_key_report_history.to_date</code>.
     */
    public void setToDate(LocalDateTime toDate) {
        this.toDate = toDate;
    }

    /**
     * Getter for <code>stake_key_report_history.is_ada_transfer</code>.
     */
    public Boolean getIsAdaTransfer() {
        return this.isAdaTransfer;
    }

    /**
     * Setter for <code>stake_key_report_history.is_ada_transfer</code>.
     */
    public void setIsAdaTransfer(Boolean isAdaTransfer) {
        this.isAdaTransfer = isAdaTransfer;
    }

    /**
     * Getter for <code>stake_key_report_history.is_fees_paid</code>.
     */
    public Boolean getIsFeesPaid() {
        return this.isFeesPaid;
    }

    /**
     * Setter for <code>stake_key_report_history.is_fees_paid</code>.
     */
    public void setIsFeesPaid(Boolean isFeesPaid) {
        this.isFeesPaid = isFeesPaid;
    }

    /**
     * Getter for <code>stake_key_report_history.report_id</code>.
     */
    public Long getReportId() {
        return this.reportId;
    }

    /**
     * Setter for <code>stake_key_report_history.report_id</code>.
     */
    public void setReportId(Long reportId) {
        this.reportId = reportId;
    }

    /**
     * Getter for <code>stake_key_report_history.event_registration</code>.
     */
    public Boolean getEventRegistration() {
        return this.eventRegistration;
    }

    /**
     * Setter for <code>stake_key_report_history.event_registration</code>.
     */
    public void setEventRegistration(Boolean eventRegistration) {
        this.eventRegistration = eventRegistration;
    }

    /**
     * Getter for <code>stake_key_report_history.event_delegation</code>.
     */
    public Boolean getEventDelegation() {
        return this.eventDelegation;
    }

    /**
     * Setter for <code>stake_key_report_history.event_delegation</code>.
     */
    public void setEventDelegation(Boolean eventDelegation) {
        this.eventDelegation = eventDelegation;
    }

    /**
     * Getter for <code>stake_key_report_history.event_rewards</code>.
     */
    public Boolean getEventRewards() {
        return this.eventRewards;
    }

    /**
     * Setter for <code>stake_key_report_history.event_rewards</code>.
     */
    public void setEventRewards(Boolean eventRewards) {
        this.eventRewards = eventRewards;
    }

    /**
     * Getter for <code>stake_key_report_history.event_withdrawal</code>.
     */
    public Boolean getEventWithdrawal() {
        return this.eventWithdrawal;
    }

    /**
     * Setter for <code>stake_key_report_history.event_withdrawal</code>.
     */
    public void setEventWithdrawal(Boolean eventWithdrawal) {
        this.eventWithdrawal = eventWithdrawal;
    }

    /**
     * Getter for <code>stake_key_report_history.event_deregistration</code>.
     */
    public Boolean getEventDeregistration() {
        return this.eventDeregistration;
    }

    /**
     * Setter for <code>stake_key_report_history.event_deregistration</code>.
     */
    public void setEventDeregistration(Boolean eventDeregistration) {
        this.eventDeregistration = eventDeregistration;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final StakeKeyReportHistory other = (StakeKeyReportHistory) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.stakeKey == null) {
            if (other.stakeKey != null)
                return false;
        }
        else if (!this.stakeKey.equals(other.stakeKey))
            return false;
        if (this.fromDate == null) {
            if (other.fromDate != null)
                return false;
        }
        else if (!this.fromDate.equals(other.fromDate))
            return false;
        if (this.toDate == null) {
            if (other.toDate != null)
                return false;
        }
        else if (!this.toDate.equals(other.toDate))
            return false;
        if (this.isAdaTransfer == null) {
            if (other.isAdaTransfer != null)
                return false;
        }
        else if (!this.isAdaTransfer.equals(other.isAdaTransfer))
            return false;
        if (this.isFeesPaid == null) {
            if (other.isFeesPaid != null)
                return false;
        }
        else if (!this.isFeesPaid.equals(other.isFeesPaid))
            return false;
        if (this.reportId == null) {
            if (other.reportId != null)
                return false;
        }
        else if (!this.reportId.equals(other.reportId))
            return false;
        if (this.eventRegistration == null) {
            if (other.eventRegistration != null)
                return false;
        }
        else if (!this.eventRegistration.equals(other.eventRegistration))
            return false;
        if (this.eventDelegation == null) {
            if (other.eventDelegation != null)
                return false;
        }
        else if (!this.eventDelegation.equals(other.eventDelegation))
            return false;
        if (this.eventRewards == null) {
            if (other.eventRewards != null)
                return false;
        }
        else if (!this.eventRewards.equals(other.eventRewards))
            return false;
        if (this.eventWithdrawal == null) {
            if (other.eventWithdrawal != null)
                return false;
        }
        else if (!this.eventWithdrawal.equals(other.eventWithdrawal))
            return false;
        if (this.eventDeregistration == null) {
            if (other.eventDeregistration != null)
                return false;
        }
        else if (!this.eventDeregistration.equals(other.eventDeregistration))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.stakeKey == null) ? 0 : this.stakeKey.hashCode());
        result = prime * result + ((this.fromDate == null) ? 0 : this.fromDate.hashCode());
        result = prime * result + ((this.toDate == null) ? 0 : this.toDate.hashCode());
        result = prime * result + ((this.isAdaTransfer == null) ? 0 : this.isAdaTransfer.hashCode());
        result = prime * result + ((this.isFeesPaid == null) ? 0 : this.isFeesPaid.hashCode());
        result = prime * result + ((this.reportId == null) ? 0 : this.reportId.hashCode());
        result = prime * result + ((this.eventRegistration == null) ? 0 : this.eventRegistration.hashCode());
        result = prime * result + ((this.eventDelegation == null) ? 0 : this.eventDelegation.hashCode());
        result = prime * result + ((this.eventRewards == null) ? 0 : this.eventRewards.hashCode());
        result = prime * result + ((this.eventWithdrawal == null) ? 0 : this.eventWithdrawal.hashCode());
        result = prime * result + ((this.eventDeregistration == null) ? 0 : this.eventDeregistration.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("StakeKeyReportHistory (");

        sb.append(id);
        sb.append(", ").append(stakeKey);
        sb.append(", ").append(fromDate);
        sb.append(", ").append(toDate);
        sb.append(", ").append(isAdaTransfer);
        sb.append(", ").append(isFeesPaid);
        sb.append(", ").append(reportId);
        sb.append(", ").append(eventRegistration);
        sb.append(", ").append(eventDelegation);
        sb.append(", ").append(eventRewards);
        sb.append(", ").append(eventWithdrawal);
        sb.append(", ").append(eventDeregistration);

        sb.append(")");
        return sb.toString();
    }
}
