/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.pojos;


import java.io.Serializable;
import java.util.Arrays;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PoolOfflineData implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private byte[] bytes;
    private String hash;
    private String json;
    private String tickerName;
    private Long poolId;
    private Long pmrId;
    private String poolName;
    private String logoUrl;
    private String iconUrl;

    public PoolOfflineData() {}

    public PoolOfflineData(PoolOfflineData value) {
        this.id = value.id;
        this.bytes = value.bytes;
        this.hash = value.hash;
        this.json = value.json;
        this.tickerName = value.tickerName;
        this.poolId = value.poolId;
        this.pmrId = value.pmrId;
        this.poolName = value.poolName;
        this.logoUrl = value.logoUrl;
        this.iconUrl = value.iconUrl;
    }

    public PoolOfflineData(
        Long id,
        byte[] bytes,
        String hash,
        String json,
        String tickerName,
        Long poolId,
        Long pmrId,
        String poolName,
        String logoUrl,
        String iconUrl
    ) {
        this.id = id;
        this.bytes = bytes;
        this.hash = hash;
        this.json = json;
        this.tickerName = tickerName;
        this.poolId = poolId;
        this.pmrId = pmrId;
        this.poolName = poolName;
        this.logoUrl = logoUrl;
        this.iconUrl = iconUrl;
    }

    /**
     * Getter for <code>pool_offline_data.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>pool_offline_data.id</code>.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>pool_offline_data.bytes</code>.
     */
    public byte[] getBytes() {
        return this.bytes;
    }

    /**
     * Setter for <code>pool_offline_data.bytes</code>.
     */
    public void setBytes(byte[] bytes) {
        this.bytes = bytes;
    }

    /**
     * Getter for <code>pool_offline_data.hash</code>.
     */
    public String getHash() {
        return this.hash;
    }

    /**
     * Setter for <code>pool_offline_data.hash</code>.
     */
    public void setHash(String hash) {
        this.hash = hash;
    }

    /**
     * Getter for <code>pool_offline_data.json</code>.
     */
    public String getJson() {
        return this.json;
    }

    /**
     * Setter for <code>pool_offline_data.json</code>.
     */
    public void setJson(String json) {
        this.json = json;
    }

    /**
     * Getter for <code>pool_offline_data.ticker_name</code>.
     */
    public String getTickerName() {
        return this.tickerName;
    }

    /**
     * Setter for <code>pool_offline_data.ticker_name</code>.
     */
    public void setTickerName(String tickerName) {
        this.tickerName = tickerName;
    }

    /**
     * Getter for <code>pool_offline_data.pool_id</code>.
     */
    public Long getPoolId() {
        return this.poolId;
    }

    /**
     * Setter for <code>pool_offline_data.pool_id</code>.
     */
    public void setPoolId(Long poolId) {
        this.poolId = poolId;
    }

    /**
     * Getter for <code>pool_offline_data.pmr_id</code>.
     */
    public Long getPmrId() {
        return this.pmrId;
    }

    /**
     * Setter for <code>pool_offline_data.pmr_id</code>.
     */
    public void setPmrId(Long pmrId) {
        this.pmrId = pmrId;
    }

    /**
     * Getter for <code>pool_offline_data.pool_name</code>.
     */
    public String getPoolName() {
        return this.poolName;
    }

    /**
     * Setter for <code>pool_offline_data.pool_name</code>.
     */
    public void setPoolName(String poolName) {
        this.poolName = poolName;
    }

    /**
     * Getter for <code>pool_offline_data.logo_url</code>.
     */
    public String getLogoUrl() {
        return this.logoUrl;
    }

    /**
     * Setter for <code>pool_offline_data.logo_url</code>.
     */
    public void setLogoUrl(String logoUrl) {
        this.logoUrl = logoUrl;
    }

    /**
     * Getter for <code>pool_offline_data.icon_url</code>.
     */
    public String getIconUrl() {
        return this.iconUrl;
    }

    /**
     * Setter for <code>pool_offline_data.icon_url</code>.
     */
    public void setIconUrl(String iconUrl) {
        this.iconUrl = iconUrl;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PoolOfflineData other = (PoolOfflineData) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.bytes == null) {
            if (other.bytes != null)
                return false;
        }
        else if (!Arrays.equals(this.bytes, other.bytes))
            return false;
        if (this.hash == null) {
            if (other.hash != null)
                return false;
        }
        else if (!this.hash.equals(other.hash))
            return false;
        if (this.json == null) {
            if (other.json != null)
                return false;
        }
        else if (!this.json.equals(other.json))
            return false;
        if (this.tickerName == null) {
            if (other.tickerName != null)
                return false;
        }
        else if (!this.tickerName.equals(other.tickerName))
            return false;
        if (this.poolId == null) {
            if (other.poolId != null)
                return false;
        }
        else if (!this.poolId.equals(other.poolId))
            return false;
        if (this.pmrId == null) {
            if (other.pmrId != null)
                return false;
        }
        else if (!this.pmrId.equals(other.pmrId))
            return false;
        if (this.poolName == null) {
            if (other.poolName != null)
                return false;
        }
        else if (!this.poolName.equals(other.poolName))
            return false;
        if (this.logoUrl == null) {
            if (other.logoUrl != null)
                return false;
        }
        else if (!this.logoUrl.equals(other.logoUrl))
            return false;
        if (this.iconUrl == null) {
            if (other.iconUrl != null)
                return false;
        }
        else if (!this.iconUrl.equals(other.iconUrl))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.bytes == null) ? 0 : Arrays.hashCode(this.bytes));
        result = prime * result + ((this.hash == null) ? 0 : this.hash.hashCode());
        result = prime * result + ((this.json == null) ? 0 : this.json.hashCode());
        result = prime * result + ((this.tickerName == null) ? 0 : this.tickerName.hashCode());
        result = prime * result + ((this.poolId == null) ? 0 : this.poolId.hashCode());
        result = prime * result + ((this.pmrId == null) ? 0 : this.pmrId.hashCode());
        result = prime * result + ((this.poolName == null) ? 0 : this.poolName.hashCode());
        result = prime * result + ((this.logoUrl == null) ? 0 : this.logoUrl.hashCode());
        result = prime * result + ((this.iconUrl == null) ? 0 : this.iconUrl.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PoolOfflineData (");

        sb.append(id);
        sb.append(", ").append("[binary...]");
        sb.append(", ").append(hash);
        sb.append(", ").append(json);
        sb.append(", ").append(tickerName);
        sb.append(", ").append(poolId);
        sb.append(", ").append(pmrId);
        sb.append(", ").append(poolName);
        sb.append(", ").append(logoUrl);
        sb.append(", ").append(iconUrl);

        sb.append(")");
        return sb.toString();
    }
}
