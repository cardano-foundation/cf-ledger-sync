/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.records;


import java.math.BigInteger;

import org.cardanofoundation.ledgersync.jooq.tables.PotTransfer;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PotTransferRecord extends UpdatableRecordImpl<PotTransferRecord> implements Record5<Long, Integer, BigInteger, BigInteger, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pot_transfer.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>pot_transfer.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>pot_transfer.cert_index</code>.
     */
    public void setCertIndex(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>pot_transfer.cert_index</code>.
     */
    public Integer getCertIndex() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>pot_transfer.reserves</code>.
     */
    public void setReserves(BigInteger value) {
        set(2, value);
    }

    /**
     * Getter for <code>pot_transfer.reserves</code>.
     */
    public BigInteger getReserves() {
        return (BigInteger) get(2);
    }

    /**
     * Setter for <code>pot_transfer.treasury</code>.
     */
    public void setTreasury(BigInteger value) {
        set(3, value);
    }

    /**
     * Getter for <code>pot_transfer.treasury</code>.
     */
    public BigInteger getTreasury() {
        return (BigInteger) get(3);
    }

    /**
     * Setter for <code>pot_transfer.tx_id</code>.
     */
    public void setTxId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>pot_transfer.tx_id</code>.
     */
    public Long getTxId() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Integer, BigInteger, BigInteger, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Integer, BigInteger, BigInteger, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PotTransfer.POT_TRANSFER.ID;
    }

    @Override
    public Field<Integer> field2() {
        return PotTransfer.POT_TRANSFER.CERT_INDEX;
    }

    @Override
    public Field<BigInteger> field3() {
        return PotTransfer.POT_TRANSFER.RESERVES;
    }

    @Override
    public Field<BigInteger> field4() {
        return PotTransfer.POT_TRANSFER.TREASURY;
    }

    @Override
    public Field<Long> field5() {
        return PotTransfer.POT_TRANSFER.TX_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getCertIndex();
    }

    @Override
    public BigInteger component3() {
        return getReserves();
    }

    @Override
    public BigInteger component4() {
        return getTreasury();
    }

    @Override
    public Long component5() {
        return getTxId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getCertIndex();
    }

    @Override
    public BigInteger value3() {
        return getReserves();
    }

    @Override
    public BigInteger value4() {
        return getTreasury();
    }

    @Override
    public Long value5() {
        return getTxId();
    }

    @Override
    public PotTransferRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PotTransferRecord value2(Integer value) {
        setCertIndex(value);
        return this;
    }

    @Override
    public PotTransferRecord value3(BigInteger value) {
        setReserves(value);
        return this;
    }

    @Override
    public PotTransferRecord value4(BigInteger value) {
        setTreasury(value);
        return this;
    }

    @Override
    public PotTransferRecord value5(Long value) {
        setTxId(value);
        return this;
    }

    @Override
    public PotTransferRecord values(Long value1, Integer value2, BigInteger value3, BigInteger value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PotTransferRecord
     */
    public PotTransferRecord() {
        super(PotTransfer.POT_TRANSFER);
    }

    /**
     * Create a detached, initialised PotTransferRecord
     */
    public PotTransferRecord(Long id, Integer certIndex, BigInteger reserves, BigInteger treasury, Long txId) {
        super(PotTransfer.POT_TRANSFER);

        setId(id);
        setCertIndex(certIndex);
        setReserves(reserves);
        setTreasury(treasury);
        setTxId(txId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PotTransferRecord
     */
    public PotTransferRecord(org.cardanofoundation.ledgersync.jooq.tables.pojos.PotTransfer value) {
        super(PotTransfer.POT_TRANSFER);

        if (value != null) {
            setId(value.getId());
            setCertIndex(value.getCertIndex());
            setReserves(value.getReserves());
            setTreasury(value.getTreasury());
            setTxId(value.getTxId());
            resetChangedOnNotNull();
        }
    }
}
