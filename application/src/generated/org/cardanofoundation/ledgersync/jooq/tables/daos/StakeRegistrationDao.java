/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.daos;


import java.util.List;
import java.util.Optional;

import org.cardanofoundation.ledgersync.jooq.AbstractSpringDAOImpl;
import org.cardanofoundation.ledgersync.jooq.tables.StakeRegistration;
import org.cardanofoundation.ledgersync.jooq.tables.records.StakeRegistrationRecord;
import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class StakeRegistrationDao extends AbstractSpringDAOImpl<StakeRegistrationRecord, org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeRegistration, Long> {

    /**
     * Create a new StakeRegistrationDao without any configuration
     */
    public StakeRegistrationDao() {
        super(StakeRegistration.STAKE_REGISTRATION, org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeRegistration.class);
    }

    /**
     * Create a new StakeRegistrationDao with an attached configuration
     */
    @Autowired
    public StakeRegistrationDao(Configuration configuration) {
        super(StakeRegistration.STAKE_REGISTRATION, org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeRegistration.class, configuration);
    }

    @Override
    public Long getId(org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeRegistration object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeRegistration> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(StakeRegistration.STAKE_REGISTRATION.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeRegistration> fetchById(Long... values) {
        return fetch(StakeRegistration.STAKE_REGISTRATION.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeRegistration fetchOneById(Long value) {
        return fetchOne(StakeRegistration.STAKE_REGISTRATION.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeRegistration> fetchOptionalById(Long value) {
        return fetchOptional(StakeRegistration.STAKE_REGISTRATION.ID, value);
    }

    /**
     * Fetch records that have <code>cert_index BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeRegistration> fetchRangeOfCertIndex(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(StakeRegistration.STAKE_REGISTRATION.CERT_INDEX, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cert_index IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeRegistration> fetchByCertIndex(Integer... values) {
        return fetch(StakeRegistration.STAKE_REGISTRATION.CERT_INDEX, values);
    }

    /**
     * Fetch records that have <code>epoch_no BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeRegistration> fetchRangeOfEpochNo(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(StakeRegistration.STAKE_REGISTRATION.EPOCH_NO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>epoch_no IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeRegistration> fetchByEpochNo(Integer... values) {
        return fetch(StakeRegistration.STAKE_REGISTRATION.EPOCH_NO, values);
    }

    /**
     * Fetch records that have <code>addr_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeRegistration> fetchRangeOfAddrId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(StakeRegistration.STAKE_REGISTRATION.ADDR_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>addr_id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeRegistration> fetchByAddrId(Long... values) {
        return fetch(StakeRegistration.STAKE_REGISTRATION.ADDR_ID, values);
    }

    /**
     * Fetch records that have <code>tx_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeRegistration> fetchRangeOfTxId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(StakeRegistration.STAKE_REGISTRATION.TX_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tx_id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeRegistration> fetchByTxId(Long... values) {
        return fetch(StakeRegistration.STAKE_REGISTRATION.TX_ID, values);
    }
}
