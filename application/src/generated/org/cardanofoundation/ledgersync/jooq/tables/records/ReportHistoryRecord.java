/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.records;


import java.time.LocalDateTime;

import org.cardanofoundation.ledgersync.jooq.tables.ReportHistory;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReportHistoryRecord extends UpdatableRecordImpl<ReportHistoryRecord> implements Record8<Long, String, LocalDateTime, String, String, String, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>report_history.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>report_history.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>report_history.report_name</code>.
     */
    public void setReportName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>report_history.report_name</code>.
     */
    public String getReportName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>report_history.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>report_history.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>report_history.username</code>.
     */
    public void setUsername(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>report_history.username</code>.
     */
    public String getUsername() {
        return (String) get(3);
    }

    /**
     * Setter for <code>report_history.status</code>.
     */
    public void setStatus(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>report_history.status</code>.
     */
    public String getStatus() {
        return (String) get(4);
    }

    /**
     * Setter for <code>report_history.type</code>.
     */
    public void setType(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>report_history.type</code>.
     */
    public String getType() {
        return (String) get(5);
    }

    /**
     * Setter for <code>report_history.storage_key</code>.
     */
    public void setStorageKey(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>report_history.storage_key</code>.
     */
    public String getStorageKey() {
        return (String) get(6);
    }

    /**
     * Setter for <code>report_history.uploaded_at</code>.
     */
    public void setUploadedAt(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>report_history.uploaded_at</code>.
     */
    public LocalDateTime getUploadedAt() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, String, LocalDateTime, String, String, String, String, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, String, LocalDateTime, String, String, String, String, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ReportHistory.REPORT_HISTORY.ID;
    }

    @Override
    public Field<String> field2() {
        return ReportHistory.REPORT_HISTORY.REPORT_NAME;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return ReportHistory.REPORT_HISTORY.CREATED_AT;
    }

    @Override
    public Field<String> field4() {
        return ReportHistory.REPORT_HISTORY.USERNAME;
    }

    @Override
    public Field<String> field5() {
        return ReportHistory.REPORT_HISTORY.STATUS;
    }

    @Override
    public Field<String> field6() {
        return ReportHistory.REPORT_HISTORY.TYPE;
    }

    @Override
    public Field<String> field7() {
        return ReportHistory.REPORT_HISTORY.STORAGE_KEY;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return ReportHistory.REPORT_HISTORY.UPLOADED_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getReportName();
    }

    @Override
    public LocalDateTime component3() {
        return getCreatedAt();
    }

    @Override
    public String component4() {
        return getUsername();
    }

    @Override
    public String component5() {
        return getStatus();
    }

    @Override
    public String component6() {
        return getType();
    }

    @Override
    public String component7() {
        return getStorageKey();
    }

    @Override
    public LocalDateTime component8() {
        return getUploadedAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getReportName();
    }

    @Override
    public LocalDateTime value3() {
        return getCreatedAt();
    }

    @Override
    public String value4() {
        return getUsername();
    }

    @Override
    public String value5() {
        return getStatus();
    }

    @Override
    public String value6() {
        return getType();
    }

    @Override
    public String value7() {
        return getStorageKey();
    }

    @Override
    public LocalDateTime value8() {
        return getUploadedAt();
    }

    @Override
    public ReportHistoryRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ReportHistoryRecord value2(String value) {
        setReportName(value);
        return this;
    }

    @Override
    public ReportHistoryRecord value3(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public ReportHistoryRecord value4(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public ReportHistoryRecord value5(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public ReportHistoryRecord value6(String value) {
        setType(value);
        return this;
    }

    @Override
    public ReportHistoryRecord value7(String value) {
        setStorageKey(value);
        return this;
    }

    @Override
    public ReportHistoryRecord value8(LocalDateTime value) {
        setUploadedAt(value);
        return this;
    }

    @Override
    public ReportHistoryRecord values(Long value1, String value2, LocalDateTime value3, String value4, String value5, String value6, String value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ReportHistoryRecord
     */
    public ReportHistoryRecord() {
        super(ReportHistory.REPORT_HISTORY);
    }

    /**
     * Create a detached, initialised ReportHistoryRecord
     */
    public ReportHistoryRecord(Long id, String reportName, LocalDateTime createdAt, String username, String status, String type, String storageKey, LocalDateTime uploadedAt) {
        super(ReportHistory.REPORT_HISTORY);

        setId(id);
        setReportName(reportName);
        setCreatedAt(createdAt);
        setUsername(username);
        setStatus(status);
        setType(type);
        setStorageKey(storageKey);
        setUploadedAt(uploadedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ReportHistoryRecord
     */
    public ReportHistoryRecord(org.cardanofoundation.ledgersync.jooq.tables.pojos.ReportHistory value) {
        super(ReportHistory.REPORT_HISTORY);

        if (value != null) {
            setId(value.getId());
            setReportName(value.getReportName());
            setCreatedAt(value.getCreatedAt());
            setUsername(value.getUsername());
            setStatus(value.getStatus());
            setType(value.getType());
            setStorageKey(value.getStorageKey());
            setUploadedAt(value.getUploadedAt());
            resetChangedOnNotNull();
        }
    }
}
