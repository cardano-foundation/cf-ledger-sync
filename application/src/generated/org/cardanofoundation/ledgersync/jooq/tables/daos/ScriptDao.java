/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.daos;


import java.util.List;
import java.util.Optional;

import org.cardanofoundation.ledgersync.jooq.AbstractSpringDAOImpl;
import org.cardanofoundation.ledgersync.jooq.tables.Script;
import org.cardanofoundation.ledgersync.jooq.tables.records.ScriptRecord;
import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class ScriptDao extends AbstractSpringDAOImpl<ScriptRecord, org.cardanofoundation.ledgersync.jooq.tables.pojos.Script, Long> {

    /**
     * Create a new ScriptDao without any configuration
     */
    public ScriptDao() {
        super(Script.SCRIPT, org.cardanofoundation.ledgersync.jooq.tables.pojos.Script.class);
    }

    /**
     * Create a new ScriptDao with an attached configuration
     */
    @Autowired
    public ScriptDao(Configuration configuration) {
        super(Script.SCRIPT, org.cardanofoundation.ledgersync.jooq.tables.pojos.Script.class, configuration);
    }

    @Override
    public Long getId(org.cardanofoundation.ledgersync.jooq.tables.pojos.Script object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Script> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Script.SCRIPT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Script> fetchById(Long... values) {
        return fetch(Script.SCRIPT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.cardanofoundation.ledgersync.jooq.tables.pojos.Script fetchOneById(Long value) {
        return fetchOne(Script.SCRIPT.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<org.cardanofoundation.ledgersync.jooq.tables.pojos.Script> fetchOptionalById(Long value) {
        return fetchOptional(Script.SCRIPT.ID, value);
    }

    /**
     * Fetch records that have <code>bytes BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Script> fetchRangeOfBytes(byte[] lowerInclusive, byte[] upperInclusive) {
        return fetchRange(Script.SCRIPT.BYTES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>bytes IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Script> fetchByBytes(byte[]... values) {
        return fetch(Script.SCRIPT.BYTES, values);
    }

    /**
     * Fetch records that have <code>hash BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Script> fetchRangeOfHash(String lowerInclusive, String upperInclusive) {
        return fetchRange(Script.SCRIPT.HASH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>hash IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Script> fetchByHash(String... values) {
        return fetch(Script.SCRIPT.HASH, values);
    }

    /**
     * Fetch records that have <code>json BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Script> fetchRangeOfJson(String lowerInclusive, String upperInclusive) {
        return fetchRange(Script.SCRIPT.JSON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>json IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Script> fetchByJson(String... values) {
        return fetch(Script.SCRIPT.JSON, values);
    }

    /**
     * Fetch records that have <code>serialised_size BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Script> fetchRangeOfSerialisedSize(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Script.SCRIPT.SERIALISED_SIZE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>serialised_size IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Script> fetchBySerialisedSize(Integer... values) {
        return fetch(Script.SCRIPT.SERIALISED_SIZE, values);
    }

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Script> fetchRangeOfType(String lowerInclusive, String upperInclusive) {
        return fetchRange(Script.SCRIPT.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Script> fetchByType(String... values) {
        return fetch(Script.SCRIPT.TYPE, values);
    }

    /**
     * Fetch records that have <code>tx_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Script> fetchRangeOfTxId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Script.SCRIPT.TX_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tx_id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Script> fetchByTxId(Long... values) {
        return fetch(Script.SCRIPT.TX_ID, values);
    }
}
