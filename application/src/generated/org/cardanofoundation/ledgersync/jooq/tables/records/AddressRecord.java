/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.records;


import java.math.BigInteger;

import org.cardanofoundation.ledgersync.jooq.tables.Address;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AddressRecord extends UpdatableRecordImpl<AddressRecord> implements Record7<Long, String, Boolean, BigInteger, Long, Long, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>address.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>address.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>address.address</code>.
     */
    public void setAddress(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>address.address</code>.
     */
    public String getAddress() {
        return (String) get(1);
    }

    /**
     * Setter for <code>address.address_has_script</code>.
     */
    public void setAddressHasScript(Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>address.address_has_script</code>.
     */
    public Boolean getAddressHasScript() {
        return (Boolean) get(2);
    }

    /**
     * Setter for <code>address.balance</code>.
     */
    public void setBalance(BigInteger value) {
        set(3, value);
    }

    /**
     * Getter for <code>address.balance</code>.
     */
    public BigInteger getBalance() {
        return (BigInteger) get(3);
    }

    /**
     * Setter for <code>address.tx_count</code>.
     */
    public void setTxCount(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>address.tx_count</code>.
     */
    public Long getTxCount() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>address.stake_address_id</code>.
     */
    public void setStakeAddressId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>address.stake_address_id</code>.
     */
    public Long getStakeAddressId() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>address.verified_contract</code>.
     */
    public void setVerifiedContract(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>address.verified_contract</code>.
     */
    public Boolean getVerifiedContract() {
        return (Boolean) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, String, Boolean, BigInteger, Long, Long, Boolean> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, String, Boolean, BigInteger, Long, Long, Boolean> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Address.ADDRESS.ID;
    }

    @Override
    public Field<String> field2() {
        return Address.ADDRESS.ADDRESS_;
    }

    @Override
    public Field<Boolean> field3() {
        return Address.ADDRESS.ADDRESS_HAS_SCRIPT;
    }

    @Override
    public Field<BigInteger> field4() {
        return Address.ADDRESS.BALANCE;
    }

    @Override
    public Field<Long> field5() {
        return Address.ADDRESS.TX_COUNT;
    }

    @Override
    public Field<Long> field6() {
        return Address.ADDRESS.STAKE_ADDRESS_ID;
    }

    @Override
    public Field<Boolean> field7() {
        return Address.ADDRESS.VERIFIED_CONTRACT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getAddress();
    }

    @Override
    public Boolean component3() {
        return getAddressHasScript();
    }

    @Override
    public BigInteger component4() {
        return getBalance();
    }

    @Override
    public Long component5() {
        return getTxCount();
    }

    @Override
    public Long component6() {
        return getStakeAddressId();
    }

    @Override
    public Boolean component7() {
        return getVerifiedContract();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getAddress();
    }

    @Override
    public Boolean value3() {
        return getAddressHasScript();
    }

    @Override
    public BigInteger value4() {
        return getBalance();
    }

    @Override
    public Long value5() {
        return getTxCount();
    }

    @Override
    public Long value6() {
        return getStakeAddressId();
    }

    @Override
    public Boolean value7() {
        return getVerifiedContract();
    }

    @Override
    public AddressRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AddressRecord value2(String value) {
        setAddress(value);
        return this;
    }

    @Override
    public AddressRecord value3(Boolean value) {
        setAddressHasScript(value);
        return this;
    }

    @Override
    public AddressRecord value4(BigInteger value) {
        setBalance(value);
        return this;
    }

    @Override
    public AddressRecord value5(Long value) {
        setTxCount(value);
        return this;
    }

    @Override
    public AddressRecord value6(Long value) {
        setStakeAddressId(value);
        return this;
    }

    @Override
    public AddressRecord value7(Boolean value) {
        setVerifiedContract(value);
        return this;
    }

    @Override
    public AddressRecord values(Long value1, String value2, Boolean value3, BigInteger value4, Long value5, Long value6, Boolean value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AddressRecord
     */
    public AddressRecord() {
        super(Address.ADDRESS);
    }

    /**
     * Create a detached, initialised AddressRecord
     */
    public AddressRecord(Long id, String address, Boolean addressHasScript, BigInteger balance, Long txCount, Long stakeAddressId, Boolean verifiedContract) {
        super(Address.ADDRESS);

        setId(id);
        setAddress(address);
        setAddressHasScript(addressHasScript);
        setBalance(balance);
        setTxCount(txCount);
        setStakeAddressId(stakeAddressId);
        setVerifiedContract(verifiedContract);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised AddressRecord
     */
    public AddressRecord(org.cardanofoundation.ledgersync.jooq.tables.pojos.Address value) {
        super(Address.ADDRESS);

        if (value != null) {
            setId(value.getId());
            setAddress(value.getAddress());
            setAddressHasScript(value.getAddressHasScript());
            setBalance(value.getBalance());
            setTxCount(value.getTxCount());
            setStakeAddressId(value.getStakeAddressId());
            setVerifiedContract(value.getVerifiedContract());
            resetChangedOnNotNull();
        }
    }
}
