/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.daos;


import java.math.BigInteger;
import java.util.List;
import java.util.Optional;

import org.cardanofoundation.ledgersync.jooq.AbstractSpringDAOImpl;
import org.cardanofoundation.ledgersync.jooq.tables.StakeAddress;
import org.cardanofoundation.ledgersync.jooq.tables.records.StakeAddressRecord;
import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class StakeAddressDao extends AbstractSpringDAOImpl<StakeAddressRecord, org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeAddress, Long> {

    /**
     * Create a new StakeAddressDao without any configuration
     */
    public StakeAddressDao() {
        super(StakeAddress.STAKE_ADDRESS, org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeAddress.class);
    }

    /**
     * Create a new StakeAddressDao with an attached configuration
     */
    @Autowired
    public StakeAddressDao(Configuration configuration) {
        super(StakeAddress.STAKE_ADDRESS, org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeAddress.class, configuration);
    }

    @Override
    public Long getId(org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeAddress object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeAddress> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(StakeAddress.STAKE_ADDRESS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeAddress> fetchById(Long... values) {
        return fetch(StakeAddress.STAKE_ADDRESS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeAddress fetchOneById(Long value) {
        return fetchOne(StakeAddress.STAKE_ADDRESS.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeAddress> fetchOptionalById(Long value) {
        return fetchOptional(StakeAddress.STAKE_ADDRESS.ID, value);
    }

    /**
     * Fetch records that have <code>hash_raw BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeAddress> fetchRangeOfHashRaw(String lowerInclusive, String upperInclusive) {
        return fetchRange(StakeAddress.STAKE_ADDRESS.HASH_RAW, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>hash_raw IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeAddress> fetchByHashRaw(String... values) {
        return fetch(StakeAddress.STAKE_ADDRESS.HASH_RAW, values);
    }

    /**
     * Fetch a unique record that has <code>hash_raw = value</code>
     */
    public org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeAddress fetchOneByHashRaw(String value) {
        return fetchOne(StakeAddress.STAKE_ADDRESS.HASH_RAW, value);
    }

    /**
     * Fetch a unique record that has <code>hash_raw = value</code>
     */
    public Optional<org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeAddress> fetchOptionalByHashRaw(String value) {
        return fetchOptional(StakeAddress.STAKE_ADDRESS.HASH_RAW, value);
    }

    /**
     * Fetch records that have <code>script_hash BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeAddress> fetchRangeOfScriptHash(String lowerInclusive, String upperInclusive) {
        return fetchRange(StakeAddress.STAKE_ADDRESS.SCRIPT_HASH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>script_hash IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeAddress> fetchByScriptHash(String... values) {
        return fetch(StakeAddress.STAKE_ADDRESS.SCRIPT_HASH, values);
    }

    /**
     * Fetch records that have <code>view BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeAddress> fetchRangeOfView(String lowerInclusive, String upperInclusive) {
        return fetchRange(StakeAddress.STAKE_ADDRESS.VIEW, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>view IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeAddress> fetchByView(String... values) {
        return fetch(StakeAddress.STAKE_ADDRESS.VIEW, values);
    }

    /**
     * Fetch records that have <code>balance BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeAddress> fetchRangeOfBalance(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(StakeAddress.STAKE_ADDRESS.BALANCE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>balance IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeAddress> fetchByBalance(BigInteger... values) {
        return fetch(StakeAddress.STAKE_ADDRESS.BALANCE, values);
    }

    /**
     * Fetch records that have <code>available_reward BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeAddress> fetchRangeOfAvailableReward(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(StakeAddress.STAKE_ADDRESS.AVAILABLE_REWARD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>available_reward IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.StakeAddress> fetchByAvailableReward(BigInteger... values) {
        return fetch(StakeAddress.STAKE_ADDRESS.AVAILABLE_REWARD, values);
    }
}
