/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.daos;


import java.time.LocalDateTime;
import java.util.List;

import org.cardanofoundation.ledgersync.jooq.AbstractSpringDAOImpl;
import org.cardanofoundation.ledgersync.jooq.tables.Cursor_;
import org.cardanofoundation.ledgersync.jooq.tables.records.Cursor_Record;
import org.jooq.Configuration;
import org.jooq.Record2;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class Cursor_Dao extends AbstractSpringDAOImpl<Cursor_Record, org.cardanofoundation.ledgersync.jooq.tables.pojos.Cursor_, Record2<Integer, String>> {

    /**
     * Create a new Cursor_Dao without any configuration
     */
    public Cursor_Dao() {
        super(Cursor_.CURSOR_, org.cardanofoundation.ledgersync.jooq.tables.pojos.Cursor_.class);
    }

    /**
     * Create a new Cursor_Dao with an attached configuration
     */
    @Autowired
    public Cursor_Dao(Configuration configuration) {
        super(Cursor_.CURSOR_, org.cardanofoundation.ledgersync.jooq.tables.pojos.Cursor_.class, configuration);
    }

    @Override
    public Record2<Integer, String> getId(org.cardanofoundation.ledgersync.jooq.tables.pojos.Cursor_ object) {
        return compositeKeyRecord(object.getId(), object.getBlockHash());
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Cursor_> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Cursor_.CURSOR_.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Cursor_> fetchById(Integer... values) {
        return fetch(Cursor_.CURSOR_.ID, values);
    }

    /**
     * Fetch records that have <code>block_hash BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Cursor_> fetchRangeOfBlockHash(String lowerInclusive, String upperInclusive) {
        return fetchRange(Cursor_.CURSOR_.BLOCK_HASH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>block_hash IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Cursor_> fetchByBlockHash(String... values) {
        return fetch(Cursor_.CURSOR_.BLOCK_HASH, values);
    }

    /**
     * Fetch records that have <code>slot BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Cursor_> fetchRangeOfSlot(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Cursor_.CURSOR_.SLOT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>slot IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Cursor_> fetchBySlot(Long... values) {
        return fetch(Cursor_.CURSOR_.SLOT, values);
    }

    /**
     * Fetch records that have <code>block_number BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Cursor_> fetchRangeOfBlockNumber(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Cursor_.CURSOR_.BLOCK_NUMBER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>block_number IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Cursor_> fetchByBlockNumber(Long... values) {
        return fetch(Cursor_.CURSOR_.BLOCK_NUMBER, values);
    }

    /**
     * Fetch records that have <code>era BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Cursor_> fetchRangeOfEra(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Cursor_.CURSOR_.ERA, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>era IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Cursor_> fetchByEra(Integer... values) {
        return fetch(Cursor_.CURSOR_.ERA, values);
    }

    /**
     * Fetch records that have <code>prev_block_hash BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Cursor_> fetchRangeOfPrevBlockHash(String lowerInclusive, String upperInclusive) {
        return fetchRange(Cursor_.CURSOR_.PREV_BLOCK_HASH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>prev_block_hash IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Cursor_> fetchByPrevBlockHash(String... values) {
        return fetch(Cursor_.CURSOR_.PREV_BLOCK_HASH, values);
    }

    /**
     * Fetch records that have <code>create_datetime BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Cursor_> fetchRangeOfCreateDatetime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Cursor_.CURSOR_.CREATE_DATETIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_datetime IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Cursor_> fetchByCreateDatetime(LocalDateTime... values) {
        return fetch(Cursor_.CURSOR_.CREATE_DATETIME, values);
    }

    /**
     * Fetch records that have <code>update_datetime BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Cursor_> fetchRangeOfUpdateDatetime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Cursor_.CURSOR_.UPDATE_DATETIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>update_datetime IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Cursor_> fetchByUpdateDatetime(LocalDateTime... values) {
        return fetch(Cursor_.CURSOR_.UPDATE_DATETIME, values);
    }
}
