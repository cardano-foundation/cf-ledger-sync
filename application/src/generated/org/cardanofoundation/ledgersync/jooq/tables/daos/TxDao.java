/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.daos;


import java.math.BigInteger;
import java.util.List;
import java.util.Optional;

import org.cardanofoundation.ledgersync.jooq.AbstractSpringDAOImpl;
import org.cardanofoundation.ledgersync.jooq.tables.Tx;
import org.cardanofoundation.ledgersync.jooq.tables.records.TxRecord;
import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class TxDao extends AbstractSpringDAOImpl<TxRecord, org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx, Long> {

    /**
     * Create a new TxDao without any configuration
     */
    public TxDao() {
        super(Tx.TX, org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx.class);
    }

    /**
     * Create a new TxDao with an attached configuration
     */
    @Autowired
    public TxDao(Configuration configuration) {
        super(Tx.TX, org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx.class, configuration);
    }

    @Override
    public Long getId(org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Tx.TX.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx> fetchById(Long... values) {
        return fetch(Tx.TX.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx fetchOneById(Long value) {
        return fetchOne(Tx.TX.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx> fetchOptionalById(Long value) {
        return fetchOptional(Tx.TX.ID, value);
    }

    /**
     * Fetch records that have <code>block_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx> fetchRangeOfBlockId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Tx.TX.BLOCK_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>block_id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx> fetchByBlockId(Long... values) {
        return fetch(Tx.TX.BLOCK_ID, values);
    }

    /**
     * Fetch records that have <code>block_index BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx> fetchRangeOfBlockIndex(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Tx.TX.BLOCK_INDEX, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>block_index IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx> fetchByBlockIndex(Long... values) {
        return fetch(Tx.TX.BLOCK_INDEX, values);
    }

    /**
     * Fetch records that have <code>deposit BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx> fetchRangeOfDeposit(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Tx.TX.DEPOSIT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>deposit IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx> fetchByDeposit(Long... values) {
        return fetch(Tx.TX.DEPOSIT, values);
    }

    /**
     * Fetch records that have <code>fee BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx> fetchRangeOfFee(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(Tx.TX.FEE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>fee IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx> fetchByFee(BigInteger... values) {
        return fetch(Tx.TX.FEE, values);
    }

    /**
     * Fetch records that have <code>hash BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx> fetchRangeOfHash(String lowerInclusive, String upperInclusive) {
        return fetchRange(Tx.TX.HASH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>hash IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx> fetchByHash(String... values) {
        return fetch(Tx.TX.HASH, values);
    }

    /**
     * Fetch a unique record that has <code>hash = value</code>
     */
    public org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx fetchOneByHash(String value) {
        return fetchOne(Tx.TX.HASH, value);
    }

    /**
     * Fetch a unique record that has <code>hash = value</code>
     */
    public Optional<org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx> fetchOptionalByHash(String value) {
        return fetchOptional(Tx.TX.HASH, value);
    }

    /**
     * Fetch records that have <code>invalid_before BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx> fetchRangeOfInvalidBefore(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(Tx.TX.INVALID_BEFORE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>invalid_before IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx> fetchByInvalidBefore(BigInteger... values) {
        return fetch(Tx.TX.INVALID_BEFORE, values);
    }

    /**
     * Fetch records that have <code>invalid_hereafter BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx> fetchRangeOfInvalidHereafter(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(Tx.TX.INVALID_HEREAFTER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>invalid_hereafter IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx> fetchByInvalidHereafter(BigInteger... values) {
        return fetch(Tx.TX.INVALID_HEREAFTER, values);
    }

    /**
     * Fetch records that have <code>out_sum BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx> fetchRangeOfOutSum(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(Tx.TX.OUT_SUM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>out_sum IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx> fetchByOutSum(BigInteger... values) {
        return fetch(Tx.TX.OUT_SUM, values);
    }

    /**
     * Fetch records that have <code>script_size BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx> fetchRangeOfScriptSize(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Tx.TX.SCRIPT_SIZE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>script_size IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx> fetchByScriptSize(Integer... values) {
        return fetch(Tx.TX.SCRIPT_SIZE, values);
    }

    /**
     * Fetch records that have <code>size BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx> fetchRangeOfSize(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Tx.TX.SIZE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>size IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx> fetchBySize(Integer... values) {
        return fetch(Tx.TX.SIZE, values);
    }

    /**
     * Fetch records that have <code>valid_contract BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx> fetchRangeOfValidContract(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Tx.TX.VALID_CONTRACT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>valid_contract IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx> fetchByValidContract(Boolean... values) {
        return fetch(Tx.TX.VALID_CONTRACT, values);
    }

    /**
     * Fetch records that have <code>tx_metadata_hash_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx> fetchRangeOfTxMetadataHashId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Tx.TX.TX_METADATA_HASH_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tx_metadata_hash_id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Tx> fetchByTxMetadataHashId(Long... values) {
        return fetch(Tx.TX.TX_METADATA_HASH_ID, values);
    }
}
