/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.records;


import org.cardanofoundation.ledgersync.jooq.tables.PoolOfflineData;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PoolOfflineDataRecord extends UpdatableRecordImpl<PoolOfflineDataRecord> implements Record10<Long, byte[], String, String, String, Long, Long, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pool_offline_data.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>pool_offline_data.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>pool_offline_data.bytes</code>.
     */
    public void setBytes(byte[] value) {
        set(1, value);
    }

    /**
     * Getter for <code>pool_offline_data.bytes</code>.
     */
    public byte[] getBytes() {
        return (byte[]) get(1);
    }

    /**
     * Setter for <code>pool_offline_data.hash</code>.
     */
    public void setHash(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>pool_offline_data.hash</code>.
     */
    public String getHash() {
        return (String) get(2);
    }

    /**
     * Setter for <code>pool_offline_data.json</code>.
     */
    public void setJson(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>pool_offline_data.json</code>.
     */
    public String getJson() {
        return (String) get(3);
    }

    /**
     * Setter for <code>pool_offline_data.ticker_name</code>.
     */
    public void setTickerName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>pool_offline_data.ticker_name</code>.
     */
    public String getTickerName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>pool_offline_data.pool_id</code>.
     */
    public void setPoolId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>pool_offline_data.pool_id</code>.
     */
    public Long getPoolId() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>pool_offline_data.pmr_id</code>.
     */
    public void setPmrId(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>pool_offline_data.pmr_id</code>.
     */
    public Long getPmrId() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>pool_offline_data.pool_name</code>.
     */
    public void setPoolName(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>pool_offline_data.pool_name</code>.
     */
    public String getPoolName() {
        return (String) get(7);
    }

    /**
     * Setter for <code>pool_offline_data.logo_url</code>.
     */
    public void setLogoUrl(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>pool_offline_data.logo_url</code>.
     */
    public String getLogoUrl() {
        return (String) get(8);
    }

    /**
     * Setter for <code>pool_offline_data.icon_url</code>.
     */
    public void setIconUrl(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>pool_offline_data.icon_url</code>.
     */
    public String getIconUrl() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Long, byte[], String, String, String, Long, Long, String, String, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Long, byte[], String, String, String, Long, Long, String, String, String> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PoolOfflineData.POOL_OFFLINE_DATA.ID;
    }

    @Override
    public Field<byte[]> field2() {
        return PoolOfflineData.POOL_OFFLINE_DATA.BYTES;
    }

    @Override
    public Field<String> field3() {
        return PoolOfflineData.POOL_OFFLINE_DATA.HASH;
    }

    @Override
    public Field<String> field4() {
        return PoolOfflineData.POOL_OFFLINE_DATA.JSON;
    }

    @Override
    public Field<String> field5() {
        return PoolOfflineData.POOL_OFFLINE_DATA.TICKER_NAME;
    }

    @Override
    public Field<Long> field6() {
        return PoolOfflineData.POOL_OFFLINE_DATA.POOL_ID;
    }

    @Override
    public Field<Long> field7() {
        return PoolOfflineData.POOL_OFFLINE_DATA.PMR_ID;
    }

    @Override
    public Field<String> field8() {
        return PoolOfflineData.POOL_OFFLINE_DATA.POOL_NAME;
    }

    @Override
    public Field<String> field9() {
        return PoolOfflineData.POOL_OFFLINE_DATA.LOGO_URL;
    }

    @Override
    public Field<String> field10() {
        return PoolOfflineData.POOL_OFFLINE_DATA.ICON_URL;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public byte[] component2() {
        return getBytes();
    }

    @Override
    public String component3() {
        return getHash();
    }

    @Override
    public String component4() {
        return getJson();
    }

    @Override
    public String component5() {
        return getTickerName();
    }

    @Override
    public Long component6() {
        return getPoolId();
    }

    @Override
    public Long component7() {
        return getPmrId();
    }

    @Override
    public String component8() {
        return getPoolName();
    }

    @Override
    public String component9() {
        return getLogoUrl();
    }

    @Override
    public String component10() {
        return getIconUrl();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public byte[] value2() {
        return getBytes();
    }

    @Override
    public String value3() {
        return getHash();
    }

    @Override
    public String value4() {
        return getJson();
    }

    @Override
    public String value5() {
        return getTickerName();
    }

    @Override
    public Long value6() {
        return getPoolId();
    }

    @Override
    public Long value7() {
        return getPmrId();
    }

    @Override
    public String value8() {
        return getPoolName();
    }

    @Override
    public String value9() {
        return getLogoUrl();
    }

    @Override
    public String value10() {
        return getIconUrl();
    }

    @Override
    public PoolOfflineDataRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PoolOfflineDataRecord value2(byte[] value) {
        setBytes(value);
        return this;
    }

    @Override
    public PoolOfflineDataRecord value3(String value) {
        setHash(value);
        return this;
    }

    @Override
    public PoolOfflineDataRecord value4(String value) {
        setJson(value);
        return this;
    }

    @Override
    public PoolOfflineDataRecord value5(String value) {
        setTickerName(value);
        return this;
    }

    @Override
    public PoolOfflineDataRecord value6(Long value) {
        setPoolId(value);
        return this;
    }

    @Override
    public PoolOfflineDataRecord value7(Long value) {
        setPmrId(value);
        return this;
    }

    @Override
    public PoolOfflineDataRecord value8(String value) {
        setPoolName(value);
        return this;
    }

    @Override
    public PoolOfflineDataRecord value9(String value) {
        setLogoUrl(value);
        return this;
    }

    @Override
    public PoolOfflineDataRecord value10(String value) {
        setIconUrl(value);
        return this;
    }

    @Override
    public PoolOfflineDataRecord values(Long value1, byte[] value2, String value3, String value4, String value5, Long value6, Long value7, String value8, String value9, String value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PoolOfflineDataRecord
     */
    public PoolOfflineDataRecord() {
        super(PoolOfflineData.POOL_OFFLINE_DATA);
    }

    /**
     * Create a detached, initialised PoolOfflineDataRecord
     */
    public PoolOfflineDataRecord(Long id, byte[] bytes, String hash, String json, String tickerName, Long poolId, Long pmrId, String poolName, String logoUrl, String iconUrl) {
        super(PoolOfflineData.POOL_OFFLINE_DATA);

        setId(id);
        setBytes(bytes);
        setHash(hash);
        setJson(json);
        setTickerName(tickerName);
        setPoolId(poolId);
        setPmrId(pmrId);
        setPoolName(poolName);
        setLogoUrl(logoUrl);
        setIconUrl(iconUrl);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PoolOfflineDataRecord
     */
    public PoolOfflineDataRecord(org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineData value) {
        super(PoolOfflineData.POOL_OFFLINE_DATA);

        if (value != null) {
            setId(value.getId());
            setBytes(value.getBytes());
            setHash(value.getHash());
            setJson(value.getJson());
            setTickerName(value.getTickerName());
            setPoolId(value.getPoolId());
            setPmrId(value.getPmrId());
            setPoolName(value.getPoolName());
            setLogoUrl(value.getLogoUrl());
            setIconUrl(value.getIconUrl());
            resetChangedOnNotNull();
        }
    }
}
