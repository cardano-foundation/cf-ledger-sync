/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq;


import org.cardanofoundation.ledgersync.jooq.tables.AdaPots;
import org.cardanofoundation.ledgersync.jooq.tables.Address;
import org.cardanofoundation.ledgersync.jooq.tables.AddressToken;
import org.cardanofoundation.ledgersync.jooq.tables.AddressTokenBalance;
import org.cardanofoundation.ledgersync.jooq.tables.AddressTxBalance;
import org.cardanofoundation.ledgersync.jooq.tables.AggAddressToken;
import org.cardanofoundation.ledgersync.jooq.tables.AggAddressTxBalance;
import org.cardanofoundation.ledgersync.jooq.tables.AggPoolInfo;
import org.cardanofoundation.ledgersync.jooq.tables.AssetMetadata;
import org.cardanofoundation.ledgersync.jooq.tables.Block;
import org.cardanofoundation.ledgersync.jooq.tables.CostModel;
import org.cardanofoundation.ledgersync.jooq.tables.Datum;
import org.cardanofoundation.ledgersync.jooq.tables.Delegation;
import org.cardanofoundation.ledgersync.jooq.tables.DelistedPool;
import org.cardanofoundation.ledgersync.jooq.tables.Epoch;
import org.cardanofoundation.ledgersync.jooq.tables.EpochParam;
import org.cardanofoundation.ledgersync.jooq.tables.EpochStake;
import org.cardanofoundation.ledgersync.jooq.tables.EpochSyncTime;
import org.cardanofoundation.ledgersync.jooq.tables.ExtraKeyWitness;
import org.cardanofoundation.ledgersync.jooq.tables.FailedTxOut;
import org.cardanofoundation.ledgersync.jooq.tables.MaTxMint;
import org.cardanofoundation.ledgersync.jooq.tables.MaTxOut;
import org.cardanofoundation.ledgersync.jooq.tables.Meta;
import org.cardanofoundation.ledgersync.jooq.tables.MultiAsset;
import org.cardanofoundation.ledgersync.jooq.tables.ParamProposal;
import org.cardanofoundation.ledgersync.jooq.tables.PoolHash;
import org.cardanofoundation.ledgersync.jooq.tables.PoolMetadataRef;
import org.cardanofoundation.ledgersync.jooq.tables.PoolOfflineData;
import org.cardanofoundation.ledgersync.jooq.tables.PoolOfflineFetchError;
import org.cardanofoundation.ledgersync.jooq.tables.PoolOwner;
import org.cardanofoundation.ledgersync.jooq.tables.PoolRelay;
import org.cardanofoundation.ledgersync.jooq.tables.PoolReportHistory;
import org.cardanofoundation.ledgersync.jooq.tables.PoolRetire;
import org.cardanofoundation.ledgersync.jooq.tables.PoolUpdate;
import org.cardanofoundation.ledgersync.jooq.tables.PotTransfer;
import org.cardanofoundation.ledgersync.jooq.tables.Redeemer;
import org.cardanofoundation.ledgersync.jooq.tables.RedeemerData;
import org.cardanofoundation.ledgersync.jooq.tables.ReferenceTxIn;
import org.cardanofoundation.ledgersync.jooq.tables.ReportHistory;
import org.cardanofoundation.ledgersync.jooq.tables.Reserve;
import org.cardanofoundation.ledgersync.jooq.tables.ReservedPoolTicker;
import org.cardanofoundation.ledgersync.jooq.tables.Reward;
import org.cardanofoundation.ledgersync.jooq.tables.RollbackHistory;
import org.cardanofoundation.ledgersync.jooq.tables.SchemaVersion;
import org.cardanofoundation.ledgersync.jooq.tables.Script;
import org.cardanofoundation.ledgersync.jooq.tables.SlotLeader;
import org.cardanofoundation.ledgersync.jooq.tables.StakeAddress;
import org.cardanofoundation.ledgersync.jooq.tables.StakeDeregistration;
import org.cardanofoundation.ledgersync.jooq.tables.StakeKeyReportHistory;
import org.cardanofoundation.ledgersync.jooq.tables.StakeRegistration;
import org.cardanofoundation.ledgersync.jooq.tables.StakeTxBalance;
import org.cardanofoundation.ledgersync.jooq.tables.TokenInfo;
import org.cardanofoundation.ledgersync.jooq.tables.TokenInfoCheckpoint;
import org.cardanofoundation.ledgersync.jooq.tables.Treasury;
import org.cardanofoundation.ledgersync.jooq.tables.Tx;
import org.cardanofoundation.ledgersync.jooq.tables.TxChart;
import org.cardanofoundation.ledgersync.jooq.tables.TxIn;
import org.cardanofoundation.ledgersync.jooq.tables.TxMetadata;
import org.cardanofoundation.ledgersync.jooq.tables.TxMetadataHash;
import org.cardanofoundation.ledgersync.jooq.tables.TxOut;
import org.cardanofoundation.ledgersync.jooq.tables.UnconsumeTxIn;
import org.cardanofoundation.ledgersync.jooq.tables.Withdrawal;


/**
 * Convenience access to all tables in the default schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tables {

    /**
     * The table <code>ada_pots</code>.
     */
    public static final AdaPots ADA_POTS = AdaPots.ADA_POTS;

    /**
     * The table <code>address</code>.
     */
    public static final Address ADDRESS = Address.ADDRESS;

    /**
     * The table <code>address_token</code>.
     */
    public static final AddressToken ADDRESS_TOKEN = AddressToken.ADDRESS_TOKEN;

    /**
     * The table <code>address_token_balance</code>.
     */
    public static final AddressTokenBalance ADDRESS_TOKEN_BALANCE = AddressTokenBalance.ADDRESS_TOKEN_BALANCE;

    /**
     * The table <code>address_tx_balance</code>.
     */
    public static final AddressTxBalance ADDRESS_TX_BALANCE = AddressTxBalance.ADDRESS_TX_BALANCE;

    /**
     * The table <code>agg_address_token</code>.
     */
    public static final AggAddressToken AGG_ADDRESS_TOKEN = AggAddressToken.AGG_ADDRESS_TOKEN;

    /**
     * The table <code>agg_address_tx_balance</code>.
     */
    public static final AggAddressTxBalance AGG_ADDRESS_TX_BALANCE = AggAddressTxBalance.AGG_ADDRESS_TX_BALANCE;

    /**
     * The table <code>agg_pool_info</code>.
     */
    public static final AggPoolInfo AGG_POOL_INFO = AggPoolInfo.AGG_POOL_INFO;

    /**
     * The table <code>asset_metadata</code>.
     */
    public static final AssetMetadata ASSET_METADATA = AssetMetadata.ASSET_METADATA;

    /**
     * The table <code>block</code>.
     */
    public static final Block BLOCK = Block.BLOCK;

    /**
     * The table <code>cost_model</code>.
     */
    public static final CostModel COST_MODEL = CostModel.COST_MODEL;

    /**
     * The table <code>datum</code>.
     */
    public static final Datum DATUM = Datum.DATUM;

    /**
     * The table <code>delegation</code>.
     */
    public static final Delegation DELEGATION = Delegation.DELEGATION;

    /**
     * The table <code>delisted_pool</code>.
     */
    public static final DelistedPool DELISTED_POOL = DelistedPool.DELISTED_POOL;

    /**
     * The table <code>epoch</code>.
     */
    public static final Epoch EPOCH = Epoch.EPOCH;

    /**
     * The table <code>epoch_param</code>.
     */
    public static final EpochParam EPOCH_PARAM = EpochParam.EPOCH_PARAM;

    /**
     * The table <code>epoch_stake</code>.
     */
    public static final EpochStake EPOCH_STAKE = EpochStake.EPOCH_STAKE;

    /**
     * The table <code>epoch_sync_time</code>.
     */
    public static final EpochSyncTime EPOCH_SYNC_TIME = EpochSyncTime.EPOCH_SYNC_TIME;

    /**
     * The table <code>extra_key_witness</code>.
     */
    public static final ExtraKeyWitness EXTRA_KEY_WITNESS = ExtraKeyWitness.EXTRA_KEY_WITNESS;

    /**
     * The table <code>failed_tx_out</code>.
     */
    public static final FailedTxOut FAILED_TX_OUT = FailedTxOut.FAILED_TX_OUT;

    /**
     * The table <code>ma_tx_mint</code>.
     */
    public static final MaTxMint MA_TX_MINT = MaTxMint.MA_TX_MINT;

    /**
     * The table <code>ma_tx_out</code>.
     */
    public static final MaTxOut MA_TX_OUT = MaTxOut.MA_TX_OUT;

    /**
     * The table <code>meta</code>.
     */
    public static final Meta META = Meta.META;

    /**
     * The table <code>multi_asset</code>.
     */
    public static final MultiAsset MULTI_ASSET = MultiAsset.MULTI_ASSET;

    /**
     * The table <code>param_proposal</code>.
     */
    public static final ParamProposal PARAM_PROPOSAL = ParamProposal.PARAM_PROPOSAL;

    /**
     * The table <code>pool_hash</code>.
     */
    public static final PoolHash POOL_HASH = PoolHash.POOL_HASH;

    /**
     * The table <code>pool_metadata_ref</code>.
     */
    public static final PoolMetadataRef POOL_METADATA_REF = PoolMetadataRef.POOL_METADATA_REF;

    /**
     * The table <code>pool_offline_data</code>.
     */
    public static final PoolOfflineData POOL_OFFLINE_DATA = PoolOfflineData.POOL_OFFLINE_DATA;

    /**
     * The table <code>pool_offline_fetch_error</code>.
     */
    public static final PoolOfflineFetchError POOL_OFFLINE_FETCH_ERROR = PoolOfflineFetchError.POOL_OFFLINE_FETCH_ERROR;

    /**
     * The table <code>pool_owner</code>.
     */
    public static final PoolOwner POOL_OWNER = PoolOwner.POOL_OWNER;

    /**
     * The table <code>pool_relay</code>.
     */
    public static final PoolRelay POOL_RELAY = PoolRelay.POOL_RELAY;

    /**
     * The table <code>pool_report_history</code>.
     */
    public static final PoolReportHistory POOL_REPORT_HISTORY = PoolReportHistory.POOL_REPORT_HISTORY;

    /**
     * The table <code>pool_retire</code>.
     */
    public static final PoolRetire POOL_RETIRE = PoolRetire.POOL_RETIRE;

    /**
     * The table <code>pool_update</code>.
     */
    public static final PoolUpdate POOL_UPDATE = PoolUpdate.POOL_UPDATE;

    /**
     * The table <code>pot_transfer</code>.
     */
    public static final PotTransfer POT_TRANSFER = PotTransfer.POT_TRANSFER;

    /**
     * The table <code>redeemer</code>.
     */
    public static final Redeemer REDEEMER = Redeemer.REDEEMER;

    /**
     * The table <code>redeemer_data</code>.
     */
    public static final RedeemerData REDEEMER_DATA = RedeemerData.REDEEMER_DATA;

    /**
     * The table <code>reference_tx_in</code>.
     */
    public static final ReferenceTxIn REFERENCE_TX_IN = ReferenceTxIn.REFERENCE_TX_IN;

    /**
     * The table <code>report_history</code>.
     */
    public static final ReportHistory REPORT_HISTORY = ReportHistory.REPORT_HISTORY;

    /**
     * The table <code>reserve</code>.
     */
    public static final Reserve RESERVE = Reserve.RESERVE;

    /**
     * The table <code>reserved_pool_ticker</code>.
     */
    public static final ReservedPoolTicker RESERVED_POOL_TICKER = ReservedPoolTicker.RESERVED_POOL_TICKER;

    /**
     * The table <code>reward</code>.
     */
    public static final Reward REWARD = Reward.REWARD;

    /**
     * The table <code>rollback_history</code>.
     */
    public static final RollbackHistory ROLLBACK_HISTORY = RollbackHistory.ROLLBACK_HISTORY;

    /**
     * The table <code>schema_version</code>.
     */
    public static final SchemaVersion SCHEMA_VERSION = SchemaVersion.SCHEMA_VERSION;

    /**
     * The table <code>script</code>.
     */
    public static final Script SCRIPT = Script.SCRIPT;

    /**
     * The table <code>slot_leader</code>.
     */
    public static final SlotLeader SLOT_LEADER = SlotLeader.SLOT_LEADER;

    /**
     * The table <code>stake_address</code>.
     */
    public static final StakeAddress STAKE_ADDRESS = StakeAddress.STAKE_ADDRESS;

    /**
     * The table <code>stake_deregistration</code>.
     */
    public static final StakeDeregistration STAKE_DEREGISTRATION = StakeDeregistration.STAKE_DEREGISTRATION;

    /**
     * The table <code>stake_key_report_history</code>.
     */
    public static final StakeKeyReportHistory STAKE_KEY_REPORT_HISTORY = StakeKeyReportHistory.STAKE_KEY_REPORT_HISTORY;

    /**
     * The table <code>stake_registration</code>.
     */
    public static final StakeRegistration STAKE_REGISTRATION = StakeRegistration.STAKE_REGISTRATION;

    /**
     * The table <code>stake_tx_balance</code>.
     */
    public static final StakeTxBalance STAKE_TX_BALANCE = StakeTxBalance.STAKE_TX_BALANCE;

    /**
     * The table <code>token_info</code>.
     */
    public static final TokenInfo TOKEN_INFO = TokenInfo.TOKEN_INFO;

    /**
     * The table <code>token_info_checkpoint</code>.
     */
    public static final TokenInfoCheckpoint TOKEN_INFO_CHECKPOINT = TokenInfoCheckpoint.TOKEN_INFO_CHECKPOINT;

    /**
     * The table <code>treasury</code>.
     */
    public static final Treasury TREASURY = Treasury.TREASURY;

    /**
     * The table <code>tx</code>.
     */
    public static final Tx TX = Tx.TX;

    /**
     * The table <code>tx_chart</code>.
     */
    public static final TxChart TX_CHART = TxChart.TX_CHART;

    /**
     * The table <code>tx_in</code>.
     */
    public static final TxIn TX_IN = TxIn.TX_IN;

    /**
     * The table <code>tx_metadata</code>.
     */
    public static final TxMetadata TX_METADATA = TxMetadata.TX_METADATA;

    /**
     * The table <code>tx_metadata_hash</code>.
     */
    public static final TxMetadataHash TX_METADATA_HASH = TxMetadataHash.TX_METADATA_HASH;

    /**
     * The table <code>tx_out</code>.
     */
    public static final TxOut TX_OUT = TxOut.TX_OUT;

    /**
     * The table <code>unconsume_tx_in</code>.
     */
    public static final UnconsumeTxIn UNCONSUME_TX_IN = UnconsumeTxIn.UNCONSUME_TX_IN;

    /**
     * The table <code>withdrawal</code>.
     */
    public static final Withdrawal WITHDRAWAL = Withdrawal.WITHDRAWAL;
}
