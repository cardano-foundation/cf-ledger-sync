/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.daos;


import java.math.BigInteger;
import java.util.List;
import java.util.Optional;

import org.cardanofoundation.ledgersync.jooq.AbstractSpringDAOImpl;
import org.cardanofoundation.ledgersync.jooq.tables.Reserve;
import org.cardanofoundation.ledgersync.jooq.tables.records.ReserveRecord;
import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class ReserveDao extends AbstractSpringDAOImpl<ReserveRecord, org.cardanofoundation.ledgersync.jooq.tables.pojos.Reserve, Long> {

    /**
     * Create a new ReserveDao without any configuration
     */
    public ReserveDao() {
        super(Reserve.RESERVE, org.cardanofoundation.ledgersync.jooq.tables.pojos.Reserve.class);
    }

    /**
     * Create a new ReserveDao with an attached configuration
     */
    @Autowired
    public ReserveDao(Configuration configuration) {
        super(Reserve.RESERVE, org.cardanofoundation.ledgersync.jooq.tables.pojos.Reserve.class, configuration);
    }

    @Override
    public Long getId(org.cardanofoundation.ledgersync.jooq.tables.pojos.Reserve object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Reserve> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Reserve.RESERVE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Reserve> fetchById(Long... values) {
        return fetch(Reserve.RESERVE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.cardanofoundation.ledgersync.jooq.tables.pojos.Reserve fetchOneById(Long value) {
        return fetchOne(Reserve.RESERVE.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<org.cardanofoundation.ledgersync.jooq.tables.pojos.Reserve> fetchOptionalById(Long value) {
        return fetchOptional(Reserve.RESERVE.ID, value);
    }

    /**
     * Fetch records that have <code>amount BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Reserve> fetchRangeOfAmount(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(Reserve.RESERVE.AMOUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>amount IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Reserve> fetchByAmount(BigInteger... values) {
        return fetch(Reserve.RESERVE.AMOUNT, values);
    }

    /**
     * Fetch records that have <code>cert_index BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Reserve> fetchRangeOfCertIndex(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Reserve.RESERVE.CERT_INDEX, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cert_index IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Reserve> fetchByCertIndex(Integer... values) {
        return fetch(Reserve.RESERVE.CERT_INDEX, values);
    }

    /**
     * Fetch records that have <code>addr_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Reserve> fetchRangeOfAddrId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Reserve.RESERVE.ADDR_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>addr_id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Reserve> fetchByAddrId(Long... values) {
        return fetch(Reserve.RESERVE.ADDR_ID, values);
    }

    /**
     * Fetch records that have <code>tx_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Reserve> fetchRangeOfTxId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Reserve.RESERVE.TX_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tx_id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Reserve> fetchByTxId(Long... values) {
        return fetch(Reserve.RESERVE.TX_ID, values);
    }
}
