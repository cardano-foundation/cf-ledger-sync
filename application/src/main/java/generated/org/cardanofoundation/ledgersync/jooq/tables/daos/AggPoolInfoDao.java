/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.cardanofoundation.ledgersync.jooq.AbstractSpringDAOImpl;
import org.cardanofoundation.ledgersync.jooq.tables.AggPoolInfo;
import org.cardanofoundation.ledgersync.jooq.tables.records.AggPoolInfoRecord;
import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class AggPoolInfoDao extends AbstractSpringDAOImpl<AggPoolInfoRecord, org.cardanofoundation.ledgersync.jooq.tables.pojos.AggPoolInfo, Long> {

    /**
     * Create a new AggPoolInfoDao without any configuration
     */
    public AggPoolInfoDao() {
        super(AggPoolInfo.AGG_POOL_INFO, org.cardanofoundation.ledgersync.jooq.tables.pojos.AggPoolInfo.class);
    }

    /**
     * Create a new AggPoolInfoDao with an attached configuration
     */
    @Autowired
    public AggPoolInfoDao(Configuration configuration) {
        super(AggPoolInfo.AGG_POOL_INFO, org.cardanofoundation.ledgersync.jooq.tables.pojos.AggPoolInfo.class, configuration);
    }

    @Override
    public Long getId(org.cardanofoundation.ledgersync.jooq.tables.pojos.AggPoolInfo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AggPoolInfo> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(AggPoolInfo.AGG_POOL_INFO.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AggPoolInfo> fetchById(Long... values) {
        return fetch(AggPoolInfo.AGG_POOL_INFO.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.cardanofoundation.ledgersync.jooq.tables.pojos.AggPoolInfo fetchOneById(Long value) {
        return fetchOne(AggPoolInfo.AGG_POOL_INFO.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<org.cardanofoundation.ledgersync.jooq.tables.pojos.AggPoolInfo> fetchOptionalById(Long value) {
        return fetchOptional(AggPoolInfo.AGG_POOL_INFO.ID, value);
    }

    /**
     * Fetch records that have <code>pool_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AggPoolInfo> fetchRangeOfPoolId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(AggPoolInfo.AGG_POOL_INFO.POOL_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pool_id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AggPoolInfo> fetchByPoolId(Long... values) {
        return fetch(AggPoolInfo.AGG_POOL_INFO.POOL_ID, values);
    }

    /**
     * Fetch records that have <code>block_in_epoch BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AggPoolInfo> fetchRangeOfBlockInEpoch(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(AggPoolInfo.AGG_POOL_INFO.BLOCK_IN_EPOCH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>block_in_epoch IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AggPoolInfo> fetchByBlockInEpoch(Long... values) {
        return fetch(AggPoolInfo.AGG_POOL_INFO.BLOCK_IN_EPOCH, values);
    }

    /**
     * Fetch records that have <code>block_life_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AggPoolInfo> fetchRangeOfBlockLifeTime(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(AggPoolInfo.AGG_POOL_INFO.BLOCK_LIFE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>block_life_time IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AggPoolInfo> fetchByBlockLifeTime(Long... values) {
        return fetch(AggPoolInfo.AGG_POOL_INFO.BLOCK_LIFE_TIME, values);
    }

    /**
     * Fetch records that have <code>delegator_cnt BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AggPoolInfo> fetchRangeOfDelegatorCnt(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(AggPoolInfo.AGG_POOL_INFO.DELEGATOR_CNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>delegator_cnt IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AggPoolInfo> fetchByDelegatorCnt(Long... values) {
        return fetch(AggPoolInfo.AGG_POOL_INFO.DELEGATOR_CNT, values);
    }

    /**
     * Fetch records that have <code>block_check_point BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AggPoolInfo> fetchRangeOfBlockCheckPoint(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(AggPoolInfo.AGG_POOL_INFO.BLOCK_CHECK_POINT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>block_check_point IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AggPoolInfo> fetchByBlockCheckPoint(Long... values) {
        return fetch(AggPoolInfo.AGG_POOL_INFO.BLOCK_CHECK_POINT, values);
    }

    /**
     * Fetch records that have <code>update_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AggPoolInfo> fetchRangeOfUpdateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(AggPoolInfo.AGG_POOL_INFO.UPDATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>update_time IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AggPoolInfo> fetchByUpdateTime(LocalDateTime... values) {
        return fetch(AggPoolInfo.AGG_POOL_INFO.UPDATE_TIME, values);
    }
}
