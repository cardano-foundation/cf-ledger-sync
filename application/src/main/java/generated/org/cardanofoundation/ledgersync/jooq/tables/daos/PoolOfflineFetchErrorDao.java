/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.cardanofoundation.ledgersync.jooq.AbstractSpringDAOImpl;
import org.cardanofoundation.ledgersync.jooq.tables.PoolOfflineFetchError;
import org.cardanofoundation.ledgersync.jooq.tables.records.PoolOfflineFetchErrorRecord;
import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class PoolOfflineFetchErrorDao extends AbstractSpringDAOImpl<PoolOfflineFetchErrorRecord, org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineFetchError, Long> {

    /**
     * Create a new PoolOfflineFetchErrorDao without any configuration
     */
    public PoolOfflineFetchErrorDao() {
        super(PoolOfflineFetchError.POOL_OFFLINE_FETCH_ERROR, org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineFetchError.class);
    }

    /**
     * Create a new PoolOfflineFetchErrorDao with an attached configuration
     */
    @Autowired
    public PoolOfflineFetchErrorDao(Configuration configuration) {
        super(PoolOfflineFetchError.POOL_OFFLINE_FETCH_ERROR, org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineFetchError.class, configuration);
    }

    @Override
    public Long getId(org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineFetchError object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineFetchError> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PoolOfflineFetchError.POOL_OFFLINE_FETCH_ERROR.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineFetchError> fetchById(Long... values) {
        return fetch(PoolOfflineFetchError.POOL_OFFLINE_FETCH_ERROR.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineFetchError fetchOneById(Long value) {
        return fetchOne(PoolOfflineFetchError.POOL_OFFLINE_FETCH_ERROR.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineFetchError> fetchOptionalById(Long value) {
        return fetchOptional(PoolOfflineFetchError.POOL_OFFLINE_FETCH_ERROR.ID, value);
    }

    /**
     * Fetch records that have <code>fetch_error BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineFetchError> fetchRangeOfFetchError(String lowerInclusive, String upperInclusive) {
        return fetchRange(PoolOfflineFetchError.POOL_OFFLINE_FETCH_ERROR.FETCH_ERROR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>fetch_error IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineFetchError> fetchByFetchError(String... values) {
        return fetch(PoolOfflineFetchError.POOL_OFFLINE_FETCH_ERROR.FETCH_ERROR, values);
    }

    /**
     * Fetch records that have <code>fetch_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineFetchError> fetchRangeOfFetchTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(PoolOfflineFetchError.POOL_OFFLINE_FETCH_ERROR.FETCH_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>fetch_time IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineFetchError> fetchByFetchTime(LocalDateTime... values) {
        return fetch(PoolOfflineFetchError.POOL_OFFLINE_FETCH_ERROR.FETCH_TIME, values);
    }

    /**
     * Fetch records that have <code>retry_count BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineFetchError> fetchRangeOfRetryCount(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(PoolOfflineFetchError.POOL_OFFLINE_FETCH_ERROR.RETRY_COUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>retry_count IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineFetchError> fetchByRetryCount(Integer... values) {
        return fetch(PoolOfflineFetchError.POOL_OFFLINE_FETCH_ERROR.RETRY_COUNT, values);
    }

    /**
     * Fetch records that have <code>pool_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineFetchError> fetchRangeOfPoolId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PoolOfflineFetchError.POOL_OFFLINE_FETCH_ERROR.POOL_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pool_id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineFetchError> fetchByPoolId(Long... values) {
        return fetch(PoolOfflineFetchError.POOL_OFFLINE_FETCH_ERROR.POOL_ID, values);
    }

    /**
     * Fetch records that have <code>pmr_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineFetchError> fetchRangeOfPmrId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PoolOfflineFetchError.POOL_OFFLINE_FETCH_ERROR.PMR_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pmr_id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineFetchError> fetchByPmrId(Long... values) {
        return fetch(PoolOfflineFetchError.POOL_OFFLINE_FETCH_ERROR.PMR_ID, values);
    }
}
