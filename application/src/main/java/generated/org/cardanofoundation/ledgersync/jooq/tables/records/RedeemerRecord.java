/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.records;


import java.math.BigInteger;

import org.cardanofoundation.ledgersync.jooq.tables.Redeemer;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RedeemerRecord extends UpdatableRecordImpl<RedeemerRecord> implements Record9<Long, BigInteger, Integer, String, String, Long, Long, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>redeemer.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>redeemer.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>redeemer.fee</code>.
     */
    public void setFee(BigInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>redeemer.fee</code>.
     */
    public BigInteger getFee() {
        return (BigInteger) get(1);
    }

    /**
     * Setter for <code>redeemer.index</code>.
     */
    public void setIndex(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>redeemer.index</code>.
     */
    public Integer getIndex() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>redeemer.purpose</code>.
     */
    public void setPurpose(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>redeemer.purpose</code>.
     */
    public String getPurpose() {
        return (String) get(3);
    }

    /**
     * Setter for <code>redeemer.script_hash</code>.
     */
    public void setScriptHash(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>redeemer.script_hash</code>.
     */
    public String getScriptHash() {
        return (String) get(4);
    }

    /**
     * Setter for <code>redeemer.unit_mem</code>.
     */
    public void setUnitMem(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>redeemer.unit_mem</code>.
     */
    public Long getUnitMem() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>redeemer.unit_steps</code>.
     */
    public void setUnitSteps(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>redeemer.unit_steps</code>.
     */
    public Long getUnitSteps() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>redeemer.redeemer_data_id</code>.
     */
    public void setRedeemerDataId(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>redeemer.redeemer_data_id</code>.
     */
    public Long getRedeemerDataId() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>redeemer.tx_id</code>.
     */
    public void setTxId(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>redeemer.tx_id</code>.
     */
    public Long getTxId() {
        return (Long) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, BigInteger, Integer, String, String, Long, Long, Long, Long> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, BigInteger, Integer, String, String, Long, Long, Long, Long> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Redeemer.REDEEMER.ID;
    }

    @Override
    public Field<BigInteger> field2() {
        return Redeemer.REDEEMER.FEE;
    }

    @Override
    public Field<Integer> field3() {
        return Redeemer.REDEEMER.INDEX;
    }

    @Override
    public Field<String> field4() {
        return Redeemer.REDEEMER.PURPOSE;
    }

    @Override
    public Field<String> field5() {
        return Redeemer.REDEEMER.SCRIPT_HASH;
    }

    @Override
    public Field<Long> field6() {
        return Redeemer.REDEEMER.UNIT_MEM;
    }

    @Override
    public Field<Long> field7() {
        return Redeemer.REDEEMER.UNIT_STEPS;
    }

    @Override
    public Field<Long> field8() {
        return Redeemer.REDEEMER.REDEEMER_DATA_ID;
    }

    @Override
    public Field<Long> field9() {
        return Redeemer.REDEEMER.TX_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public BigInteger component2() {
        return getFee();
    }

    @Override
    public Integer component3() {
        return getIndex();
    }

    @Override
    public String component4() {
        return getPurpose();
    }

    @Override
    public String component5() {
        return getScriptHash();
    }

    @Override
    public Long component6() {
        return getUnitMem();
    }

    @Override
    public Long component7() {
        return getUnitSteps();
    }

    @Override
    public Long component8() {
        return getRedeemerDataId();
    }

    @Override
    public Long component9() {
        return getTxId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public BigInteger value2() {
        return getFee();
    }

    @Override
    public Integer value3() {
        return getIndex();
    }

    @Override
    public String value4() {
        return getPurpose();
    }

    @Override
    public String value5() {
        return getScriptHash();
    }

    @Override
    public Long value6() {
        return getUnitMem();
    }

    @Override
    public Long value7() {
        return getUnitSteps();
    }

    @Override
    public Long value8() {
        return getRedeemerDataId();
    }

    @Override
    public Long value9() {
        return getTxId();
    }

    @Override
    public RedeemerRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public RedeemerRecord value2(BigInteger value) {
        setFee(value);
        return this;
    }

    @Override
    public RedeemerRecord value3(Integer value) {
        setIndex(value);
        return this;
    }

    @Override
    public RedeemerRecord value4(String value) {
        setPurpose(value);
        return this;
    }

    @Override
    public RedeemerRecord value5(String value) {
        setScriptHash(value);
        return this;
    }

    @Override
    public RedeemerRecord value6(Long value) {
        setUnitMem(value);
        return this;
    }

    @Override
    public RedeemerRecord value7(Long value) {
        setUnitSteps(value);
        return this;
    }

    @Override
    public RedeemerRecord value8(Long value) {
        setRedeemerDataId(value);
        return this;
    }

    @Override
    public RedeemerRecord value9(Long value) {
        setTxId(value);
        return this;
    }

    @Override
    public RedeemerRecord values(Long value1, BigInteger value2, Integer value3, String value4, String value5, Long value6, Long value7, Long value8, Long value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RedeemerRecord
     */
    public RedeemerRecord() {
        super(Redeemer.REDEEMER);
    }

    /**
     * Create a detached, initialised RedeemerRecord
     */
    public RedeemerRecord(Long id, BigInteger fee, Integer index, String purpose, String scriptHash, Long unitMem, Long unitSteps, Long redeemerDataId, Long txId) {
        super(Redeemer.REDEEMER);

        setId(id);
        setFee(fee);
        setIndex(index);
        setPurpose(purpose);
        setScriptHash(scriptHash);
        setUnitMem(unitMem);
        setUnitSteps(unitSteps);
        setRedeemerDataId(redeemerDataId);
        setTxId(txId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised RedeemerRecord
     */
    public RedeemerRecord(org.cardanofoundation.ledgersync.jooq.tables.pojos.Redeemer value) {
        super(Redeemer.REDEEMER);

        if (value != null) {
            setId(value.getId());
            setFee(value.getFee());
            setIndex(value.getIndex());
            setPurpose(value.getPurpose());
            setScriptHash(value.getScriptHash());
            setUnitMem(value.getUnitMem());
            setUnitSteps(value.getUnitSteps());
            setRedeemerDataId(value.getRedeemerDataId());
            setTxId(value.getTxId());
            resetChangedOnNotNull();
        }
    }
}
