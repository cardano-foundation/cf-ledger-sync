/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.records;


import java.math.BigInteger;
import java.time.LocalDateTime;

import org.cardanofoundation.ledgersync.jooq.tables.MultiAsset;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MultiAssetRecord extends UpdatableRecordImpl<MultiAssetRecord> implements Record9<Long, String, byte[], String, BigInteger, Long, LocalDateTime, BigInteger, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>multi_asset.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>multi_asset.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>multi_asset.fingerprint</code>.
     */
    public void setFingerprint(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>multi_asset.fingerprint</code>.
     */
    public String getFingerprint() {
        return (String) get(1);
    }

    /**
     * Setter for <code>multi_asset.name</code>.
     */
    public void setName(byte[] value) {
        set(2, value);
    }

    /**
     * Getter for <code>multi_asset.name</code>.
     */
    public byte[] getName() {
        return (byte[]) get(2);
    }

    /**
     * Setter for <code>multi_asset.policy</code>.
     */
    public void setPolicy(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>multi_asset.policy</code>.
     */
    public String getPolicy() {
        return (String) get(3);
    }

    /**
     * Setter for <code>multi_asset.supply</code>.
     */
    public void setSupply(BigInteger value) {
        set(4, value);
    }

    /**
     * Getter for <code>multi_asset.supply</code>.
     */
    public BigInteger getSupply() {
        return (BigInteger) get(4);
    }

    /**
     * Setter for <code>multi_asset.tx_count</code>.
     */
    public void setTxCount(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>multi_asset.tx_count</code>.
     */
    public Long getTxCount() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>multi_asset.time</code>.
     */
    public void setTime(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>multi_asset.time</code>.
     */
    public LocalDateTime getTime() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>multi_asset.total_volume</code>.
     */
    public void setTotalVolume(BigInteger value) {
        set(7, value);
    }

    /**
     * Getter for <code>multi_asset.total_volume</code>.
     */
    public BigInteger getTotalVolume() {
        return (BigInteger) get(7);
    }

    /**
     * Setter for <code>multi_asset.name_view</code>.
     */
    public void setNameView(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>multi_asset.name_view</code>.
     */
    public String getNameView() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, String, byte[], String, BigInteger, Long, LocalDateTime, BigInteger, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, String, byte[], String, BigInteger, Long, LocalDateTime, BigInteger, String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return MultiAsset.MULTI_ASSET.ID;
    }

    @Override
    public Field<String> field2() {
        return MultiAsset.MULTI_ASSET.FINGERPRINT;
    }

    @Override
    public Field<byte[]> field3() {
        return MultiAsset.MULTI_ASSET.NAME;
    }

    @Override
    public Field<String> field4() {
        return MultiAsset.MULTI_ASSET.POLICY;
    }

    @Override
    public Field<BigInteger> field5() {
        return MultiAsset.MULTI_ASSET.SUPPLY;
    }

    @Override
    public Field<Long> field6() {
        return MultiAsset.MULTI_ASSET.TX_COUNT;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return MultiAsset.MULTI_ASSET.TIME;
    }

    @Override
    public Field<BigInteger> field8() {
        return MultiAsset.MULTI_ASSET.TOTAL_VOLUME;
    }

    @Override
    public Field<String> field9() {
        return MultiAsset.MULTI_ASSET.NAME_VIEW;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getFingerprint();
    }

    @Override
    public byte[] component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getPolicy();
    }

    @Override
    public BigInteger component5() {
        return getSupply();
    }

    @Override
    public Long component6() {
        return getTxCount();
    }

    @Override
    public LocalDateTime component7() {
        return getTime();
    }

    @Override
    public BigInteger component8() {
        return getTotalVolume();
    }

    @Override
    public String component9() {
        return getNameView();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getFingerprint();
    }

    @Override
    public byte[] value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getPolicy();
    }

    @Override
    public BigInteger value5() {
        return getSupply();
    }

    @Override
    public Long value6() {
        return getTxCount();
    }

    @Override
    public LocalDateTime value7() {
        return getTime();
    }

    @Override
    public BigInteger value8() {
        return getTotalVolume();
    }

    @Override
    public String value9() {
        return getNameView();
    }

    @Override
    public MultiAssetRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public MultiAssetRecord value2(String value) {
        setFingerprint(value);
        return this;
    }

    @Override
    public MultiAssetRecord value3(byte[] value) {
        setName(value);
        return this;
    }

    @Override
    public MultiAssetRecord value4(String value) {
        setPolicy(value);
        return this;
    }

    @Override
    public MultiAssetRecord value5(BigInteger value) {
        setSupply(value);
        return this;
    }

    @Override
    public MultiAssetRecord value6(Long value) {
        setTxCount(value);
        return this;
    }

    @Override
    public MultiAssetRecord value7(LocalDateTime value) {
        setTime(value);
        return this;
    }

    @Override
    public MultiAssetRecord value8(BigInteger value) {
        setTotalVolume(value);
        return this;
    }

    @Override
    public MultiAssetRecord value9(String value) {
        setNameView(value);
        return this;
    }

    @Override
    public MultiAssetRecord values(Long value1, String value2, byte[] value3, String value4, BigInteger value5, Long value6, LocalDateTime value7, BigInteger value8, String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MultiAssetRecord
     */
    public MultiAssetRecord() {
        super(MultiAsset.MULTI_ASSET);
    }

    /**
     * Create a detached, initialised MultiAssetRecord
     */
    public MultiAssetRecord(Long id, String fingerprint, byte[] name, String policy, BigInteger supply, Long txCount, LocalDateTime time, BigInteger totalVolume, String nameView) {
        super(MultiAsset.MULTI_ASSET);

        setId(id);
        setFingerprint(fingerprint);
        setName(name);
        setPolicy(policy);
        setSupply(supply);
        setTxCount(txCount);
        setTime(time);
        setTotalVolume(totalVolume);
        setNameView(nameView);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised MultiAssetRecord
     */
    public MultiAssetRecord(org.cardanofoundation.ledgersync.jooq.tables.pojos.MultiAsset value) {
        super(MultiAsset.MULTI_ASSET);

        if (value != null) {
            setId(value.getId());
            setFingerprint(value.getFingerprint());
            setName(value.getName());
            setPolicy(value.getPolicy());
            setSupply(value.getSupply());
            setTxCount(value.getTxCount());
            setTime(value.getTime());
            setTotalVolume(value.getTotalVolume());
            setNameView(value.getNameView());
            resetChangedOnNotNull();
        }
    }
}
