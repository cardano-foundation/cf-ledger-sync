/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.daos;


import java.util.List;
import java.util.Optional;

import org.cardanofoundation.ledgersync.jooq.AbstractSpringDAOImpl;
import org.cardanofoundation.ledgersync.jooq.tables.PoolOfflineData;
import org.cardanofoundation.ledgersync.jooq.tables.records.PoolOfflineDataRecord;
import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class PoolOfflineDataDao extends AbstractSpringDAOImpl<PoolOfflineDataRecord, org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineData, Long> {

    /**
     * Create a new PoolOfflineDataDao without any configuration
     */
    public PoolOfflineDataDao() {
        super(PoolOfflineData.POOL_OFFLINE_DATA, org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineData.class);
    }

    /**
     * Create a new PoolOfflineDataDao with an attached configuration
     */
    @Autowired
    public PoolOfflineDataDao(Configuration configuration) {
        super(PoolOfflineData.POOL_OFFLINE_DATA, org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineData.class, configuration);
    }

    @Override
    public Long getId(org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineData object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineData> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PoolOfflineData.POOL_OFFLINE_DATA.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineData> fetchById(Long... values) {
        return fetch(PoolOfflineData.POOL_OFFLINE_DATA.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineData fetchOneById(Long value) {
        return fetchOne(PoolOfflineData.POOL_OFFLINE_DATA.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineData> fetchOptionalById(Long value) {
        return fetchOptional(PoolOfflineData.POOL_OFFLINE_DATA.ID, value);
    }

    /**
     * Fetch records that have <code>bytes BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineData> fetchRangeOfBytes(byte[] lowerInclusive, byte[] upperInclusive) {
        return fetchRange(PoolOfflineData.POOL_OFFLINE_DATA.BYTES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>bytes IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineData> fetchByBytes(byte[]... values) {
        return fetch(PoolOfflineData.POOL_OFFLINE_DATA.BYTES, values);
    }

    /**
     * Fetch records that have <code>hash BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineData> fetchRangeOfHash(String lowerInclusive, String upperInclusive) {
        return fetchRange(PoolOfflineData.POOL_OFFLINE_DATA.HASH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>hash IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineData> fetchByHash(String... values) {
        return fetch(PoolOfflineData.POOL_OFFLINE_DATA.HASH, values);
    }

    /**
     * Fetch records that have <code>json BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineData> fetchRangeOfJson(String lowerInclusive, String upperInclusive) {
        return fetchRange(PoolOfflineData.POOL_OFFLINE_DATA.JSON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>json IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineData> fetchByJson(String... values) {
        return fetch(PoolOfflineData.POOL_OFFLINE_DATA.JSON, values);
    }

    /**
     * Fetch records that have <code>ticker_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineData> fetchRangeOfTickerName(String lowerInclusive, String upperInclusive) {
        return fetchRange(PoolOfflineData.POOL_OFFLINE_DATA.TICKER_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ticker_name IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineData> fetchByTickerName(String... values) {
        return fetch(PoolOfflineData.POOL_OFFLINE_DATA.TICKER_NAME, values);
    }

    /**
     * Fetch records that have <code>pool_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineData> fetchRangeOfPoolId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PoolOfflineData.POOL_OFFLINE_DATA.POOL_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pool_id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineData> fetchByPoolId(Long... values) {
        return fetch(PoolOfflineData.POOL_OFFLINE_DATA.POOL_ID, values);
    }

    /**
     * Fetch a unique record that has <code>pool_id = value</code>
     */
    public org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineData fetchOneByPoolId(Long value) {
        return fetchOne(PoolOfflineData.POOL_OFFLINE_DATA.POOL_ID, value);
    }

    /**
     * Fetch a unique record that has <code>pool_id = value</code>
     */
    public Optional<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineData> fetchOptionalByPoolId(Long value) {
        return fetchOptional(PoolOfflineData.POOL_OFFLINE_DATA.POOL_ID, value);
    }

    /**
     * Fetch records that have <code>pmr_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineData> fetchRangeOfPmrId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PoolOfflineData.POOL_OFFLINE_DATA.PMR_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pmr_id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineData> fetchByPmrId(Long... values) {
        return fetch(PoolOfflineData.POOL_OFFLINE_DATA.PMR_ID, values);
    }

    /**
     * Fetch records that have <code>pool_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineData> fetchRangeOfPoolName(String lowerInclusive, String upperInclusive) {
        return fetchRange(PoolOfflineData.POOL_OFFLINE_DATA.POOL_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pool_name IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineData> fetchByPoolName(String... values) {
        return fetch(PoolOfflineData.POOL_OFFLINE_DATA.POOL_NAME, values);
    }

    /**
     * Fetch records that have <code>logo_url BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineData> fetchRangeOfLogoUrl(String lowerInclusive, String upperInclusive) {
        return fetchRange(PoolOfflineData.POOL_OFFLINE_DATA.LOGO_URL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>logo_url IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineData> fetchByLogoUrl(String... values) {
        return fetch(PoolOfflineData.POOL_OFFLINE_DATA.LOGO_URL, values);
    }

    /**
     * Fetch records that have <code>icon_url BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineData> fetchRangeOfIconUrl(String lowerInclusive, String upperInclusive) {
        return fetchRange(PoolOfflineData.POOL_OFFLINE_DATA.ICON_URL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>icon_url IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolOfflineData> fetchByIconUrl(String... values) {
        return fetch(PoolOfflineData.POOL_OFFLINE_DATA.ICON_URL, values);
    }
}
