/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.daos;


import java.util.List;
import java.util.Optional;

import org.cardanofoundation.ledgersync.jooq.AbstractSpringDAOImpl;
import org.cardanofoundation.ledgersync.jooq.tables.EpochSyncTime;
import org.cardanofoundation.ledgersync.jooq.tables.records.EpochSyncTimeRecord;
import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class EpochSyncTimeDao extends AbstractSpringDAOImpl<EpochSyncTimeRecord, org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochSyncTime, Long> {

    /**
     * Create a new EpochSyncTimeDao without any configuration
     */
    public EpochSyncTimeDao() {
        super(EpochSyncTime.EPOCH_SYNC_TIME, org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochSyncTime.class);
    }

    /**
     * Create a new EpochSyncTimeDao with an attached configuration
     */
    @Autowired
    public EpochSyncTimeDao(Configuration configuration) {
        super(EpochSyncTime.EPOCH_SYNC_TIME, org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochSyncTime.class, configuration);
    }

    @Override
    public Long getId(org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochSyncTime object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochSyncTime> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(EpochSyncTime.EPOCH_SYNC_TIME.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochSyncTime> fetchById(Long... values) {
        return fetch(EpochSyncTime.EPOCH_SYNC_TIME.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochSyncTime fetchOneById(Long value) {
        return fetchOne(EpochSyncTime.EPOCH_SYNC_TIME.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochSyncTime> fetchOptionalById(Long value) {
        return fetchOptional(EpochSyncTime.EPOCH_SYNC_TIME.ID, value);
    }

    /**
     * Fetch records that have <code>no BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochSyncTime> fetchRangeOfNo(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(EpochSyncTime.EPOCH_SYNC_TIME.NO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>no IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochSyncTime> fetchByNo(Long... values) {
        return fetch(EpochSyncTime.EPOCH_SYNC_TIME.NO, values);
    }

    /**
     * Fetch a unique record that has <code>no = value</code>
     */
    public org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochSyncTime fetchOneByNo(Long value) {
        return fetchOne(EpochSyncTime.EPOCH_SYNC_TIME.NO, value);
    }

    /**
     * Fetch a unique record that has <code>no = value</code>
     */
    public Optional<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochSyncTime> fetchOptionalByNo(Long value) {
        return fetchOptional(EpochSyncTime.EPOCH_SYNC_TIME.NO, value);
    }

    /**
     * Fetch records that have <code>seconds BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochSyncTime> fetchRangeOfSeconds(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(EpochSyncTime.EPOCH_SYNC_TIME.SECONDS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>seconds IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochSyncTime> fetchBySeconds(Long... values) {
        return fetch(EpochSyncTime.EPOCH_SYNC_TIME.SECONDS, values);
    }

    /**
     * Fetch records that have <code>state BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochSyncTime> fetchRangeOfState(String lowerInclusive, String upperInclusive) {
        return fetchRange(EpochSyncTime.EPOCH_SYNC_TIME.STATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>state IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochSyncTime> fetchByState(String... values) {
        return fetch(EpochSyncTime.EPOCH_SYNC_TIME.STATE, values);
    }
}
