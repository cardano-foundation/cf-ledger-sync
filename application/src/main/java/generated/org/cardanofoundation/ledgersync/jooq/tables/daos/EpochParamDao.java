/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.daos;


import java.math.BigInteger;
import java.util.List;
import java.util.Optional;

import org.cardanofoundation.ledgersync.jooq.AbstractSpringDAOImpl;
import org.cardanofoundation.ledgersync.jooq.tables.EpochParam;
import org.cardanofoundation.ledgersync.jooq.tables.records.EpochParamRecord;
import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class EpochParamDao extends AbstractSpringDAOImpl<EpochParamRecord, org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam, Long> {

    /**
     * Create a new EpochParamDao without any configuration
     */
    public EpochParamDao() {
        super(EpochParam.EPOCH_PARAM, org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam.class);
    }

    /**
     * Create a new EpochParamDao with an attached configuration
     */
    @Autowired
    public EpochParamDao(Configuration configuration) {
        super(EpochParam.EPOCH_PARAM, org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam.class, configuration);
    }

    @Override
    public Long getId(org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(EpochParam.EPOCH_PARAM.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchById(Long... values) {
        return fetch(EpochParam.EPOCH_PARAM.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam fetchOneById(Long value) {
        return fetchOne(EpochParam.EPOCH_PARAM.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchOptionalById(Long value) {
        return fetchOptional(EpochParam.EPOCH_PARAM.ID, value);
    }

    /**
     * Fetch records that have <code>coins_per_utxo_size BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchRangeOfCoinsPerUtxoSize(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(EpochParam.EPOCH_PARAM.COINS_PER_UTXO_SIZE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>coins_per_utxo_size IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchByCoinsPerUtxoSize(BigInteger... values) {
        return fetch(EpochParam.EPOCH_PARAM.COINS_PER_UTXO_SIZE, values);
    }

    /**
     * Fetch records that have <code>collateral_percent BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchRangeOfCollateralPercent(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(EpochParam.EPOCH_PARAM.COLLATERAL_PERCENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>collateral_percent IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchByCollateralPercent(Integer... values) {
        return fetch(EpochParam.EPOCH_PARAM.COLLATERAL_PERCENT, values);
    }

    /**
     * Fetch records that have <code>decentralisation BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchRangeOfDecentralisation(Double lowerInclusive, Double upperInclusive) {
        return fetchRange(EpochParam.EPOCH_PARAM.DECENTRALISATION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>decentralisation IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchByDecentralisation(Double... values) {
        return fetch(EpochParam.EPOCH_PARAM.DECENTRALISATION, values);
    }

    /**
     * Fetch records that have <code>epoch_no BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchRangeOfEpochNo(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(EpochParam.EPOCH_PARAM.EPOCH_NO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>epoch_no IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchByEpochNo(Integer... values) {
        return fetch(EpochParam.EPOCH_PARAM.EPOCH_NO, values);
    }

    /**
     * Fetch records that have <code>extra_entropy BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchRangeOfExtraEntropy(String lowerInclusive, String upperInclusive) {
        return fetchRange(EpochParam.EPOCH_PARAM.EXTRA_ENTROPY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>extra_entropy IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchByExtraEntropy(String... values) {
        return fetch(EpochParam.EPOCH_PARAM.EXTRA_ENTROPY, values);
    }

    /**
     * Fetch records that have <code>influence BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchRangeOfInfluence(Double lowerInclusive, Double upperInclusive) {
        return fetchRange(EpochParam.EPOCH_PARAM.INFLUENCE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>influence IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchByInfluence(Double... values) {
        return fetch(EpochParam.EPOCH_PARAM.INFLUENCE, values);
    }

    /**
     * Fetch records that have <code>key_deposit BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchRangeOfKeyDeposit(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(EpochParam.EPOCH_PARAM.KEY_DEPOSIT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>key_deposit IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchByKeyDeposit(BigInteger... values) {
        return fetch(EpochParam.EPOCH_PARAM.KEY_DEPOSIT, values);
    }

    /**
     * Fetch records that have <code>max_bh_size BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchRangeOfMaxBhSize(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(EpochParam.EPOCH_PARAM.MAX_BH_SIZE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>max_bh_size IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchByMaxBhSize(Integer... values) {
        return fetch(EpochParam.EPOCH_PARAM.MAX_BH_SIZE, values);
    }

    /**
     * Fetch records that have <code>max_block_ex_mem BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchRangeOfMaxBlockExMem(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(EpochParam.EPOCH_PARAM.MAX_BLOCK_EX_MEM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>max_block_ex_mem IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchByMaxBlockExMem(BigInteger... values) {
        return fetch(EpochParam.EPOCH_PARAM.MAX_BLOCK_EX_MEM, values);
    }

    /**
     * Fetch records that have <code>max_block_ex_steps BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchRangeOfMaxBlockExSteps(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(EpochParam.EPOCH_PARAM.MAX_BLOCK_EX_STEPS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>max_block_ex_steps IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchByMaxBlockExSteps(BigInteger... values) {
        return fetch(EpochParam.EPOCH_PARAM.MAX_BLOCK_EX_STEPS, values);
    }

    /**
     * Fetch records that have <code>max_block_size BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchRangeOfMaxBlockSize(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(EpochParam.EPOCH_PARAM.MAX_BLOCK_SIZE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>max_block_size IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchByMaxBlockSize(Integer... values) {
        return fetch(EpochParam.EPOCH_PARAM.MAX_BLOCK_SIZE, values);
    }

    /**
     * Fetch records that have <code>max_collateral_inputs BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchRangeOfMaxCollateralInputs(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(EpochParam.EPOCH_PARAM.MAX_COLLATERAL_INPUTS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>max_collateral_inputs IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchByMaxCollateralInputs(Integer... values) {
        return fetch(EpochParam.EPOCH_PARAM.MAX_COLLATERAL_INPUTS, values);
    }

    /**
     * Fetch records that have <code>max_epoch BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchRangeOfMaxEpoch(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(EpochParam.EPOCH_PARAM.MAX_EPOCH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>max_epoch IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchByMaxEpoch(Integer... values) {
        return fetch(EpochParam.EPOCH_PARAM.MAX_EPOCH, values);
    }

    /**
     * Fetch records that have <code>max_tx_ex_mem BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchRangeOfMaxTxExMem(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(EpochParam.EPOCH_PARAM.MAX_TX_EX_MEM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>max_tx_ex_mem IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchByMaxTxExMem(BigInteger... values) {
        return fetch(EpochParam.EPOCH_PARAM.MAX_TX_EX_MEM, values);
    }

    /**
     * Fetch records that have <code>max_tx_ex_steps BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchRangeOfMaxTxExSteps(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(EpochParam.EPOCH_PARAM.MAX_TX_EX_STEPS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>max_tx_ex_steps IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchByMaxTxExSteps(BigInteger... values) {
        return fetch(EpochParam.EPOCH_PARAM.MAX_TX_EX_STEPS, values);
    }

    /**
     * Fetch records that have <code>max_tx_size BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchRangeOfMaxTxSize(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(EpochParam.EPOCH_PARAM.MAX_TX_SIZE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>max_tx_size IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchByMaxTxSize(Integer... values) {
        return fetch(EpochParam.EPOCH_PARAM.MAX_TX_SIZE, values);
    }

    /**
     * Fetch records that have <code>max_val_size BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchRangeOfMaxValSize(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(EpochParam.EPOCH_PARAM.MAX_VAL_SIZE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>max_val_size IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchByMaxValSize(BigInteger... values) {
        return fetch(EpochParam.EPOCH_PARAM.MAX_VAL_SIZE, values);
    }

    /**
     * Fetch records that have <code>min_fee_a BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchRangeOfMinFeeA(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(EpochParam.EPOCH_PARAM.MIN_FEE_A, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>min_fee_a IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchByMinFeeA(Integer... values) {
        return fetch(EpochParam.EPOCH_PARAM.MIN_FEE_A, values);
    }

    /**
     * Fetch records that have <code>min_fee_b BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchRangeOfMinFeeB(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(EpochParam.EPOCH_PARAM.MIN_FEE_B, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>min_fee_b IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchByMinFeeB(Integer... values) {
        return fetch(EpochParam.EPOCH_PARAM.MIN_FEE_B, values);
    }

    /**
     * Fetch records that have <code>min_pool_cost BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchRangeOfMinPoolCost(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(EpochParam.EPOCH_PARAM.MIN_POOL_COST, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>min_pool_cost IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchByMinPoolCost(BigInteger... values) {
        return fetch(EpochParam.EPOCH_PARAM.MIN_POOL_COST, values);
    }

    /**
     * Fetch records that have <code>min_utxo_value BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchRangeOfMinUtxoValue(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(EpochParam.EPOCH_PARAM.MIN_UTXO_VALUE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>min_utxo_value IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchByMinUtxoValue(BigInteger... values) {
        return fetch(EpochParam.EPOCH_PARAM.MIN_UTXO_VALUE, values);
    }

    /**
     * Fetch records that have <code>monetary_expand_rate BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchRangeOfMonetaryExpandRate(Double lowerInclusive, Double upperInclusive) {
        return fetchRange(EpochParam.EPOCH_PARAM.MONETARY_EXPAND_RATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>monetary_expand_rate IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchByMonetaryExpandRate(Double... values) {
        return fetch(EpochParam.EPOCH_PARAM.MONETARY_EXPAND_RATE, values);
    }

    /**
     * Fetch records that have <code>nonce BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchRangeOfNonce(String lowerInclusive, String upperInclusive) {
        return fetchRange(EpochParam.EPOCH_PARAM.NONCE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>nonce IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchByNonce(String... values) {
        return fetch(EpochParam.EPOCH_PARAM.NONCE, values);
    }

    /**
     * Fetch records that have <code>optimal_pool_count BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchRangeOfOptimalPoolCount(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(EpochParam.EPOCH_PARAM.OPTIMAL_POOL_COUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>optimal_pool_count IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchByOptimalPoolCount(Integer... values) {
        return fetch(EpochParam.EPOCH_PARAM.OPTIMAL_POOL_COUNT, values);
    }

    /**
     * Fetch records that have <code>pool_deposit BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchRangeOfPoolDeposit(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(EpochParam.EPOCH_PARAM.POOL_DEPOSIT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pool_deposit IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchByPoolDeposit(BigInteger... values) {
        return fetch(EpochParam.EPOCH_PARAM.POOL_DEPOSIT, values);
    }

    /**
     * Fetch records that have <code>price_mem BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchRangeOfPriceMem(Double lowerInclusive, Double upperInclusive) {
        return fetchRange(EpochParam.EPOCH_PARAM.PRICE_MEM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>price_mem IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchByPriceMem(Double... values) {
        return fetch(EpochParam.EPOCH_PARAM.PRICE_MEM, values);
    }

    /**
     * Fetch records that have <code>price_step BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchRangeOfPriceStep(Double lowerInclusive, Double upperInclusive) {
        return fetchRange(EpochParam.EPOCH_PARAM.PRICE_STEP, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>price_step IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchByPriceStep(Double... values) {
        return fetch(EpochParam.EPOCH_PARAM.PRICE_STEP, values);
    }

    /**
     * Fetch records that have <code>protocol_major BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchRangeOfProtocolMajor(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(EpochParam.EPOCH_PARAM.PROTOCOL_MAJOR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>protocol_major IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchByProtocolMajor(Integer... values) {
        return fetch(EpochParam.EPOCH_PARAM.PROTOCOL_MAJOR, values);
    }

    /**
     * Fetch records that have <code>protocol_minor BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchRangeOfProtocolMinor(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(EpochParam.EPOCH_PARAM.PROTOCOL_MINOR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>protocol_minor IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchByProtocolMinor(Integer... values) {
        return fetch(EpochParam.EPOCH_PARAM.PROTOCOL_MINOR, values);
    }

    /**
     * Fetch records that have <code>treasury_growth_rate BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchRangeOfTreasuryGrowthRate(Double lowerInclusive, Double upperInclusive) {
        return fetchRange(EpochParam.EPOCH_PARAM.TREASURY_GROWTH_RATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>treasury_growth_rate IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchByTreasuryGrowthRate(Double... values) {
        return fetch(EpochParam.EPOCH_PARAM.TREASURY_GROWTH_RATE, values);
    }

    /**
     * Fetch records that have <code>block_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchRangeOfBlockId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(EpochParam.EPOCH_PARAM.BLOCK_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>block_id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchByBlockId(Long... values) {
        return fetch(EpochParam.EPOCH_PARAM.BLOCK_ID, values);
    }

    /**
     * Fetch records that have <code>cost_model_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchRangeOfCostModelId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(EpochParam.EPOCH_PARAM.COST_MODEL_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cost_model_id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.EpochParam> fetchByCostModelId(Long... values) {
        return fetch(EpochParam.EPOCH_PARAM.COST_MODEL_ID, values);
    }
}
