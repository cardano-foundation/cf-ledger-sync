/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.daos;


import java.util.List;
import java.util.Optional;

import org.cardanofoundation.ledgersync.jooq.AbstractSpringDAOImpl;
import org.cardanofoundation.ledgersync.jooq.tables.Datum;
import org.cardanofoundation.ledgersync.jooq.tables.records.DatumRecord;
import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class DatumDao extends AbstractSpringDAOImpl<DatumRecord, org.cardanofoundation.ledgersync.jooq.tables.pojos.Datum, Long> {

    /**
     * Create a new DatumDao without any configuration
     */
    public DatumDao() {
        super(Datum.DATUM, org.cardanofoundation.ledgersync.jooq.tables.pojos.Datum.class);
    }

    /**
     * Create a new DatumDao with an attached configuration
     */
    @Autowired
    public DatumDao(Configuration configuration) {
        super(Datum.DATUM, org.cardanofoundation.ledgersync.jooq.tables.pojos.Datum.class, configuration);
    }

    @Override
    public Long getId(org.cardanofoundation.ledgersync.jooq.tables.pojos.Datum object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Datum> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Datum.DATUM.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Datum> fetchById(Long... values) {
        return fetch(Datum.DATUM.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.cardanofoundation.ledgersync.jooq.tables.pojos.Datum fetchOneById(Long value) {
        return fetchOne(Datum.DATUM.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<org.cardanofoundation.ledgersync.jooq.tables.pojos.Datum> fetchOptionalById(Long value) {
        return fetchOptional(Datum.DATUM.ID, value);
    }

    /**
     * Fetch records that have <code>bytes BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Datum> fetchRangeOfBytes(byte[] lowerInclusive, byte[] upperInclusive) {
        return fetchRange(Datum.DATUM.BYTES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>bytes IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Datum> fetchByBytes(byte[]... values) {
        return fetch(Datum.DATUM.BYTES, values);
    }

    /**
     * Fetch records that have <code>hash BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Datum> fetchRangeOfHash(String lowerInclusive, String upperInclusive) {
        return fetchRange(Datum.DATUM.HASH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>hash IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Datum> fetchByHash(String... values) {
        return fetch(Datum.DATUM.HASH, values);
    }

    /**
     * Fetch a unique record that has <code>hash = value</code>
     */
    public org.cardanofoundation.ledgersync.jooq.tables.pojos.Datum fetchOneByHash(String value) {
        return fetchOne(Datum.DATUM.HASH, value);
    }

    /**
     * Fetch a unique record that has <code>hash = value</code>
     */
    public Optional<org.cardanofoundation.ledgersync.jooq.tables.pojos.Datum> fetchOptionalByHash(String value) {
        return fetchOptional(Datum.DATUM.HASH, value);
    }

    /**
     * Fetch records that have <code>value BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Datum> fetchRangeOfValue(String lowerInclusive, String upperInclusive) {
        return fetchRange(Datum.DATUM.VALUE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>value IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Datum> fetchByValue(String... values) {
        return fetch(Datum.DATUM.VALUE, values);
    }

    /**
     * Fetch records that have <code>tx_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Datum> fetchRangeOfTxId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Datum.DATUM.TX_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tx_id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.Datum> fetchByTxId(Long... values) {
        return fetch(Datum.DATUM.TX_ID, values);
    }
}
