/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.records;


import java.math.BigInteger;

import org.cardanofoundation.ledgersync.jooq.tables.PoolHash;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PoolHashRecord extends UpdatableRecordImpl<PoolHashRecord> implements Record5<Long, String, BigInteger, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pool_hash.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>pool_hash.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>pool_hash.hash_raw</code>.
     */
    public void setHashRaw(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>pool_hash.hash_raw</code>.
     */
    public String getHashRaw() {
        return (String) get(1);
    }

    /**
     * Setter for <code>pool_hash.pool_size</code>.
     */
    public void setPoolSize(BigInteger value) {
        set(2, value);
    }

    /**
     * Getter for <code>pool_hash.pool_size</code>.
     */
    public BigInteger getPoolSize() {
        return (BigInteger) get(2);
    }

    /**
     * Setter for <code>pool_hash.epoch_no</code>.
     */
    public void setEpochNo(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>pool_hash.epoch_no</code>.
     */
    public Integer getEpochNo() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>pool_hash.view</code>.
     */
    public void setView(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>pool_hash.view</code>.
     */
    public String getView() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, BigInteger, Integer, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, String, BigInteger, Integer, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PoolHash.POOL_HASH.ID;
    }

    @Override
    public Field<String> field2() {
        return PoolHash.POOL_HASH.HASH_RAW;
    }

    @Override
    public Field<BigInteger> field3() {
        return PoolHash.POOL_HASH.POOL_SIZE;
    }

    @Override
    public Field<Integer> field4() {
        return PoolHash.POOL_HASH.EPOCH_NO;
    }

    @Override
    public Field<String> field5() {
        return PoolHash.POOL_HASH.VIEW;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getHashRaw();
    }

    @Override
    public BigInteger component3() {
        return getPoolSize();
    }

    @Override
    public Integer component4() {
        return getEpochNo();
    }

    @Override
    public String component5() {
        return getView();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getHashRaw();
    }

    @Override
    public BigInteger value3() {
        return getPoolSize();
    }

    @Override
    public Integer value4() {
        return getEpochNo();
    }

    @Override
    public String value5() {
        return getView();
    }

    @Override
    public PoolHashRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PoolHashRecord value2(String value) {
        setHashRaw(value);
        return this;
    }

    @Override
    public PoolHashRecord value3(BigInteger value) {
        setPoolSize(value);
        return this;
    }

    @Override
    public PoolHashRecord value4(Integer value) {
        setEpochNo(value);
        return this;
    }

    @Override
    public PoolHashRecord value5(String value) {
        setView(value);
        return this;
    }

    @Override
    public PoolHashRecord values(Long value1, String value2, BigInteger value3, Integer value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PoolHashRecord
     */
    public PoolHashRecord() {
        super(PoolHash.POOL_HASH);
    }

    /**
     * Create a detached, initialised PoolHashRecord
     */
    public PoolHashRecord(Long id, String hashRaw, BigInteger poolSize, Integer epochNo, String view) {
        super(PoolHash.POOL_HASH);

        setId(id);
        setHashRaw(hashRaw);
        setPoolSize(poolSize);
        setEpochNo(epochNo);
        setView(view);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PoolHashRecord
     */
    public PoolHashRecord(org.cardanofoundation.ledgersync.jooq.tables.pojos.PoolHash value) {
        super(PoolHash.POOL_HASH);

        if (value != null) {
            setId(value.getId());
            setHashRaw(value.getHashRaw());
            setPoolSize(value.getPoolSize());
            setEpochNo(value.getEpochNo());
            setView(value.getView());
            resetChangedOnNotNull();
        }
    }
}
