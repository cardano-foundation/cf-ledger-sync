/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PoolReportHistory implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private String poolId;
    private Boolean isPoolSize;
    private Boolean isFeesPaid;
    private Integer beginEpoch;
    private Integer endEpoch;
    private Long reportId;
    private Boolean eventRegistration;
    private Boolean eventDeregistration;
    private Boolean eventReward;
    private Boolean eventPoolUpdate;

    public PoolReportHistory() {}

    public PoolReportHistory(PoolReportHistory value) {
        this.id = value.id;
        this.poolId = value.poolId;
        this.isPoolSize = value.isPoolSize;
        this.isFeesPaid = value.isFeesPaid;
        this.beginEpoch = value.beginEpoch;
        this.endEpoch = value.endEpoch;
        this.reportId = value.reportId;
        this.eventRegistration = value.eventRegistration;
        this.eventDeregistration = value.eventDeregistration;
        this.eventReward = value.eventReward;
        this.eventPoolUpdate = value.eventPoolUpdate;
    }

    public PoolReportHistory(
        Long id,
        String poolId,
        Boolean isPoolSize,
        Boolean isFeesPaid,
        Integer beginEpoch,
        Integer endEpoch,
        Long reportId,
        Boolean eventRegistration,
        Boolean eventDeregistration,
        Boolean eventReward,
        Boolean eventPoolUpdate
    ) {
        this.id = id;
        this.poolId = poolId;
        this.isPoolSize = isPoolSize;
        this.isFeesPaid = isFeesPaid;
        this.beginEpoch = beginEpoch;
        this.endEpoch = endEpoch;
        this.reportId = reportId;
        this.eventRegistration = eventRegistration;
        this.eventDeregistration = eventDeregistration;
        this.eventReward = eventReward;
        this.eventPoolUpdate = eventPoolUpdate;
    }

    /**
     * Getter for <code>pool_report_history.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>pool_report_history.id</code>.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>pool_report_history.pool_id</code>.
     */
    public String getPoolId() {
        return this.poolId;
    }

    /**
     * Setter for <code>pool_report_history.pool_id</code>.
     */
    public void setPoolId(String poolId) {
        this.poolId = poolId;
    }

    /**
     * Getter for <code>pool_report_history.is_pool_size</code>.
     */
    public Boolean getIsPoolSize() {
        return this.isPoolSize;
    }

    /**
     * Setter for <code>pool_report_history.is_pool_size</code>.
     */
    public void setIsPoolSize(Boolean isPoolSize) {
        this.isPoolSize = isPoolSize;
    }

    /**
     * Getter for <code>pool_report_history.is_fees_paid</code>.
     */
    public Boolean getIsFeesPaid() {
        return this.isFeesPaid;
    }

    /**
     * Setter for <code>pool_report_history.is_fees_paid</code>.
     */
    public void setIsFeesPaid(Boolean isFeesPaid) {
        this.isFeesPaid = isFeesPaid;
    }

    /**
     * Getter for <code>pool_report_history.begin_epoch</code>.
     */
    public Integer getBeginEpoch() {
        return this.beginEpoch;
    }

    /**
     * Setter for <code>pool_report_history.begin_epoch</code>.
     */
    public void setBeginEpoch(Integer beginEpoch) {
        this.beginEpoch = beginEpoch;
    }

    /**
     * Getter for <code>pool_report_history.end_epoch</code>.
     */
    public Integer getEndEpoch() {
        return this.endEpoch;
    }

    /**
     * Setter for <code>pool_report_history.end_epoch</code>.
     */
    public void setEndEpoch(Integer endEpoch) {
        this.endEpoch = endEpoch;
    }

    /**
     * Getter for <code>pool_report_history.report_id</code>.
     */
    public Long getReportId() {
        return this.reportId;
    }

    /**
     * Setter for <code>pool_report_history.report_id</code>.
     */
    public void setReportId(Long reportId) {
        this.reportId = reportId;
    }

    /**
     * Getter for <code>pool_report_history.event_registration</code>.
     */
    public Boolean getEventRegistration() {
        return this.eventRegistration;
    }

    /**
     * Setter for <code>pool_report_history.event_registration</code>.
     */
    public void setEventRegistration(Boolean eventRegistration) {
        this.eventRegistration = eventRegistration;
    }

    /**
     * Getter for <code>pool_report_history.event_deregistration</code>.
     */
    public Boolean getEventDeregistration() {
        return this.eventDeregistration;
    }

    /**
     * Setter for <code>pool_report_history.event_deregistration</code>.
     */
    public void setEventDeregistration(Boolean eventDeregistration) {
        this.eventDeregistration = eventDeregistration;
    }

    /**
     * Getter for <code>pool_report_history.event_reward</code>.
     */
    public Boolean getEventReward() {
        return this.eventReward;
    }

    /**
     * Setter for <code>pool_report_history.event_reward</code>.
     */
    public void setEventReward(Boolean eventReward) {
        this.eventReward = eventReward;
    }

    /**
     * Getter for <code>pool_report_history.event_pool_update</code>.
     */
    public Boolean getEventPoolUpdate() {
        return this.eventPoolUpdate;
    }

    /**
     * Setter for <code>pool_report_history.event_pool_update</code>.
     */
    public void setEventPoolUpdate(Boolean eventPoolUpdate) {
        this.eventPoolUpdate = eventPoolUpdate;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PoolReportHistory other = (PoolReportHistory) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.poolId == null) {
            if (other.poolId != null)
                return false;
        }
        else if (!this.poolId.equals(other.poolId))
            return false;
        if (this.isPoolSize == null) {
            if (other.isPoolSize != null)
                return false;
        }
        else if (!this.isPoolSize.equals(other.isPoolSize))
            return false;
        if (this.isFeesPaid == null) {
            if (other.isFeesPaid != null)
                return false;
        }
        else if (!this.isFeesPaid.equals(other.isFeesPaid))
            return false;
        if (this.beginEpoch == null) {
            if (other.beginEpoch != null)
                return false;
        }
        else if (!this.beginEpoch.equals(other.beginEpoch))
            return false;
        if (this.endEpoch == null) {
            if (other.endEpoch != null)
                return false;
        }
        else if (!this.endEpoch.equals(other.endEpoch))
            return false;
        if (this.reportId == null) {
            if (other.reportId != null)
                return false;
        }
        else if (!this.reportId.equals(other.reportId))
            return false;
        if (this.eventRegistration == null) {
            if (other.eventRegistration != null)
                return false;
        }
        else if (!this.eventRegistration.equals(other.eventRegistration))
            return false;
        if (this.eventDeregistration == null) {
            if (other.eventDeregistration != null)
                return false;
        }
        else if (!this.eventDeregistration.equals(other.eventDeregistration))
            return false;
        if (this.eventReward == null) {
            if (other.eventReward != null)
                return false;
        }
        else if (!this.eventReward.equals(other.eventReward))
            return false;
        if (this.eventPoolUpdate == null) {
            if (other.eventPoolUpdate != null)
                return false;
        }
        else if (!this.eventPoolUpdate.equals(other.eventPoolUpdate))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.poolId == null) ? 0 : this.poolId.hashCode());
        result = prime * result + ((this.isPoolSize == null) ? 0 : this.isPoolSize.hashCode());
        result = prime * result + ((this.isFeesPaid == null) ? 0 : this.isFeesPaid.hashCode());
        result = prime * result + ((this.beginEpoch == null) ? 0 : this.beginEpoch.hashCode());
        result = prime * result + ((this.endEpoch == null) ? 0 : this.endEpoch.hashCode());
        result = prime * result + ((this.reportId == null) ? 0 : this.reportId.hashCode());
        result = prime * result + ((this.eventRegistration == null) ? 0 : this.eventRegistration.hashCode());
        result = prime * result + ((this.eventDeregistration == null) ? 0 : this.eventDeregistration.hashCode());
        result = prime * result + ((this.eventReward == null) ? 0 : this.eventReward.hashCode());
        result = prime * result + ((this.eventPoolUpdate == null) ? 0 : this.eventPoolUpdate.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PoolReportHistory (");

        sb.append(id);
        sb.append(", ").append(poolId);
        sb.append(", ").append(isPoolSize);
        sb.append(", ").append(isFeesPaid);
        sb.append(", ").append(beginEpoch);
        sb.append(", ").append(endEpoch);
        sb.append(", ").append(reportId);
        sb.append(", ").append(eventRegistration);
        sb.append(", ").append(eventDeregistration);
        sb.append(", ").append(eventReward);
        sb.append(", ").append(eventPoolUpdate);

        sb.append(")");
        return sb.toString();
    }
}
