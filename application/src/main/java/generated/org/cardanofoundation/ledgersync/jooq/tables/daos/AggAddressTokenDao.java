/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.daos;


import java.math.BigInteger;
import java.time.LocalDate;
import java.util.List;
import java.util.Optional;

import org.cardanofoundation.ledgersync.jooq.AbstractSpringDAOImpl;
import org.cardanofoundation.ledgersync.jooq.tables.AggAddressToken;
import org.cardanofoundation.ledgersync.jooq.tables.records.AggAddressTokenRecord;
import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class AggAddressTokenDao extends AbstractSpringDAOImpl<AggAddressTokenRecord, org.cardanofoundation.ledgersync.jooq.tables.pojos.AggAddressToken, Long> {

    /**
     * Create a new AggAddressTokenDao without any configuration
     */
    public AggAddressTokenDao() {
        super(AggAddressToken.AGG_ADDRESS_TOKEN, org.cardanofoundation.ledgersync.jooq.tables.pojos.AggAddressToken.class);
    }

    /**
     * Create a new AggAddressTokenDao with an attached configuration
     */
    @Autowired
    public AggAddressTokenDao(Configuration configuration) {
        super(AggAddressToken.AGG_ADDRESS_TOKEN, org.cardanofoundation.ledgersync.jooq.tables.pojos.AggAddressToken.class, configuration);
    }

    @Override
    public Long getId(org.cardanofoundation.ledgersync.jooq.tables.pojos.AggAddressToken object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AggAddressToken> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(AggAddressToken.AGG_ADDRESS_TOKEN.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AggAddressToken> fetchById(Long... values) {
        return fetch(AggAddressToken.AGG_ADDRESS_TOKEN.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.cardanofoundation.ledgersync.jooq.tables.pojos.AggAddressToken fetchOneById(Long value) {
        return fetchOne(AggAddressToken.AGG_ADDRESS_TOKEN.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<org.cardanofoundation.ledgersync.jooq.tables.pojos.AggAddressToken> fetchOptionalById(Long value) {
        return fetchOptional(AggAddressToken.AGG_ADDRESS_TOKEN.ID, value);
    }

    /**
     * Fetch records that have <code>balance BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AggAddressToken> fetchRangeOfBalance(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(AggAddressToken.AGG_ADDRESS_TOKEN.BALANCE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>balance IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AggAddressToken> fetchByBalance(BigInteger... values) {
        return fetch(AggAddressToken.AGG_ADDRESS_TOKEN.BALANCE, values);
    }

    /**
     * Fetch records that have <code>ident BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AggAddressToken> fetchRangeOfIdent(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(AggAddressToken.AGG_ADDRESS_TOKEN.IDENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ident IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AggAddressToken> fetchByIdent(Long... values) {
        return fetch(AggAddressToken.AGG_ADDRESS_TOKEN.IDENT, values);
    }

    /**
     * Fetch records that have <code>day BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AggAddressToken> fetchRangeOfDay(LocalDate lowerInclusive, LocalDate upperInclusive) {
        return fetchRange(AggAddressToken.AGG_ADDRESS_TOKEN.DAY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>day IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AggAddressToken> fetchByDay(LocalDate... values) {
        return fetch(AggAddressToken.AGG_ADDRESS_TOKEN.DAY, values);
    }
}
