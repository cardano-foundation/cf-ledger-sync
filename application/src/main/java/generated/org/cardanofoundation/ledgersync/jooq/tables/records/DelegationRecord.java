/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.records;


import org.cardanofoundation.ledgersync.jooq.tables.Delegation;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DelegationRecord extends UpdatableRecordImpl<DelegationRecord> implements Record8<Long, Long, Integer, Long, Long, Long, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>delegation.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>delegation.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>delegation.active_epoch_no</code>.
     */
    public void setActiveEpochNo(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>delegation.active_epoch_no</code>.
     */
    public Long getActiveEpochNo() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>delegation.cert_index</code>.
     */
    public void setCertIndex(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>delegation.cert_index</code>.
     */
    public Integer getCertIndex() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>delegation.slot_no</code>.
     */
    public void setSlotNo(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>delegation.slot_no</code>.
     */
    public Long getSlotNo() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>delegation.addr_id</code>.
     */
    public void setAddrId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>delegation.addr_id</code>.
     */
    public Long getAddrId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>delegation.pool_hash_id</code>.
     */
    public void setPoolHashId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>delegation.pool_hash_id</code>.
     */
    public Long getPoolHashId() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>delegation.redeemer_id</code>.
     */
    public void setRedeemerId(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>delegation.redeemer_id</code>.
     */
    public Long getRedeemerId() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>delegation.tx_id</code>.
     */
    public void setTxId(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>delegation.tx_id</code>.
     */
    public Long getTxId() {
        return (Long) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, Long, Integer, Long, Long, Long, Long, Long> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, Long, Integer, Long, Long, Long, Long, Long> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Delegation.DELEGATION.ID;
    }

    @Override
    public Field<Long> field2() {
        return Delegation.DELEGATION.ACTIVE_EPOCH_NO;
    }

    @Override
    public Field<Integer> field3() {
        return Delegation.DELEGATION.CERT_INDEX;
    }

    @Override
    public Field<Long> field4() {
        return Delegation.DELEGATION.SLOT_NO;
    }

    @Override
    public Field<Long> field5() {
        return Delegation.DELEGATION.ADDR_ID;
    }

    @Override
    public Field<Long> field6() {
        return Delegation.DELEGATION.POOL_HASH_ID;
    }

    @Override
    public Field<Long> field7() {
        return Delegation.DELEGATION.REDEEMER_ID;
    }

    @Override
    public Field<Long> field8() {
        return Delegation.DELEGATION.TX_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getActiveEpochNo();
    }

    @Override
    public Integer component3() {
        return getCertIndex();
    }

    @Override
    public Long component4() {
        return getSlotNo();
    }

    @Override
    public Long component5() {
        return getAddrId();
    }

    @Override
    public Long component6() {
        return getPoolHashId();
    }

    @Override
    public Long component7() {
        return getRedeemerId();
    }

    @Override
    public Long component8() {
        return getTxId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getActiveEpochNo();
    }

    @Override
    public Integer value3() {
        return getCertIndex();
    }

    @Override
    public Long value4() {
        return getSlotNo();
    }

    @Override
    public Long value5() {
        return getAddrId();
    }

    @Override
    public Long value6() {
        return getPoolHashId();
    }

    @Override
    public Long value7() {
        return getRedeemerId();
    }

    @Override
    public Long value8() {
        return getTxId();
    }

    @Override
    public DelegationRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public DelegationRecord value2(Long value) {
        setActiveEpochNo(value);
        return this;
    }

    @Override
    public DelegationRecord value3(Integer value) {
        setCertIndex(value);
        return this;
    }

    @Override
    public DelegationRecord value4(Long value) {
        setSlotNo(value);
        return this;
    }

    @Override
    public DelegationRecord value5(Long value) {
        setAddrId(value);
        return this;
    }

    @Override
    public DelegationRecord value6(Long value) {
        setPoolHashId(value);
        return this;
    }

    @Override
    public DelegationRecord value7(Long value) {
        setRedeemerId(value);
        return this;
    }

    @Override
    public DelegationRecord value8(Long value) {
        setTxId(value);
        return this;
    }

    @Override
    public DelegationRecord values(Long value1, Long value2, Integer value3, Long value4, Long value5, Long value6, Long value7, Long value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DelegationRecord
     */
    public DelegationRecord() {
        super(Delegation.DELEGATION);
    }

    /**
     * Create a detached, initialised DelegationRecord
     */
    public DelegationRecord(Long id, Long activeEpochNo, Integer certIndex, Long slotNo, Long addrId, Long poolHashId, Long redeemerId, Long txId) {
        super(Delegation.DELEGATION);

        setId(id);
        setActiveEpochNo(activeEpochNo);
        setCertIndex(certIndex);
        setSlotNo(slotNo);
        setAddrId(addrId);
        setPoolHashId(poolHashId);
        setRedeemerId(redeemerId);
        setTxId(txId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised DelegationRecord
     */
    public DelegationRecord(org.cardanofoundation.ledgersync.jooq.tables.pojos.Delegation value) {
        super(Delegation.DELEGATION);

        if (value != null) {
            setId(value.getId());
            setActiveEpochNo(value.getActiveEpochNo());
            setCertIndex(value.getCertIndex());
            setSlotNo(value.getSlotNo());
            setAddrId(value.getAddrId());
            setPoolHashId(value.getPoolHashId());
            setRedeemerId(value.getRedeemerId());
            setTxId(value.getTxId());
            resetChangedOnNotNull();
        }
    }
}
