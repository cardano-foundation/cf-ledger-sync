/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.records;


import java.math.BigInteger;

import org.cardanofoundation.ledgersync.jooq.tables.AddressTokenBalance;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AddressTokenBalanceRecord extends UpdatableRecordImpl<AddressTokenBalanceRecord> implements Record5<Long, Long, BigInteger, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>address_token_balance.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>address_token_balance.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>address_token_balance.address_id</code>.
     */
    public void setAddressId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>address_token_balance.address_id</code>.
     */
    public Long getAddressId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>address_token_balance.balance</code>.
     */
    public void setBalance(BigInteger value) {
        set(2, value);
    }

    /**
     * Getter for <code>address_token_balance.balance</code>.
     */
    public BigInteger getBalance() {
        return (BigInteger) get(2);
    }

    /**
     * Setter for <code>address_token_balance.ident</code>.
     */
    public void setIdent(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>address_token_balance.ident</code>.
     */
    public Long getIdent() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>address_token_balance.stake_address_id</code>.
     */
    public void setStakeAddressId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>address_token_balance.stake_address_id</code>.
     */
    public Long getStakeAddressId() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, BigInteger, Long, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Long, BigInteger, Long, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return AddressTokenBalance.ADDRESS_TOKEN_BALANCE.ID;
    }

    @Override
    public Field<Long> field2() {
        return AddressTokenBalance.ADDRESS_TOKEN_BALANCE.ADDRESS_ID;
    }

    @Override
    public Field<BigInteger> field3() {
        return AddressTokenBalance.ADDRESS_TOKEN_BALANCE.BALANCE;
    }

    @Override
    public Field<Long> field4() {
        return AddressTokenBalance.ADDRESS_TOKEN_BALANCE.IDENT;
    }

    @Override
    public Field<Long> field5() {
        return AddressTokenBalance.ADDRESS_TOKEN_BALANCE.STAKE_ADDRESS_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getAddressId();
    }

    @Override
    public BigInteger component3() {
        return getBalance();
    }

    @Override
    public Long component4() {
        return getIdent();
    }

    @Override
    public Long component5() {
        return getStakeAddressId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getAddressId();
    }

    @Override
    public BigInteger value3() {
        return getBalance();
    }

    @Override
    public Long value4() {
        return getIdent();
    }

    @Override
    public Long value5() {
        return getStakeAddressId();
    }

    @Override
    public AddressTokenBalanceRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AddressTokenBalanceRecord value2(Long value) {
        setAddressId(value);
        return this;
    }

    @Override
    public AddressTokenBalanceRecord value3(BigInteger value) {
        setBalance(value);
        return this;
    }

    @Override
    public AddressTokenBalanceRecord value4(Long value) {
        setIdent(value);
        return this;
    }

    @Override
    public AddressTokenBalanceRecord value5(Long value) {
        setStakeAddressId(value);
        return this;
    }

    @Override
    public AddressTokenBalanceRecord values(Long value1, Long value2, BigInteger value3, Long value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AddressTokenBalanceRecord
     */
    public AddressTokenBalanceRecord() {
        super(AddressTokenBalance.ADDRESS_TOKEN_BALANCE);
    }

    /**
     * Create a detached, initialised AddressTokenBalanceRecord
     */
    public AddressTokenBalanceRecord(Long id, Long addressId, BigInteger balance, Long ident, Long stakeAddressId) {
        super(AddressTokenBalance.ADDRESS_TOKEN_BALANCE);

        setId(id);
        setAddressId(addressId);
        setBalance(balance);
        setIdent(ident);
        setStakeAddressId(stakeAddressId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised AddressTokenBalanceRecord
     */
    public AddressTokenBalanceRecord(org.cardanofoundation.ledgersync.jooq.tables.pojos.AddressTokenBalance value) {
        super(AddressTokenBalance.ADDRESS_TOKEN_BALANCE);

        if (value != null) {
            setId(value.getId());
            setAddressId(value.getAddressId());
            setBalance(value.getBalance());
            setIdent(value.getIdent());
            setStakeAddressId(value.getStakeAddressId());
            resetChangedOnNotNull();
        }
    }
}
