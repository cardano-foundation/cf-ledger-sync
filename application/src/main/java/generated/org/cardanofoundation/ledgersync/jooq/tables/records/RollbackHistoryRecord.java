/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.records;


import java.time.LocalDateTime;

import org.cardanofoundation.ledgersync.jooq.tables.RollbackHistory;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RollbackHistoryRecord extends UpdatableRecordImpl<RollbackHistoryRecord> implements Record5<Long, String, Long, LocalDateTime, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>rollback_history.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>rollback_history.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>rollback_history.block_hash</code>.
     */
    public void setBlockHash(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>rollback_history.block_hash</code>.
     */
    public String getBlockHash() {
        return (String) get(1);
    }

    /**
     * Setter for <code>rollback_history.block_no</code>.
     */
    public void setBlockNo(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>rollback_history.block_no</code>.
     */
    public Long getBlockNo() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>rollback_history.rollback_time</code>.
     */
    public void setRollbackTime(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>rollback_history.rollback_time</code>.
     */
    public LocalDateTime getRollbackTime() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>rollback_history.slot_no</code>.
     */
    public void setSlotNo(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>rollback_history.slot_no</code>.
     */
    public Long getSlotNo() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, Long, LocalDateTime, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, String, Long, LocalDateTime, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return RollbackHistory.ROLLBACK_HISTORY.ID;
    }

    @Override
    public Field<String> field2() {
        return RollbackHistory.ROLLBACK_HISTORY.BLOCK_HASH;
    }

    @Override
    public Field<Long> field3() {
        return RollbackHistory.ROLLBACK_HISTORY.BLOCK_NO;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return RollbackHistory.ROLLBACK_HISTORY.ROLLBACK_TIME;
    }

    @Override
    public Field<Long> field5() {
        return RollbackHistory.ROLLBACK_HISTORY.SLOT_NO;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getBlockHash();
    }

    @Override
    public Long component3() {
        return getBlockNo();
    }

    @Override
    public LocalDateTime component4() {
        return getRollbackTime();
    }

    @Override
    public Long component5() {
        return getSlotNo();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getBlockHash();
    }

    @Override
    public Long value3() {
        return getBlockNo();
    }

    @Override
    public LocalDateTime value4() {
        return getRollbackTime();
    }

    @Override
    public Long value5() {
        return getSlotNo();
    }

    @Override
    public RollbackHistoryRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public RollbackHistoryRecord value2(String value) {
        setBlockHash(value);
        return this;
    }

    @Override
    public RollbackHistoryRecord value3(Long value) {
        setBlockNo(value);
        return this;
    }

    @Override
    public RollbackHistoryRecord value4(LocalDateTime value) {
        setRollbackTime(value);
        return this;
    }

    @Override
    public RollbackHistoryRecord value5(Long value) {
        setSlotNo(value);
        return this;
    }

    @Override
    public RollbackHistoryRecord values(Long value1, String value2, Long value3, LocalDateTime value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RollbackHistoryRecord
     */
    public RollbackHistoryRecord() {
        super(RollbackHistory.ROLLBACK_HISTORY);
    }

    /**
     * Create a detached, initialised RollbackHistoryRecord
     */
    public RollbackHistoryRecord(Long id, String blockHash, Long blockNo, LocalDateTime rollbackTime, Long slotNo) {
        super(RollbackHistory.ROLLBACK_HISTORY);

        setId(id);
        setBlockHash(blockHash);
        setBlockNo(blockNo);
        setRollbackTime(rollbackTime);
        setSlotNo(slotNo);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised RollbackHistoryRecord
     */
    public RollbackHistoryRecord(org.cardanofoundation.ledgersync.jooq.tables.pojos.RollbackHistory value) {
        super(RollbackHistory.ROLLBACK_HISTORY);

        if (value != null) {
            setId(value.getId());
            setBlockHash(value.getBlockHash());
            setBlockNo(value.getBlockNo());
            setRollbackTime(value.getRollbackTime());
            setSlotNo(value.getSlotNo());
            resetChangedOnNotNull();
        }
    }
}
