/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.records;


import java.math.BigInteger;

import org.cardanofoundation.ledgersync.jooq.tables.Reserve;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReserveRecord extends UpdatableRecordImpl<ReserveRecord> implements Record5<Long, BigInteger, Integer, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>reserve.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>reserve.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>reserve.amount</code>.
     */
    public void setAmount(BigInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>reserve.amount</code>.
     */
    public BigInteger getAmount() {
        return (BigInteger) get(1);
    }

    /**
     * Setter for <code>reserve.cert_index</code>.
     */
    public void setCertIndex(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>reserve.cert_index</code>.
     */
    public Integer getCertIndex() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>reserve.addr_id</code>.
     */
    public void setAddrId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>reserve.addr_id</code>.
     */
    public Long getAddrId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>reserve.tx_id</code>.
     */
    public void setTxId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>reserve.tx_id</code>.
     */
    public Long getTxId() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, BigInteger, Integer, Long, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, BigInteger, Integer, Long, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Reserve.RESERVE.ID;
    }

    @Override
    public Field<BigInteger> field2() {
        return Reserve.RESERVE.AMOUNT;
    }

    @Override
    public Field<Integer> field3() {
        return Reserve.RESERVE.CERT_INDEX;
    }

    @Override
    public Field<Long> field4() {
        return Reserve.RESERVE.ADDR_ID;
    }

    @Override
    public Field<Long> field5() {
        return Reserve.RESERVE.TX_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public BigInteger component2() {
        return getAmount();
    }

    @Override
    public Integer component3() {
        return getCertIndex();
    }

    @Override
    public Long component4() {
        return getAddrId();
    }

    @Override
    public Long component5() {
        return getTxId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public BigInteger value2() {
        return getAmount();
    }

    @Override
    public Integer value3() {
        return getCertIndex();
    }

    @Override
    public Long value4() {
        return getAddrId();
    }

    @Override
    public Long value5() {
        return getTxId();
    }

    @Override
    public ReserveRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ReserveRecord value2(BigInteger value) {
        setAmount(value);
        return this;
    }

    @Override
    public ReserveRecord value3(Integer value) {
        setCertIndex(value);
        return this;
    }

    @Override
    public ReserveRecord value4(Long value) {
        setAddrId(value);
        return this;
    }

    @Override
    public ReserveRecord value5(Long value) {
        setTxId(value);
        return this;
    }

    @Override
    public ReserveRecord values(Long value1, BigInteger value2, Integer value3, Long value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ReserveRecord
     */
    public ReserveRecord() {
        super(Reserve.RESERVE);
    }

    /**
     * Create a detached, initialised ReserveRecord
     */
    public ReserveRecord(Long id, BigInteger amount, Integer certIndex, Long addrId, Long txId) {
        super(Reserve.RESERVE);

        setId(id);
        setAmount(amount);
        setCertIndex(certIndex);
        setAddrId(addrId);
        setTxId(txId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ReserveRecord
     */
    public ReserveRecord(org.cardanofoundation.ledgersync.jooq.tables.pojos.Reserve value) {
        super(Reserve.RESERVE);

        if (value != null) {
            setId(value.getId());
            setAmount(value.getAmount());
            setCertIndex(value.getCertIndex());
            setAddrId(value.getAddrId());
            setTxId(value.getTxId());
            resetChangedOnNotNull();
        }
    }
}
