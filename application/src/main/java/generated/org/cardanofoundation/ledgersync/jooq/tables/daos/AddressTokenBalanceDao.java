/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.daos;


import java.math.BigInteger;
import java.util.List;
import java.util.Optional;

import org.cardanofoundation.ledgersync.jooq.AbstractSpringDAOImpl;
import org.cardanofoundation.ledgersync.jooq.tables.AddressTokenBalance;
import org.cardanofoundation.ledgersync.jooq.tables.records.AddressTokenBalanceRecord;
import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class AddressTokenBalanceDao extends AbstractSpringDAOImpl<AddressTokenBalanceRecord, org.cardanofoundation.ledgersync.jooq.tables.pojos.AddressTokenBalance, Long> {

    /**
     * Create a new AddressTokenBalanceDao without any configuration
     */
    public AddressTokenBalanceDao() {
        super(AddressTokenBalance.ADDRESS_TOKEN_BALANCE, org.cardanofoundation.ledgersync.jooq.tables.pojos.AddressTokenBalance.class);
    }

    /**
     * Create a new AddressTokenBalanceDao with an attached configuration
     */
    @Autowired
    public AddressTokenBalanceDao(Configuration configuration) {
        super(AddressTokenBalance.ADDRESS_TOKEN_BALANCE, org.cardanofoundation.ledgersync.jooq.tables.pojos.AddressTokenBalance.class, configuration);
    }

    @Override
    public Long getId(org.cardanofoundation.ledgersync.jooq.tables.pojos.AddressTokenBalance object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AddressTokenBalance> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(AddressTokenBalance.ADDRESS_TOKEN_BALANCE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AddressTokenBalance> fetchById(Long... values) {
        return fetch(AddressTokenBalance.ADDRESS_TOKEN_BALANCE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.cardanofoundation.ledgersync.jooq.tables.pojos.AddressTokenBalance fetchOneById(Long value) {
        return fetchOne(AddressTokenBalance.ADDRESS_TOKEN_BALANCE.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<org.cardanofoundation.ledgersync.jooq.tables.pojos.AddressTokenBalance> fetchOptionalById(Long value) {
        return fetchOptional(AddressTokenBalance.ADDRESS_TOKEN_BALANCE.ID, value);
    }

    /**
     * Fetch records that have <code>address_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AddressTokenBalance> fetchRangeOfAddressId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(AddressTokenBalance.ADDRESS_TOKEN_BALANCE.ADDRESS_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>address_id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AddressTokenBalance> fetchByAddressId(Long... values) {
        return fetch(AddressTokenBalance.ADDRESS_TOKEN_BALANCE.ADDRESS_ID, values);
    }

    /**
     * Fetch records that have <code>balance BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AddressTokenBalance> fetchRangeOfBalance(BigInteger lowerInclusive, BigInteger upperInclusive) {
        return fetchRange(AddressTokenBalance.ADDRESS_TOKEN_BALANCE.BALANCE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>balance IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AddressTokenBalance> fetchByBalance(BigInteger... values) {
        return fetch(AddressTokenBalance.ADDRESS_TOKEN_BALANCE.BALANCE, values);
    }

    /**
     * Fetch records that have <code>ident BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AddressTokenBalance> fetchRangeOfIdent(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(AddressTokenBalance.ADDRESS_TOKEN_BALANCE.IDENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ident IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AddressTokenBalance> fetchByIdent(Long... values) {
        return fetch(AddressTokenBalance.ADDRESS_TOKEN_BALANCE.IDENT, values);
    }

    /**
     * Fetch records that have <code>stake_address_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AddressTokenBalance> fetchRangeOfStakeAddressId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(AddressTokenBalance.ADDRESS_TOKEN_BALANCE.STAKE_ADDRESS_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>stake_address_id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.AddressTokenBalance> fetchByStakeAddressId(Long... values) {
        return fetch(AddressTokenBalance.ADDRESS_TOKEN_BALANCE.STAKE_ADDRESS_ID, values);
    }
}
