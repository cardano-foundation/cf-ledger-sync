/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.pojos;


import java.io.Serializable;
import java.math.BigInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EpochParam implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private BigInteger coinsPerUtxoSize;
    private Integer collateralPercent;
    private Double decentralisation;
    private Integer epochNo;
    private String extraEntropy;
    private Double influence;
    private BigInteger keyDeposit;
    private Integer maxBhSize;
    private BigInteger maxBlockExMem;
    private BigInteger maxBlockExSteps;
    private Integer maxBlockSize;
    private Integer maxCollateralInputs;
    private Integer maxEpoch;
    private BigInteger maxTxExMem;
    private BigInteger maxTxExSteps;
    private Integer maxTxSize;
    private BigInteger maxValSize;
    private Integer minFeeA;
    private Integer minFeeB;
    private BigInteger minPoolCost;
    private BigInteger minUtxoValue;
    private Double monetaryExpandRate;
    private String nonce;
    private Integer optimalPoolCount;
    private BigInteger poolDeposit;
    private Double priceMem;
    private Double priceStep;
    private Integer protocolMajor;
    private Integer protocolMinor;
    private Double treasuryGrowthRate;
    private Long blockId;
    private Long costModelId;

    public EpochParam() {}

    public EpochParam(EpochParam value) {
        this.id = value.id;
        this.coinsPerUtxoSize = value.coinsPerUtxoSize;
        this.collateralPercent = value.collateralPercent;
        this.decentralisation = value.decentralisation;
        this.epochNo = value.epochNo;
        this.extraEntropy = value.extraEntropy;
        this.influence = value.influence;
        this.keyDeposit = value.keyDeposit;
        this.maxBhSize = value.maxBhSize;
        this.maxBlockExMem = value.maxBlockExMem;
        this.maxBlockExSteps = value.maxBlockExSteps;
        this.maxBlockSize = value.maxBlockSize;
        this.maxCollateralInputs = value.maxCollateralInputs;
        this.maxEpoch = value.maxEpoch;
        this.maxTxExMem = value.maxTxExMem;
        this.maxTxExSteps = value.maxTxExSteps;
        this.maxTxSize = value.maxTxSize;
        this.maxValSize = value.maxValSize;
        this.minFeeA = value.minFeeA;
        this.minFeeB = value.minFeeB;
        this.minPoolCost = value.minPoolCost;
        this.minUtxoValue = value.minUtxoValue;
        this.monetaryExpandRate = value.monetaryExpandRate;
        this.nonce = value.nonce;
        this.optimalPoolCount = value.optimalPoolCount;
        this.poolDeposit = value.poolDeposit;
        this.priceMem = value.priceMem;
        this.priceStep = value.priceStep;
        this.protocolMajor = value.protocolMajor;
        this.protocolMinor = value.protocolMinor;
        this.treasuryGrowthRate = value.treasuryGrowthRate;
        this.blockId = value.blockId;
        this.costModelId = value.costModelId;
    }

    public EpochParam(
        Long id,
        BigInteger coinsPerUtxoSize,
        Integer collateralPercent,
        Double decentralisation,
        Integer epochNo,
        String extraEntropy,
        Double influence,
        BigInteger keyDeposit,
        Integer maxBhSize,
        BigInteger maxBlockExMem,
        BigInteger maxBlockExSteps,
        Integer maxBlockSize,
        Integer maxCollateralInputs,
        Integer maxEpoch,
        BigInteger maxTxExMem,
        BigInteger maxTxExSteps,
        Integer maxTxSize,
        BigInteger maxValSize,
        Integer minFeeA,
        Integer minFeeB,
        BigInteger minPoolCost,
        BigInteger minUtxoValue,
        Double monetaryExpandRate,
        String nonce,
        Integer optimalPoolCount,
        BigInteger poolDeposit,
        Double priceMem,
        Double priceStep,
        Integer protocolMajor,
        Integer protocolMinor,
        Double treasuryGrowthRate,
        Long blockId,
        Long costModelId
    ) {
        this.id = id;
        this.coinsPerUtxoSize = coinsPerUtxoSize;
        this.collateralPercent = collateralPercent;
        this.decentralisation = decentralisation;
        this.epochNo = epochNo;
        this.extraEntropy = extraEntropy;
        this.influence = influence;
        this.keyDeposit = keyDeposit;
        this.maxBhSize = maxBhSize;
        this.maxBlockExMem = maxBlockExMem;
        this.maxBlockExSteps = maxBlockExSteps;
        this.maxBlockSize = maxBlockSize;
        this.maxCollateralInputs = maxCollateralInputs;
        this.maxEpoch = maxEpoch;
        this.maxTxExMem = maxTxExMem;
        this.maxTxExSteps = maxTxExSteps;
        this.maxTxSize = maxTxSize;
        this.maxValSize = maxValSize;
        this.minFeeA = minFeeA;
        this.minFeeB = minFeeB;
        this.minPoolCost = minPoolCost;
        this.minUtxoValue = minUtxoValue;
        this.monetaryExpandRate = monetaryExpandRate;
        this.nonce = nonce;
        this.optimalPoolCount = optimalPoolCount;
        this.poolDeposit = poolDeposit;
        this.priceMem = priceMem;
        this.priceStep = priceStep;
        this.protocolMajor = protocolMajor;
        this.protocolMinor = protocolMinor;
        this.treasuryGrowthRate = treasuryGrowthRate;
        this.blockId = blockId;
        this.costModelId = costModelId;
    }

    /**
     * Getter for <code>epoch_param.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>epoch_param.id</code>.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>epoch_param.coins_per_utxo_size</code>.
     */
    public BigInteger getCoinsPerUtxoSize() {
        return this.coinsPerUtxoSize;
    }

    /**
     * Setter for <code>epoch_param.coins_per_utxo_size</code>.
     */
    public void setCoinsPerUtxoSize(BigInteger coinsPerUtxoSize) {
        this.coinsPerUtxoSize = coinsPerUtxoSize;
    }

    /**
     * Getter for <code>epoch_param.collateral_percent</code>.
     */
    public Integer getCollateralPercent() {
        return this.collateralPercent;
    }

    /**
     * Setter for <code>epoch_param.collateral_percent</code>.
     */
    public void setCollateralPercent(Integer collateralPercent) {
        this.collateralPercent = collateralPercent;
    }

    /**
     * Getter for <code>epoch_param.decentralisation</code>.
     */
    public Double getDecentralisation() {
        return this.decentralisation;
    }

    /**
     * Setter for <code>epoch_param.decentralisation</code>.
     */
    public void setDecentralisation(Double decentralisation) {
        this.decentralisation = decentralisation;
    }

    /**
     * Getter for <code>epoch_param.epoch_no</code>.
     */
    public Integer getEpochNo() {
        return this.epochNo;
    }

    /**
     * Setter for <code>epoch_param.epoch_no</code>.
     */
    public void setEpochNo(Integer epochNo) {
        this.epochNo = epochNo;
    }

    /**
     * Getter for <code>epoch_param.extra_entropy</code>.
     */
    public String getExtraEntropy() {
        return this.extraEntropy;
    }

    /**
     * Setter for <code>epoch_param.extra_entropy</code>.
     */
    public void setExtraEntropy(String extraEntropy) {
        this.extraEntropy = extraEntropy;
    }

    /**
     * Getter for <code>epoch_param.influence</code>.
     */
    public Double getInfluence() {
        return this.influence;
    }

    /**
     * Setter for <code>epoch_param.influence</code>.
     */
    public void setInfluence(Double influence) {
        this.influence = influence;
    }

    /**
     * Getter for <code>epoch_param.key_deposit</code>.
     */
    public BigInteger getKeyDeposit() {
        return this.keyDeposit;
    }

    /**
     * Setter for <code>epoch_param.key_deposit</code>.
     */
    public void setKeyDeposit(BigInteger keyDeposit) {
        this.keyDeposit = keyDeposit;
    }

    /**
     * Getter for <code>epoch_param.max_bh_size</code>.
     */
    public Integer getMaxBhSize() {
        return this.maxBhSize;
    }

    /**
     * Setter for <code>epoch_param.max_bh_size</code>.
     */
    public void setMaxBhSize(Integer maxBhSize) {
        this.maxBhSize = maxBhSize;
    }

    /**
     * Getter for <code>epoch_param.max_block_ex_mem</code>.
     */
    public BigInteger getMaxBlockExMem() {
        return this.maxBlockExMem;
    }

    /**
     * Setter for <code>epoch_param.max_block_ex_mem</code>.
     */
    public void setMaxBlockExMem(BigInteger maxBlockExMem) {
        this.maxBlockExMem = maxBlockExMem;
    }

    /**
     * Getter for <code>epoch_param.max_block_ex_steps</code>.
     */
    public BigInteger getMaxBlockExSteps() {
        return this.maxBlockExSteps;
    }

    /**
     * Setter for <code>epoch_param.max_block_ex_steps</code>.
     */
    public void setMaxBlockExSteps(BigInteger maxBlockExSteps) {
        this.maxBlockExSteps = maxBlockExSteps;
    }

    /**
     * Getter for <code>epoch_param.max_block_size</code>.
     */
    public Integer getMaxBlockSize() {
        return this.maxBlockSize;
    }

    /**
     * Setter for <code>epoch_param.max_block_size</code>.
     */
    public void setMaxBlockSize(Integer maxBlockSize) {
        this.maxBlockSize = maxBlockSize;
    }

    /**
     * Getter for <code>epoch_param.max_collateral_inputs</code>.
     */
    public Integer getMaxCollateralInputs() {
        return this.maxCollateralInputs;
    }

    /**
     * Setter for <code>epoch_param.max_collateral_inputs</code>.
     */
    public void setMaxCollateralInputs(Integer maxCollateralInputs) {
        this.maxCollateralInputs = maxCollateralInputs;
    }

    /**
     * Getter for <code>epoch_param.max_epoch</code>.
     */
    public Integer getMaxEpoch() {
        return this.maxEpoch;
    }

    /**
     * Setter for <code>epoch_param.max_epoch</code>.
     */
    public void setMaxEpoch(Integer maxEpoch) {
        this.maxEpoch = maxEpoch;
    }

    /**
     * Getter for <code>epoch_param.max_tx_ex_mem</code>.
     */
    public BigInteger getMaxTxExMem() {
        return this.maxTxExMem;
    }

    /**
     * Setter for <code>epoch_param.max_tx_ex_mem</code>.
     */
    public void setMaxTxExMem(BigInteger maxTxExMem) {
        this.maxTxExMem = maxTxExMem;
    }

    /**
     * Getter for <code>epoch_param.max_tx_ex_steps</code>.
     */
    public BigInteger getMaxTxExSteps() {
        return this.maxTxExSteps;
    }

    /**
     * Setter for <code>epoch_param.max_tx_ex_steps</code>.
     */
    public void setMaxTxExSteps(BigInteger maxTxExSteps) {
        this.maxTxExSteps = maxTxExSteps;
    }

    /**
     * Getter for <code>epoch_param.max_tx_size</code>.
     */
    public Integer getMaxTxSize() {
        return this.maxTxSize;
    }

    /**
     * Setter for <code>epoch_param.max_tx_size</code>.
     */
    public void setMaxTxSize(Integer maxTxSize) {
        this.maxTxSize = maxTxSize;
    }

    /**
     * Getter for <code>epoch_param.max_val_size</code>.
     */
    public BigInteger getMaxValSize() {
        return this.maxValSize;
    }

    /**
     * Setter for <code>epoch_param.max_val_size</code>.
     */
    public void setMaxValSize(BigInteger maxValSize) {
        this.maxValSize = maxValSize;
    }

    /**
     * Getter for <code>epoch_param.min_fee_a</code>.
     */
    public Integer getMinFeeA() {
        return this.minFeeA;
    }

    /**
     * Setter for <code>epoch_param.min_fee_a</code>.
     */
    public void setMinFeeA(Integer minFeeA) {
        this.minFeeA = minFeeA;
    }

    /**
     * Getter for <code>epoch_param.min_fee_b</code>.
     */
    public Integer getMinFeeB() {
        return this.minFeeB;
    }

    /**
     * Setter for <code>epoch_param.min_fee_b</code>.
     */
    public void setMinFeeB(Integer minFeeB) {
        this.minFeeB = minFeeB;
    }

    /**
     * Getter for <code>epoch_param.min_pool_cost</code>.
     */
    public BigInteger getMinPoolCost() {
        return this.minPoolCost;
    }

    /**
     * Setter for <code>epoch_param.min_pool_cost</code>.
     */
    public void setMinPoolCost(BigInteger minPoolCost) {
        this.minPoolCost = minPoolCost;
    }

    /**
     * Getter for <code>epoch_param.min_utxo_value</code>.
     */
    public BigInteger getMinUtxoValue() {
        return this.minUtxoValue;
    }

    /**
     * Setter for <code>epoch_param.min_utxo_value</code>.
     */
    public void setMinUtxoValue(BigInteger minUtxoValue) {
        this.minUtxoValue = minUtxoValue;
    }

    /**
     * Getter for <code>epoch_param.monetary_expand_rate</code>.
     */
    public Double getMonetaryExpandRate() {
        return this.monetaryExpandRate;
    }

    /**
     * Setter for <code>epoch_param.monetary_expand_rate</code>.
     */
    public void setMonetaryExpandRate(Double monetaryExpandRate) {
        this.monetaryExpandRate = monetaryExpandRate;
    }

    /**
     * Getter for <code>epoch_param.nonce</code>.
     */
    public String getNonce() {
        return this.nonce;
    }

    /**
     * Setter for <code>epoch_param.nonce</code>.
     */
    public void setNonce(String nonce) {
        this.nonce = nonce;
    }

    /**
     * Getter for <code>epoch_param.optimal_pool_count</code>.
     */
    public Integer getOptimalPoolCount() {
        return this.optimalPoolCount;
    }

    /**
     * Setter for <code>epoch_param.optimal_pool_count</code>.
     */
    public void setOptimalPoolCount(Integer optimalPoolCount) {
        this.optimalPoolCount = optimalPoolCount;
    }

    /**
     * Getter for <code>epoch_param.pool_deposit</code>.
     */
    public BigInteger getPoolDeposit() {
        return this.poolDeposit;
    }

    /**
     * Setter for <code>epoch_param.pool_deposit</code>.
     */
    public void setPoolDeposit(BigInteger poolDeposit) {
        this.poolDeposit = poolDeposit;
    }

    /**
     * Getter for <code>epoch_param.price_mem</code>.
     */
    public Double getPriceMem() {
        return this.priceMem;
    }

    /**
     * Setter for <code>epoch_param.price_mem</code>.
     */
    public void setPriceMem(Double priceMem) {
        this.priceMem = priceMem;
    }

    /**
     * Getter for <code>epoch_param.price_step</code>.
     */
    public Double getPriceStep() {
        return this.priceStep;
    }

    /**
     * Setter for <code>epoch_param.price_step</code>.
     */
    public void setPriceStep(Double priceStep) {
        this.priceStep = priceStep;
    }

    /**
     * Getter for <code>epoch_param.protocol_major</code>.
     */
    public Integer getProtocolMajor() {
        return this.protocolMajor;
    }

    /**
     * Setter for <code>epoch_param.protocol_major</code>.
     */
    public void setProtocolMajor(Integer protocolMajor) {
        this.protocolMajor = protocolMajor;
    }

    /**
     * Getter for <code>epoch_param.protocol_minor</code>.
     */
    public Integer getProtocolMinor() {
        return this.protocolMinor;
    }

    /**
     * Setter for <code>epoch_param.protocol_minor</code>.
     */
    public void setProtocolMinor(Integer protocolMinor) {
        this.protocolMinor = protocolMinor;
    }

    /**
     * Getter for <code>epoch_param.treasury_growth_rate</code>.
     */
    public Double getTreasuryGrowthRate() {
        return this.treasuryGrowthRate;
    }

    /**
     * Setter for <code>epoch_param.treasury_growth_rate</code>.
     */
    public void setTreasuryGrowthRate(Double treasuryGrowthRate) {
        this.treasuryGrowthRate = treasuryGrowthRate;
    }

    /**
     * Getter for <code>epoch_param.block_id</code>.
     */
    public Long getBlockId() {
        return this.blockId;
    }

    /**
     * Setter for <code>epoch_param.block_id</code>.
     */
    public void setBlockId(Long blockId) {
        this.blockId = blockId;
    }

    /**
     * Getter for <code>epoch_param.cost_model_id</code>.
     */
    public Long getCostModelId() {
        return this.costModelId;
    }

    /**
     * Setter for <code>epoch_param.cost_model_id</code>.
     */
    public void setCostModelId(Long costModelId) {
        this.costModelId = costModelId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final EpochParam other = (EpochParam) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.coinsPerUtxoSize == null) {
            if (other.coinsPerUtxoSize != null)
                return false;
        }
        else if (!this.coinsPerUtxoSize.equals(other.coinsPerUtxoSize))
            return false;
        if (this.collateralPercent == null) {
            if (other.collateralPercent != null)
                return false;
        }
        else if (!this.collateralPercent.equals(other.collateralPercent))
            return false;
        if (this.decentralisation == null) {
            if (other.decentralisation != null)
                return false;
        }
        else if (!this.decentralisation.equals(other.decentralisation))
            return false;
        if (this.epochNo == null) {
            if (other.epochNo != null)
                return false;
        }
        else if (!this.epochNo.equals(other.epochNo))
            return false;
        if (this.extraEntropy == null) {
            if (other.extraEntropy != null)
                return false;
        }
        else if (!this.extraEntropy.equals(other.extraEntropy))
            return false;
        if (this.influence == null) {
            if (other.influence != null)
                return false;
        }
        else if (!this.influence.equals(other.influence))
            return false;
        if (this.keyDeposit == null) {
            if (other.keyDeposit != null)
                return false;
        }
        else if (!this.keyDeposit.equals(other.keyDeposit))
            return false;
        if (this.maxBhSize == null) {
            if (other.maxBhSize != null)
                return false;
        }
        else if (!this.maxBhSize.equals(other.maxBhSize))
            return false;
        if (this.maxBlockExMem == null) {
            if (other.maxBlockExMem != null)
                return false;
        }
        else if (!this.maxBlockExMem.equals(other.maxBlockExMem))
            return false;
        if (this.maxBlockExSteps == null) {
            if (other.maxBlockExSteps != null)
                return false;
        }
        else if (!this.maxBlockExSteps.equals(other.maxBlockExSteps))
            return false;
        if (this.maxBlockSize == null) {
            if (other.maxBlockSize != null)
                return false;
        }
        else if (!this.maxBlockSize.equals(other.maxBlockSize))
            return false;
        if (this.maxCollateralInputs == null) {
            if (other.maxCollateralInputs != null)
                return false;
        }
        else if (!this.maxCollateralInputs.equals(other.maxCollateralInputs))
            return false;
        if (this.maxEpoch == null) {
            if (other.maxEpoch != null)
                return false;
        }
        else if (!this.maxEpoch.equals(other.maxEpoch))
            return false;
        if (this.maxTxExMem == null) {
            if (other.maxTxExMem != null)
                return false;
        }
        else if (!this.maxTxExMem.equals(other.maxTxExMem))
            return false;
        if (this.maxTxExSteps == null) {
            if (other.maxTxExSteps != null)
                return false;
        }
        else if (!this.maxTxExSteps.equals(other.maxTxExSteps))
            return false;
        if (this.maxTxSize == null) {
            if (other.maxTxSize != null)
                return false;
        }
        else if (!this.maxTxSize.equals(other.maxTxSize))
            return false;
        if (this.maxValSize == null) {
            if (other.maxValSize != null)
                return false;
        }
        else if (!this.maxValSize.equals(other.maxValSize))
            return false;
        if (this.minFeeA == null) {
            if (other.minFeeA != null)
                return false;
        }
        else if (!this.minFeeA.equals(other.minFeeA))
            return false;
        if (this.minFeeB == null) {
            if (other.minFeeB != null)
                return false;
        }
        else if (!this.minFeeB.equals(other.minFeeB))
            return false;
        if (this.minPoolCost == null) {
            if (other.minPoolCost != null)
                return false;
        }
        else if (!this.minPoolCost.equals(other.minPoolCost))
            return false;
        if (this.minUtxoValue == null) {
            if (other.minUtxoValue != null)
                return false;
        }
        else if (!this.minUtxoValue.equals(other.minUtxoValue))
            return false;
        if (this.monetaryExpandRate == null) {
            if (other.monetaryExpandRate != null)
                return false;
        }
        else if (!this.monetaryExpandRate.equals(other.monetaryExpandRate))
            return false;
        if (this.nonce == null) {
            if (other.nonce != null)
                return false;
        }
        else if (!this.nonce.equals(other.nonce))
            return false;
        if (this.optimalPoolCount == null) {
            if (other.optimalPoolCount != null)
                return false;
        }
        else if (!this.optimalPoolCount.equals(other.optimalPoolCount))
            return false;
        if (this.poolDeposit == null) {
            if (other.poolDeposit != null)
                return false;
        }
        else if (!this.poolDeposit.equals(other.poolDeposit))
            return false;
        if (this.priceMem == null) {
            if (other.priceMem != null)
                return false;
        }
        else if (!this.priceMem.equals(other.priceMem))
            return false;
        if (this.priceStep == null) {
            if (other.priceStep != null)
                return false;
        }
        else if (!this.priceStep.equals(other.priceStep))
            return false;
        if (this.protocolMajor == null) {
            if (other.protocolMajor != null)
                return false;
        }
        else if (!this.protocolMajor.equals(other.protocolMajor))
            return false;
        if (this.protocolMinor == null) {
            if (other.protocolMinor != null)
                return false;
        }
        else if (!this.protocolMinor.equals(other.protocolMinor))
            return false;
        if (this.treasuryGrowthRate == null) {
            if (other.treasuryGrowthRate != null)
                return false;
        }
        else if (!this.treasuryGrowthRate.equals(other.treasuryGrowthRate))
            return false;
        if (this.blockId == null) {
            if (other.blockId != null)
                return false;
        }
        else if (!this.blockId.equals(other.blockId))
            return false;
        if (this.costModelId == null) {
            if (other.costModelId != null)
                return false;
        }
        else if (!this.costModelId.equals(other.costModelId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.coinsPerUtxoSize == null) ? 0 : this.coinsPerUtxoSize.hashCode());
        result = prime * result + ((this.collateralPercent == null) ? 0 : this.collateralPercent.hashCode());
        result = prime * result + ((this.decentralisation == null) ? 0 : this.decentralisation.hashCode());
        result = prime * result + ((this.epochNo == null) ? 0 : this.epochNo.hashCode());
        result = prime * result + ((this.extraEntropy == null) ? 0 : this.extraEntropy.hashCode());
        result = prime * result + ((this.influence == null) ? 0 : this.influence.hashCode());
        result = prime * result + ((this.keyDeposit == null) ? 0 : this.keyDeposit.hashCode());
        result = prime * result + ((this.maxBhSize == null) ? 0 : this.maxBhSize.hashCode());
        result = prime * result + ((this.maxBlockExMem == null) ? 0 : this.maxBlockExMem.hashCode());
        result = prime * result + ((this.maxBlockExSteps == null) ? 0 : this.maxBlockExSteps.hashCode());
        result = prime * result + ((this.maxBlockSize == null) ? 0 : this.maxBlockSize.hashCode());
        result = prime * result + ((this.maxCollateralInputs == null) ? 0 : this.maxCollateralInputs.hashCode());
        result = prime * result + ((this.maxEpoch == null) ? 0 : this.maxEpoch.hashCode());
        result = prime * result + ((this.maxTxExMem == null) ? 0 : this.maxTxExMem.hashCode());
        result = prime * result + ((this.maxTxExSteps == null) ? 0 : this.maxTxExSteps.hashCode());
        result = prime * result + ((this.maxTxSize == null) ? 0 : this.maxTxSize.hashCode());
        result = prime * result + ((this.maxValSize == null) ? 0 : this.maxValSize.hashCode());
        result = prime * result + ((this.minFeeA == null) ? 0 : this.minFeeA.hashCode());
        result = prime * result + ((this.minFeeB == null) ? 0 : this.minFeeB.hashCode());
        result = prime * result + ((this.minPoolCost == null) ? 0 : this.minPoolCost.hashCode());
        result = prime * result + ((this.minUtxoValue == null) ? 0 : this.minUtxoValue.hashCode());
        result = prime * result + ((this.monetaryExpandRate == null) ? 0 : this.monetaryExpandRate.hashCode());
        result = prime * result + ((this.nonce == null) ? 0 : this.nonce.hashCode());
        result = prime * result + ((this.optimalPoolCount == null) ? 0 : this.optimalPoolCount.hashCode());
        result = prime * result + ((this.poolDeposit == null) ? 0 : this.poolDeposit.hashCode());
        result = prime * result + ((this.priceMem == null) ? 0 : this.priceMem.hashCode());
        result = prime * result + ((this.priceStep == null) ? 0 : this.priceStep.hashCode());
        result = prime * result + ((this.protocolMajor == null) ? 0 : this.protocolMajor.hashCode());
        result = prime * result + ((this.protocolMinor == null) ? 0 : this.protocolMinor.hashCode());
        result = prime * result + ((this.treasuryGrowthRate == null) ? 0 : this.treasuryGrowthRate.hashCode());
        result = prime * result + ((this.blockId == null) ? 0 : this.blockId.hashCode());
        result = prime * result + ((this.costModelId == null) ? 0 : this.costModelId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("EpochParam (");

        sb.append(id);
        sb.append(", ").append(coinsPerUtxoSize);
        sb.append(", ").append(collateralPercent);
        sb.append(", ").append(decentralisation);
        sb.append(", ").append(epochNo);
        sb.append(", ").append(extraEntropy);
        sb.append(", ").append(influence);
        sb.append(", ").append(keyDeposit);
        sb.append(", ").append(maxBhSize);
        sb.append(", ").append(maxBlockExMem);
        sb.append(", ").append(maxBlockExSteps);
        sb.append(", ").append(maxBlockSize);
        sb.append(", ").append(maxCollateralInputs);
        sb.append(", ").append(maxEpoch);
        sb.append(", ").append(maxTxExMem);
        sb.append(", ").append(maxTxExSteps);
        sb.append(", ").append(maxTxSize);
        sb.append(", ").append(maxValSize);
        sb.append(", ").append(minFeeA);
        sb.append(", ").append(minFeeB);
        sb.append(", ").append(minPoolCost);
        sb.append(", ").append(minUtxoValue);
        sb.append(", ").append(monetaryExpandRate);
        sb.append(", ").append(nonce);
        sb.append(", ").append(optimalPoolCount);
        sb.append(", ").append(poolDeposit);
        sb.append(", ").append(priceMem);
        sb.append(", ").append(priceStep);
        sb.append(", ").append(protocolMajor);
        sb.append(", ").append(protocolMinor);
        sb.append(", ").append(treasuryGrowthRate);
        sb.append(", ").append(blockId);
        sb.append(", ").append(costModelId);

        sb.append(")");
        return sb.toString();
    }
}
