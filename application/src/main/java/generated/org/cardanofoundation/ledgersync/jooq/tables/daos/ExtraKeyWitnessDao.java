/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.ledgersync.jooq.tables.daos;


import java.util.List;
import java.util.Optional;

import org.cardanofoundation.ledgersync.jooq.AbstractSpringDAOImpl;
import org.cardanofoundation.ledgersync.jooq.tables.ExtraKeyWitness;
import org.cardanofoundation.ledgersync.jooq.tables.records.ExtraKeyWitnessRecord;
import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class ExtraKeyWitnessDao extends AbstractSpringDAOImpl<ExtraKeyWitnessRecord, org.cardanofoundation.ledgersync.jooq.tables.pojos.ExtraKeyWitness, Long> {

    /**
     * Create a new ExtraKeyWitnessDao without any configuration
     */
    public ExtraKeyWitnessDao() {
        super(ExtraKeyWitness.EXTRA_KEY_WITNESS, org.cardanofoundation.ledgersync.jooq.tables.pojos.ExtraKeyWitness.class);
    }

    /**
     * Create a new ExtraKeyWitnessDao with an attached configuration
     */
    @Autowired
    public ExtraKeyWitnessDao(Configuration configuration) {
        super(ExtraKeyWitness.EXTRA_KEY_WITNESS, org.cardanofoundation.ledgersync.jooq.tables.pojos.ExtraKeyWitness.class, configuration);
    }

    @Override
    public Long getId(org.cardanofoundation.ledgersync.jooq.tables.pojos.ExtraKeyWitness object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.ExtraKeyWitness> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ExtraKeyWitness.EXTRA_KEY_WITNESS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.ExtraKeyWitness> fetchById(Long... values) {
        return fetch(ExtraKeyWitness.EXTRA_KEY_WITNESS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.cardanofoundation.ledgersync.jooq.tables.pojos.ExtraKeyWitness fetchOneById(Long value) {
        return fetchOne(ExtraKeyWitness.EXTRA_KEY_WITNESS.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<org.cardanofoundation.ledgersync.jooq.tables.pojos.ExtraKeyWitness> fetchOptionalById(Long value) {
        return fetchOptional(ExtraKeyWitness.EXTRA_KEY_WITNESS.ID, value);
    }

    /**
     * Fetch records that have <code>hash BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.ExtraKeyWitness> fetchRangeOfHash(String lowerInclusive, String upperInclusive) {
        return fetchRange(ExtraKeyWitness.EXTRA_KEY_WITNESS.HASH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>hash IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.ExtraKeyWitness> fetchByHash(String... values) {
        return fetch(ExtraKeyWitness.EXTRA_KEY_WITNESS.HASH, values);
    }

    /**
     * Fetch a unique record that has <code>hash = value</code>
     */
    public org.cardanofoundation.ledgersync.jooq.tables.pojos.ExtraKeyWitness fetchOneByHash(String value) {
        return fetchOne(ExtraKeyWitness.EXTRA_KEY_WITNESS.HASH, value);
    }

    /**
     * Fetch a unique record that has <code>hash = value</code>
     */
    public Optional<org.cardanofoundation.ledgersync.jooq.tables.pojos.ExtraKeyWitness> fetchOptionalByHash(String value) {
        return fetchOptional(ExtraKeyWitness.EXTRA_KEY_WITNESS.HASH, value);
    }

    /**
     * Fetch records that have <code>tx_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.ExtraKeyWitness> fetchRangeOfTxId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ExtraKeyWitness.EXTRA_KEY_WITNESS.TX_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tx_id IN (values)</code>
     */
    public List<org.cardanofoundation.ledgersync.jooq.tables.pojos.ExtraKeyWitness> fetchByTxId(Long... values) {
        return fetch(ExtraKeyWitness.EXTRA_KEY_WITNESS.TX_ID, values);
    }
}
