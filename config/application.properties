################## Network Configuration ###########
# Provide network details
####################################################
store.cardano.host=preprod-node.world.dev.cardano.org
store.cardano.port=30000
store.cardano.protocol-magic=1

#store.cardano.host=relays-new.cardano-mainnet.iohk.io
#store.cardano.port=3001
#store.cardano.protocol-magic=764824073

#store.cardano.host=preview-node.world.dev.cardano.org
#store.cardano.port=30002
#store.cardano.protocol-magic=2

#store.cardano.host=sanchonet-node.play.dev.cardano.org
#store.cardano.port=3001
#store.cardano.protocol-magic=4

# mainnet, preprod, preview,sanchonet
NETWORK=preprod

##################### Postgres DB #######################
spring.datasource.url=jdbc:postgresql://localhost:5432/ledger_sync?currentSchema=ledger_sync
spring.datasource.username=postgres
spring.datasource.password=1

################## Aggregation App Specific Properties ###########
#store.account.initial-balance-snapshot-block=1950000

#store.account.balance-calc-job-batch-size=500
#store.account.balance-calc-job-partition-size=5

#store.admin.health-check-interval=60
#store.admin.auto-recovery-enabled=true

################ Local Node Configuration for Node-to-Client (Optional) ######
# Most of the information are fetched through remote
# host and port configured in the previous section but current protocol parameters could be fetched through "Node Socket" file of
# local Cardano node using node-to-client protocol
# If a local node configuration is not found, those data is ignored
# Alternatively, Local node socket for node-to-client protocol can be exposed to remote client
# using relay like "socat". In that case, set cardano.n2c.host and cardano.n2c.port

#store.cardano.n2c-node-socket-path=/home/Cardano/Setups/node/preprod/data/node-ipc/node.socket
#store.cardano.n2c-host=127.0.0.1
#store.cardano.n2c-port=3089